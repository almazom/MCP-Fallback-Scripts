{"knowledge_relations":[{"id":4940,"source_id":"3d4e84da-d325-4d99-ac74-ff9d2132f201","target_id":"2f4d8af4-e2b1-483a-b53a-296c8fb41020","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3d4e84da-d325-4d99-ac74-ff9d2132f201 -\u003e 2f4d8af4-e2b1-483a-b53a-296c8fb41020","gmt_create":"2025-09-15T21:35:05.168308177+03:00","gmt_modified":"2025-09-15T21:35:05.168308258+03:00"},{"id":4941,"source_id":"3d4e84da-d325-4d99-ac74-ff9d2132f201","target_id":"4a415af4-9d3b-4f29-8bab-5f4bd605b18d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3d4e84da-d325-4d99-ac74-ff9d2132f201 -\u003e 4a415af4-9d3b-4f29-8bab-5f4bd605b18d","gmt_create":"2025-09-15T21:35:05.185620389+03:00","gmt_modified":"2025-09-15T21:35:05.18562046+03:00"},{"id":4942,"source_id":"3d4e84da-d325-4d99-ac74-ff9d2132f201","target_id":"a090c4f4-30c7-4844-9b39-faf10650cb9c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3d4e84da-d325-4d99-ac74-ff9d2132f201 -\u003e a090c4f4-30c7-4844-9b39-faf10650cb9c","gmt_create":"2025-09-15T21:35:05.196550049+03:00","gmt_modified":"2025-09-15T21:35:05.196550129+03:00"},{"id":4943,"source_id":"3d4e84da-d325-4d99-ac74-ff9d2132f201","target_id":"5734c5e5-904d-4c56-be84-483d1bf1a0e6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3d4e84da-d325-4d99-ac74-ff9d2132f201 -\u003e 5734c5e5-904d-4c56-be84-483d1bf1a0e6","gmt_create":"2025-09-15T21:35:05.222336949+03:00","gmt_modified":"2025-09-15T21:35:05.222337019+03:00"},{"id":4944,"source_id":"68f472c0-9702-4084-96ea-b0c3cb83f842","target_id":"d5caf363-8d5d-4ce1-8dec-3775f3c81a26","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 68f472c0-9702-4084-96ea-b0c3cb83f842 -\u003e d5caf363-8d5d-4ce1-8dec-3775f3c81a26","gmt_create":"2025-09-15T21:35:05.236562105+03:00","gmt_modified":"2025-09-15T21:35:05.236562175+03:00"},{"id":4945,"source_id":"68f472c0-9702-4084-96ea-b0c3cb83f842","target_id":"76eecd4a-b7d4-4acf-a153-c2b8040db0d7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 68f472c0-9702-4084-96ea-b0c3cb83f842 -\u003e 76eecd4a-b7d4-4acf-a153-c2b8040db0d7","gmt_create":"2025-09-15T21:35:05.244319467+03:00","gmt_modified":"2025-09-15T21:35:05.244319527+03:00"},{"id":4946,"source_id":"68f472c0-9702-4084-96ea-b0c3cb83f842","target_id":"5798dcab-e4ae-4240-a784-38225b35d0fa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 68f472c0-9702-4084-96ea-b0c3cb83f842 -\u003e 5798dcab-e4ae-4240-a784-38225b35d0fa","gmt_create":"2025-09-15T21:35:05.253734657+03:00","gmt_modified":"2025-09-15T21:35:05.253734737+03:00"},{"id":4947,"source_id":"68f472c0-9702-4084-96ea-b0c3cb83f842","target_id":"40b3427e-56c5-4fb5-879d-312de3390819","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 68f472c0-9702-4084-96ea-b0c3cb83f842 -\u003e 40b3427e-56c5-4fb5-879d-312de3390819","gmt_create":"2025-09-15T21:35:05.263899882+03:00","gmt_modified":"2025-09-15T21:35:05.263899963+03:00"},{"id":4948,"source_id":"68f472c0-9702-4084-96ea-b0c3cb83f842","target_id":"3d9c10c7-2c88-4609-8680-c14f6567fb99","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 68f472c0-9702-4084-96ea-b0c3cb83f842 -\u003e 3d9c10c7-2c88-4609-8680-c14f6567fb99","gmt_create":"2025-09-15T21:35:05.274496551+03:00","gmt_modified":"2025-09-15T21:35:05.274496621+03:00"},{"id":4949,"source_id":"68f472c0-9702-4084-96ea-b0c3cb83f842","target_id":"9a28f1d9-1546-4324-84cf-68a00e4a9d77","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 68f472c0-9702-4084-96ea-b0c3cb83f842 -\u003e 9a28f1d9-1546-4324-84cf-68a00e4a9d77","gmt_create":"2025-09-15T21:35:05.286302873+03:00","gmt_modified":"2025-09-15T21:35:05.286302933+03:00"},{"id":4950,"source_id":"879dcdd1-435c-4865-b20d-e6d3464e0284","target_id":"7b811cb3-21a2-479d-bfd7-aecb48d0fc5e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 879dcdd1-435c-4865-b20d-e6d3464e0284 -\u003e 7b811cb3-21a2-479d-bfd7-aecb48d0fc5e","gmt_create":"2025-09-15T21:35:05.294226424+03:00","gmt_modified":"2025-09-15T21:35:05.294226484+03:00"},{"id":4951,"source_id":"879dcdd1-435c-4865-b20d-e6d3464e0284","target_id":"fe47116f-0231-4771-bcee-c75a15c42d71","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 879dcdd1-435c-4865-b20d-e6d3464e0284 -\u003e fe47116f-0231-4771-bcee-c75a15c42d71","gmt_create":"2025-09-15T21:35:05.302615192+03:00","gmt_modified":"2025-09-15T21:35:05.302615283+03:00"},{"id":4952,"source_id":"879dcdd1-435c-4865-b20d-e6d3464e0284","target_id":"c20ea687-b979-496f-ae9b-dd9558783f0b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 879dcdd1-435c-4865-b20d-e6d3464e0284 -\u003e c20ea687-b979-496f-ae9b-dd9558783f0b","gmt_create":"2025-09-15T21:35:05.312560649+03:00","gmt_modified":"2025-09-15T21:35:05.312560719+03:00"},{"id":4953,"source_id":"879dcdd1-435c-4865-b20d-e6d3464e0284","target_id":"4d95b056-7940-4726-96c7-4f9fea11fd15","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 879dcdd1-435c-4865-b20d-e6d3464e0284 -\u003e 4d95b056-7940-4726-96c7-4f9fea11fd15","gmt_create":"2025-09-15T21:35:05.321506274+03:00","gmt_modified":"2025-09-15T21:35:05.321506335+03:00"},{"id":4954,"source_id":"9c1a0fc3-5908-4c06-a87b-c253bfb25488","target_id":"c2857a08-fc3a-4e6f-a383-8342a7be40aa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9c1a0fc3-5908-4c06-a87b-c253bfb25488 -\u003e c2857a08-fc3a-4e6f-a383-8342a7be40aa","gmt_create":"2025-09-15T21:35:05.33030139+03:00","gmt_modified":"2025-09-15T21:35:05.33030147+03:00"},{"id":4955,"source_id":"9c1a0fc3-5908-4c06-a87b-c253bfb25488","target_id":"09b30c1a-765e-4e5c-a15e-ebc2a552c785","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9c1a0fc3-5908-4c06-a87b-c253bfb25488 -\u003e 09b30c1a-765e-4e5c-a15e-ebc2a552c785","gmt_create":"2025-09-15T21:35:05.33730011+03:00","gmt_modified":"2025-09-15T21:35:05.33730018+03:00"},{"id":4956,"source_id":"9c1a0fc3-5908-4c06-a87b-c253bfb25488","target_id":"19b746f7-74fa-460e-9650-cf163f326e63","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9c1a0fc3-5908-4c06-a87b-c253bfb25488 -\u003e 19b746f7-74fa-460e-9650-cf163f326e63","gmt_create":"2025-09-15T21:35:05.344085794+03:00","gmt_modified":"2025-09-15T21:35:05.344085864+03:00"},{"id":4957,"source_id":"e4823770-5631-450d-bc89-7c1c06d2f005","target_id":"3c0da9e2-b1c8-4b66-8b4c-8348ab0fb34a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e4823770-5631-450d-bc89-7c1c06d2f005 -\u003e 3c0da9e2-b1c8-4b66-8b4c-8348ab0fb34a","gmt_create":"2025-09-15T21:35:05.356319691+03:00","gmt_modified":"2025-09-15T21:35:05.356319751+03:00"},{"id":4958,"source_id":"e4823770-5631-450d-bc89-7c1c06d2f005","target_id":"a11dd5c3-36ee-4027-ad3d-f613ad0c99ba","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e4823770-5631-450d-bc89-7c1c06d2f005 -\u003e a11dd5c3-36ee-4027-ad3d-f613ad0c99ba","gmt_create":"2025-09-15T21:35:05.372159612+03:00","gmt_modified":"2025-09-15T21:35:05.372159682+03:00"},{"id":4959,"source_id":"e4823770-5631-450d-bc89-7c1c06d2f005","target_id":"571aee27-bb66-40c4-91a0-b20c7d733470","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e4823770-5631-450d-bc89-7c1c06d2f005 -\u003e 571aee27-bb66-40c4-91a0-b20c7d733470","gmt_create":"2025-09-15T21:35:05.386043029+03:00","gmt_modified":"2025-09-15T21:35:05.3860431+03:00"},{"id":4960,"source_id":"e4823770-5631-450d-bc89-7c1c06d2f005","target_id":"c4df798e-8fc4-442b-bc58-23daa0cd3cb1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e4823770-5631-450d-bc89-7c1c06d2f005 -\u003e c4df798e-8fc4-442b-bc58-23daa0cd3cb1","gmt_create":"2025-09-15T21:35:05.397491515+03:00","gmt_modified":"2025-09-15T21:35:05.397491595+03:00"},{"id":4961,"source_id":"a69b6c20-38f2-47b2-8352-944ec0ddbd74","target_id":"cbdfa890-1e50-45bd-830b-49012f122829","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a69b6c20-38f2-47b2-8352-944ec0ddbd74 -\u003e cbdfa890-1e50-45bd-830b-49012f122829","gmt_create":"2025-09-15T21:35:05.411525764+03:00","gmt_modified":"2025-09-15T21:35:05.411525834+03:00"},{"id":4962,"source_id":"a69b6c20-38f2-47b2-8352-944ec0ddbd74","target_id":"d9ba0417-e2e6-4ee5-b2f5-c5cf859a2235","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a69b6c20-38f2-47b2-8352-944ec0ddbd74 -\u003e d9ba0417-e2e6-4ee5-b2f5-c5cf859a2235","gmt_create":"2025-09-15T21:35:05.421316362+03:00","gmt_modified":"2025-09-15T21:35:05.421316443+03:00"},{"id":4963,"source_id":"a69b6c20-38f2-47b2-8352-944ec0ddbd74","target_id":"d8fdf2a2-ed60-43ac-a513-85b9ce89268b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a69b6c20-38f2-47b2-8352-944ec0ddbd74 -\u003e d8fdf2a2-ed60-43ac-a513-85b9ce89268b","gmt_create":"2025-09-15T21:35:05.433482924+03:00","gmt_modified":"2025-09-15T21:35:05.433482985+03:00"},{"id":4964,"source_id":"a69b6c20-38f2-47b2-8352-944ec0ddbd74","target_id":"443a9f57-6133-473f-af94-b812fe883ed5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a69b6c20-38f2-47b2-8352-944ec0ddbd74 -\u003e 443a9f57-6133-473f-af94-b812fe883ed5","gmt_create":"2025-09-15T21:35:05.445156809+03:00","gmt_modified":"2025-09-15T21:35:05.44515688+03:00"},{"id":4965,"source_id":"2f4d8af4-e2b1-483a-b53a-296c8fb41020","target_id":"25b7e402-66d0-48af-b396-1f18c6aa50fe","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2f4d8af4-e2b1-483a-b53a-296c8fb41020 -\u003e 25b7e402-66d0-48af-b396-1f18c6aa50fe","gmt_create":"2025-09-15T21:35:05.462044791+03:00","gmt_modified":"2025-09-15T21:35:05.462044861+03:00"},{"id":4966,"source_id":"2f4d8af4-e2b1-483a-b53a-296c8fb41020","target_id":"bd72e6c7-ba1b-4445-afcd-21846567f92f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2f4d8af4-e2b1-483a-b53a-296c8fb41020 -\u003e bd72e6c7-ba1b-4445-afcd-21846567f92f","gmt_create":"2025-09-15T21:35:05.48358752+03:00","gmt_modified":"2025-09-15T21:35:05.48358759+03:00"},{"id":4967,"source_id":"2f4d8af4-e2b1-483a-b53a-296c8fb41020","target_id":"3faa0780-3943-4f9d-92e5-85214fa5650a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2f4d8af4-e2b1-483a-b53a-296c8fb41020 -\u003e 3faa0780-3943-4f9d-92e5-85214fa5650a","gmt_create":"2025-09-15T21:35:05.492649321+03:00","gmt_modified":"2025-09-15T21:35:05.492649391+03:00"},{"id":4968,"source_id":"2f4d8af4-e2b1-483a-b53a-296c8fb41020","target_id":"1fcd652b-5d12-4368-b261-eb3a760e3d24","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2f4d8af4-e2b1-483a-b53a-296c8fb41020 -\u003e 1fcd652b-5d12-4368-b261-eb3a760e3d24","gmt_create":"2025-09-15T21:35:05.49891154+03:00","gmt_modified":"2025-09-15T21:35:05.49891162+03:00"},{"id":4969,"source_id":"4a415af4-9d3b-4f29-8bab-5f4bd605b18d","target_id":"385c41f2-01fd-46b9-b96a-cf655c37fbab","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4a415af4-9d3b-4f29-8bab-5f4bd605b18d -\u003e 385c41f2-01fd-46b9-b96a-cf655c37fbab","gmt_create":"2025-09-15T21:35:05.507790531+03:00","gmt_modified":"2025-09-15T21:35:05.507790611+03:00"},{"id":4970,"source_id":"4a415af4-9d3b-4f29-8bab-5f4bd605b18d","target_id":"9842037b-8c98-4f28-98b4-f23123463914","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4a415af4-9d3b-4f29-8bab-5f4bd605b18d -\u003e 9842037b-8c98-4f28-98b4-f23123463914","gmt_create":"2025-09-15T21:35:05.51571215+03:00","gmt_modified":"2025-09-15T21:35:05.51571222+03:00"},{"id":4971,"source_id":"4a415af4-9d3b-4f29-8bab-5f4bd605b18d","target_id":"ad3e2c7f-ae6f-4b31-ac0d-28142703fdd3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4a415af4-9d3b-4f29-8bab-5f4bd605b18d -\u003e ad3e2c7f-ae6f-4b31-ac0d-28142703fdd3","gmt_create":"2025-09-15T21:35:05.526842001+03:00","gmt_modified":"2025-09-15T21:35:05.526842082+03:00"},{"id":4972,"source_id":"4a415af4-9d3b-4f29-8bab-5f4bd605b18d","target_id":"188c2d24-3038-4d17-abc3-10969b0aba0b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4a415af4-9d3b-4f29-8bab-5f4bd605b18d -\u003e 188c2d24-3038-4d17-abc3-10969b0aba0b","gmt_create":"2025-09-15T21:35:05.545100645+03:00","gmt_modified":"2025-09-15T21:35:05.545100725+03:00"}],"wiki_catalogs":[{"id":"f09db685-51a9-4251-ad6d-c1173e2dd978","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Tool Overview \u0026 Core Value","description":"tool-overview","prompt":"Create comprehensive content for this section focused on the overall tool and its core value proposition. Explain the purpose of the FALLBACK_SCRIPTS CLI tool in managing Telegram messages through intelligent caching, filtering, and automation. Describe its architecture as a facade-driven system with bash orchestration and modular Python components. Document the relationship between the main entry point (telegram_manager.sh) and the core Python modules. Highlight key features such as message fetching, reading, sending, JSON export, and cache management. Include conceptual overviews for beginners and technical details for experienced developers, using terminology consistent with the codebase like 'border detection', 'smart cache', and 'TTL rules'. Provide practical examples demonstrating common use cases such as fetching recent messages or exporting data for analysis. Illustrate the high-level data flow from user command to output via cache or API call.","parent_id":"","order":0,"progress_status":"completed","dependent_files":"telegram_manager.sh,CALUDE.md","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.779137156+03:00","gmt_modified":"2025-09-15T21:14:55.957406589+03:00","raw_data":"WikiEncrypted:Osnn0yCfpr9b6tBLUhSQiRibsJlMnZ56j1BHRLlT6DZUz7/8/HXBSHO43iLnQWPIiDCIzobtnw3u/JSDnr/2AD2buix5S9gSOcqtzoGP/CFA2ySdPpxNZOja9gyHtJCBOFWTww6uObPue9rqcdzzTFP1R8jWjSIxmXeqOjePLh3FKlI2HfE2uP4Ow4+Wu5eEFuLIHjESsQOV7n9RROHW6Fec1ceVdx3h2gYuWLN3/5bimoyEppzrzDLAvZqOHbFLrNKh02Mla5mZ4Z2lNoZXEpuxwWtzlPApRKNmkf4gziDQTPzWCN5xtU2ycKebYm1fckO691JZ8O14eWnqpf0QEcxy7lhfv3+Kyf3z8ky9KCwl+kp9yLSVVZgeBaFj1O+XAv2Pe8oAWbSXnrTCvUnC55Daovp0rJ5+oUNCEZ6ISnBfl6sVaQGo6yS6k4DJ7KRqY/Af2tN1cBQ5f6bb9Ao2cBgAtDrR3CtHYiAufLtkOAx0IE7SPSfpKodDh7yVyMV7sM+9Q06gjEcb/JN5PNZ5E8UZvJ6oPVQxW20fqMV5uaYICV7n606JtrQ6XKrRxJosgyrLcQjErNgQ+1pIina8lN2I34KL/7NROEZ/knBMB7p0UljccFJntLMEB4aq40ik8VlWWwu6H1RWrn36NXVC7lmhq2hvBPGH1xDxpnhM9tm/JfZl0JCqyLLkfAC+E+5eqpEmy9uzwXYk77/WXsqMElM+z13i1+zWhK2COwUDmN/qPgEBMFg9FYP1Nmo8yOJ+8XZKuWx8ynfb1Z9MyWEmRitMo/w+GudYez5pDZPriR4EzRkz7p0qdYDcQf5T9u94SJRY0nEvqSOB4FuaFgtxtwEhKSHHBdTWLSY0li35zDDjxGd9KBRnU20lyT37ftBK8UFnbjNrDpc2H15iKYv3W7PRr9AMomasuHVmNBxDJQ2pE2HdAZrYignlTggsL86QmGXI2ZursIssoXLMKxJhN2bnPQgWKEJcY4esxtPr1Xq9Qe1C6NVqaBrFuCaVJvw64mrrQ9jntrOIp5YlJozrqU8H8lIARdRkGaxQl8JNFbzzO5QvDHmVywOb5rQWh6GyP6Gh/oOvVwoolsKf9A7VG3TLlsvMvvjhQXc/w1eOQ9WMaC3eeAUCiU+atVplUCS6Wye7AT9cXZ4donq69nOTN6eTrpsZHbHR3hzXEldmiTzU85SGeWZQcukq7SZehJsQR408I+CcCrDEghPSXa86yK4dBDQ6DMc6J3uGX9Xq3q+1QsEPC24vb7XcWziv3NnfmyjzhFrsu/51HFM41RXUVe7NuHE70hSrtfTebeLBqPK4atcT4uHs4inu5eBjOP2aZGsMVJRoNa0wK/+DTMqNxpLdXWBFDekJxTmNViXnm0GNq6KxKjTMoahcYb3Rlg5+7Ir1yZQ3gT7IbC0dbrzldEBnU7t8UUTO+PVuFcn5ab7KHfoqj7H3fTFd+eabSl7A8rM0bC3xVr1/IwVQZf4uaa7vbd/5EJ2XmoZsFU9nS+7cPoIjbLS4+BV5xLZ8SNFAxdeO9kx5S4jdlmL569JFbwlvlbuIyQ0RTtctWq4Jhffypi/XZQ+qT6E67r6MzJkEIY1BDXh8yFnbmPgRBj8hsHc2t9XBf9L0BMrB8pnJtunS8s613XWdFi+RYGum862CtFHChubaguXWvfOwelWz/IqmiYHQtWpuUoMcJLkXJ3MOG1HFNc5qBtiwmTfO5twMEi1L8bZZl40DvCkfOxhnElBecGGzeNibaYBJj1Nlzk1m7gV9Gat9ohwcciYPHJxWbNayXeg+qJvS5qQOfSOHASpHjPeFIqO1FB0tgFtGDlj8j1XowcbQ7dnTe2S66jIM","layer_level":0},{"id":"8ba8b779-0b84-4565-b92c-2395a9e7265a","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Core Architecture and Component Interactions","description":"core-architecture","prompt":"Create comprehensive content for this section focused on the core architecture of the FALLBACK_SCRIPTS tool. Explain the facade pattern implemented by telegram_manager.sh that orchestrates modular Python components for Telegram interaction. Detail the responsibilities of each core module: telegram_fetch.py for API message retrieval, telegram_cache.py for TTL-based cache management, telegram_filter.py for message filtering with border detection, and telegram_json_export.py for structured data export. Illustrate the data flow from user command through bash orchestration to Python execution and output generation. Document the integration between shell and Python layers, including environment variable propagation and working directory management. Include sequence diagrams showing control flow for common operations like 'read' and 'fetch'. Highlight how the architecture enables maintainability through separation of concerns and single responsibility principles.","parent_id":"f09db685-51a9-4251-ad6d-c1173e2dd978","order":0,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_fetch.py,scripts/telegram_tools/core/telegram_cache.py,scripts/telegram_tools/core/telegram_filter.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:38.821687253+03:00","gmt_modified":"2025-09-15T21:20:07.164230725+03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"3796eb1a-35d7-4d91-8046-9d2781cecf20","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Fetch Command","description":"fetch-command","prompt":"Develop detailed content for the fetch command implemented in telegram_manager.sh and telegram_fetch.py. Explain its purpose of retrieving messages from a Telegram channel via the Telethon API. Document the command syntax: 'fetch \u003cchannel\u003e [limit]', with default limit of 200 messages. Describe how the script changes directory to the core tools and invokes Python to execute telegram_fetch.py. Include examples such as fetching 100 messages from a channel. Explain integration with the caching system—note that fetch always retrieves fresh data and updates the cache. Detail error handling for missing channel arguments and API-level exceptions. Provide insights into performance considerations when retrieving large message volumes and suggest using fetch_large for extensive historical data. Link this command to the read and cache commands for full workflow context.","parent_id":"84bcc4a0-82f8-4ca2-88f0-fb5b6e4fbefd","order":0,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_fetch.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:49.137079775+03:00","gmt_modified":"2025-09-15T21:20:02.727329168+03:00","raw_data":"WikiEncrypted:7J2Z02irw7WK4JWclzBtgrGyT+EgcuXKxAf4JyskwoQmPVOsquvrJckCEtLz/RJF5J+heDwgz6VpT84SpTt32nNAvkDF5CJjVxoLSjdZJNIsUKOzc2GWcRapncvPw/zOCbKQmmfF3ITks2kgaIb2A+y0JVq3j0rWVv77gObccgdAexYzy7dxoudgjBnQeO8q1Q9kwVVru2Q1AaP5pUHRMeaR2LrOhPqgPbVgfBmZTq5DtcSn/o862XuPzincO/M/QKZZYoIAX3WMIUAJexNJ6rTi8ztp9jkQBck4SopCQPVWa/WCD7Sb+llCP/dNta78oGQi9flB6I4ZK88BX0ZHJksdXZc8/vgE9Qato02IvT9P1Bfse/BB0eqhYAr5O0qh7l0fQdYKuyVCe/9KzSf2vdGbmrWJ3wjcaMf4wi8MIYNfuJBuGvXAyBif8ZwGIQmrDYKV9hjo/FG/+A7nCSZa2Vmg7x4gCRs96nl+AwpqDe8nYNrDcAdM7Xn5nbgmg6ksESGKJgTJe37PuyUxctdR5gEtLr1lKvPXrxSl28kqND1pXmmUBXJkYUq8y4nE5tSV4u9LIjskp8TuHY6NACLymDsngYvVecP1IU2tpat0q3Ei+efWqfmA49UnuYbJWjAwvnFX4D6WwRZGsSZrFEMXWuTsEvGNifX2PwGPnUAv4jG4LQ2KzMlTLnnYEW/cWARRBbcZn/LnyLLuMhDURZqZsHjYpTplI46u4D0YRA+j4cuXYmSCwbc9LleJzV2ARsafaQyi+Gs9NmN3ix8xFEh7983JuTTwjk7zYzsFrzSI2d48HQFtSB15qoxNCx+4U4BtSirMez4zTXlj+Co2gVUM6zKURXlBltR8I9YDt8lkmxZyqI9U/NxddL5jP1t1ISPKK4td4J3NmFDNuEiGivQC6KU+1A1C+s71NnaVzwEaAqq0N+o2dcHByoeb7kLPlj95w0l34AYEpgyMASyFnoJ/zdb91nL/bgqMVE6M68zbNOsh93aquETknZVSCY+mw0NPWR1HdpARlkthAqGhDtVJXmgWJdJ7P5AJ1r0LJcHhRojXXxO8pugtG7D5xUT0Eafyh1awdzX+VToUIBBFdEYO0pLGH6UgKTiIZwX9IAJI++MftbeVu/CgZPVqT6TUqBH6IZikbpo3tGlI7wjVPgyOOf7UEW5zt0VKlutTpQUuRgBln1JWnvwohu+Q87v0MIei3Zqxy5n6OHaMj4LP3jSXJuW/kP8LmG1oVi7gSfqsCcbocmCtAguFiH27527iXhvavQ/nty4wW/EmQQHhq00rZKcikoKGlWwuj0QNXmQRK3JPspGr9+1n3VWE/I+9KMYqUSJq9G20dQW1VKFlIZdzlfeQuT4V1o3Qt3bzhnJ1iD7CzugpTPmF1Pnq0fXKo2jnxRksZntGtEQ7Irf6sutO14MMC7UKOjHuScmxUXMl0G7RHLMB2tdNrXU2011ROnAlX4JyxIDQadL7bxdgYP5bvA+uYvndrDXD23HowfO4OPKp0rkrJ0QUKC01a+w5lOiZ9pzdZBhIAmbGFKJDOz1UbisIkLUSsxh9cnn+9W+qnMqaUe4AOzBmETQ+6VbkA/WFNb1OttXO9iVYXUOIaFNzPB9wFdWcGqL+HmxyRFMTX6Kip2PoCN9E2p09N0JvWftJyjTm7TrvRJzaLW9AkSe5h4a56EN8D6fNksA2kZtcHSc=","layer_level":1},{"id":"d968152f-0a6c-4f8c-86b9-29ce56ab3b0e","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Cache Validation","description":"cache-validation","prompt":"Develop detailed content for the cache validation mechanism in the Caching System. Thoroughly explain how the is_cache_valid function determines cache freshness using TTL rules based on message recency and filter type (today, last:N, yesterday, specific dates). Document the interaction between cache filename timestamp extraction via get_cache_age_minutes and the predefined CACHE_TTL thresholds. Include concrete examples from the code showing how different filter types trigger different TTL values (5 minutes for 'today', 60 minutes for 'recent', 1440 minutes for 'archive'). Explain the integration with telegram_manager.sh and how validation prevents unnecessary API calls. Address common issues such as incorrect timestamp parsing or unexpected cache invalidation, along with troubleshooting steps and recovery procedures. Make the content accessible to beginners while providing technical depth on the time-based validation logic.","parent_id":"733fc1bf-6dda-4d10-bbce-d7a190da4823","order":0,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_cache.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:00.335792153+03:00","gmt_modified":"2025-09-15T21:20:57.391412854+03:00","raw_data":"WikiEncrypted:dAMSC70bWva9SabC1uic9lDjw2p1FF1nf1T5m6RvFrYlA5CXHIC7nzKpr204+oWmFU+D4D/s2/8H3/ejWgzvcTiK8QXI1+elVq3IQ9gqPqmDtqUYkWZ9s7eGSKDRBZub49UVbt/udo+vTg1DQJ6MJryFIfAZtT3XanhS4f/RdPL7FHL/vgmrp3aiJLfCwFXIFLDpTvVNDM6oGPZVAjEcEsEHvBHbbS8Iq+bF60r/s37jsaGxF3FBWK4LFbc873JVL8EQ8/S2BBX6TEAjAQGNfaq+7Mq1mjM/1svgjow2O0aG70OTE5l/kFFkxeaXiQNybaIiWp6iuMpd8+C3h0jTLGLhC5l8qwTgfSnc5ZnMVYtkSRp7LAn3GXEdDNXKaxE9Ebw59YL1h6UVSsm1Mdc8kPpSPJjwlmbUhGQMompULdG/O/EXj3oLEGZS/NkS0gWIsWZhG5FJnJO8Z0sMR27II6MdDMp8DjcCx8wshpMdg4UBCZmxKyRzaz7aWkc+KaWxM8v43DAScSqM+M/0w1BrgqgcQ35tzgOVD0d5Q6kIWFW8POReOQqx9796z/7aiVtxGcAQOp2kuor+UPvN8WDBInkGBrcBICLmXA3/3/F3HgguPjZtBqfJq7cxTJNKpmgbtYTm254aUvUo8CNGjnMyh3JtuWuOkAO58KeI9Bta4ttP76aNtQxSwzi8ODN9/pDu59GkS4h4yPhDkTMvpPmplAXO+IEYu/FfC4i9Qxy4YlQ4OI1XOsjr/bgp7JdKwajDcv/QLnhsCWF1YKFO+RNJVnLGEmQ7TzigpwrYo+4W1ZQ2BzjzdksAfrTT5yOoEIFkP8/Jev1+LLk8Q4lDK9RB0yHeVqbD6q73SuC42jfNqY7n66j9+q8yZ7OJmfTzHWT3Pj9iSOajC+BIivxTH/hG5U17qWwL0bAZqzZ3eTPAx/z29TamCvkLR5JawSfVWd6ptSOJnQ+auuD8/BrIxyEqr/xwiR1KthoQKq+QjRxTZfg7aTdo0KLzYLo3qjRKcRXXKiApkEPJMe1BuHaKm9XGV0vgmhVWaJrJa0kYQBcY+MPLG1Bdg+hjMjDQZx2yJRmbNdRfqPVwy5GzHTtYKuUuGlTxtrzxwy76TmfK7bspmCU+McgC8ZB9VM5W9DYk83f96K+FDzUZzWXKnWaiybQg9N1iEnH0ANYfilO8gfqwswjnONCQSTagPREwvbayR2rqYDicH6szxg1dNrp+OMWVYYSQ2RnQqcK+PNPR5LGz/uUId2u+JMIilFvJmtVKv4qOV37I30Pt4JGwTG30nsK5n/IvlWyH6/8fxCY1lRpnpL0QBC11BwjtQv46rhTDW/xNmqK+BjLNiulkeSYfnkepJdYNbk5Flb+0iMhJeWFifrFEzp/vB/7HlfJ6SaL85QpG/CuRCVaDnDDaAKgp2uHAiOQCqICoLvrxEBwAWGrYlkPonFw42IANJGV5T2ju0ER1lKFccSu/xcs7RhmGqU2h54udI3bl8PDa8NTsWtN1b6jWA823aCo1JGMZqihDEcjZFhn6JddcILmKO+BtlCrHsa8VkSsoLGgHMaMerVM+2yNAmER5oVNAF447OEJU9nZJ6Q3/+FFFqm9ckoGtoW1o6WtR6TpEEdbFJRXYJWiYufk=","layer_level":1},{"id":"80688897-b7d8-453e-8484-ec06ec6a9860","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Boundary-Aware Detection","description":"boundary-aware-detection","prompt":"Develop detailed content for the boundary-aware first message detection mechanism. Explain how this script addresses the challenge of timezone boundaries causing messages to appear under incorrect date sections in Telegram channels. Detail the implementation of cross-date section analysis by examining both the target date and previous day's message sections. Describe the logic for identifying early morning messages (00:00-06:00) in the previous day's section that likely belong to the target date. Document the time-to-minutes conversion function used for chronological comparison and the decision algorithm that determines the actual first message of the day. Include examples from the code showing how message candidates are extracted and compared. Explain the color-coded output system for user feedback and the conditions under which a boundary crossing is detected. Address common issues such as missing messages and edge cases in timezone transitions, and provide troubleshooting guidance for inaccurate detections.","parent_id":"83e2c111-02ec-4bb7-8d62-816662f21ec5","order":0,"progress_status":"completed","dependent_files":"tests/boundary_aware_first_message_detector.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:09.938299622+03:00","gmt_modified":"2025-09-15T21:21:03.048399303+03:00","raw_data":"WikiEncrypted:j+2A8rvjnFFVY+UoUP4qnoQZjMH36iH89Nf+WWV8hPF4vPLFKF7a3Ql5nfOGltKZA1ZujfwnAstYpmTmWxwFMU1/zaqbTOxkLEr/HNNWmi2qbBRDMwQP1k30dm8uPqmuzolP8DZQFifCJMC/WDvb+Z2CfXmzKSKdG5h+INyBojFQDnrkLOe9L3tqyUNE1HK1c5yTa491UMRVmdy/vd1XsLqDbM9lRGLmBVTAPRtSxtu16v0Q+spBBeGfAuRqIwftdXrRo2djz499z2BTFAU/ABEDPNK7AG9tcdfn2t+5c2u5EDnUQsM9Ow/SqcW6+T/6Ii/WO8RHqVCr+yVv9B3ib2mbiZGPoqP9Elfs06wFKX1tbEjEqw6DLL36ClmJ5cbPBoucK/ZJwj8xaGhu7GhAWc0gxp/OgJzorGFGeqHfk7geWl6oYJSllf5oJA3HGymoQWIvIKifwG1XmqTSWvnqw9SnMi2r08oxbrfhvNvr0PqN1tZ971sQuEHOW8XMq6hC1YNCSCqwLK53QzH6zGg6xIJ85VAStEp9rk6XqcJOdFBomj41DWoRjl4d0hZkE5iLVhoXbFY7FlRmfoK8VECMdK0hNeIroJrkTSz+EYT7H2ogaJNrFcE/jm0hfYOgpXkRpUrYVQJ1T5xhGAm9tl4JkHKfyDFWNAi2EUij5nrhhQqEpZSMEc1fh3oXKJ3mc+rxrkTVtHp3QuSxNhlKhPl3szGr51wpxbU59MihxMl2ut966Sln+67bWejVNhv5kopR0voNVnsd2LR2Y+AIeDWSXvObhtXRcMkNGftkImiyjy5VfDsdjYOJ7uvwrQADPBSiENPYW78M5Ti+ayO3tN/QOPmG5QA3jQgS6GprRwKawQ6nSCHmNY8ZV2c4TjaGIEIptpUp3NoHN/o4hZT7gLMrdb7bClOV4EqrFui0K1gUpv0YT9aFfO1wabLWEqkWellf1/CJGBM0pEzBoGHHm58PxT18yYdPuYJIrNrIkrAiftWPwXiLJCQY5vqKK/gQ8h8ZKm1RHkAZRYJGsbUp6cKPPkbnTgQ4QLp/ejr04t9JvJAw6aFpODw94HNhvAvuSG/O85cSGUpkkHhdVRsSaXNvxUrXp+fCX6UXtbZXsSgkCl+QSjVfQfH4KgoVMCETBXH2Xr9Ky8n3IQ/XncVA1SsLivmaWEbA6D0020pEiFm1u59N/3ou9tN4DEa9/2Fal4iON6cN4TS3sP4zNN43BZBWMlTdt5QOBdvqWbWhw0FcL1ffhP89kmtHgRJZ1S/a8Jdm+0P97jMrvuIfc936SHo2aGJhvxO9AfZtguJtqbfpWkL6w0H0Sl+BWYZ/dl0MHZmaRmHWNg4yfCeNkK0bzhODNZjJSsQqHmAiUWaC1r87zP0douxurjSFjarXQH2nA+90m5FoNCfvOeGI9KtSjMT49MLYsypOLvUCveu+GtS5qeUiRs4EjIlIV0bu82n1mpzdnOl70l0LVci0D01OHWUHdDGg6UnlZTvdwWFqpezfmFfioi+sfgFwTPKG9e2eqtRnqktaX5ekrEtsL1AfK3LvL5i7GObDPfp48e79x8GQlCKKQVRcWQ82qd1xG9QYGTT5F+0phwJ0ie1vH540qDFF7b9EJAd42TnBPqiUW42Al8qzBXhMYnwhA5LKGe9B8sPzYF744XqBUFCw3BqPEqm6pAb6ZnkRWdVhcFxBWqyWLBHpRCyEHBrGthb42id3Is00WJz1UtnHlYTtfMG6YYLEBVIApE7A+4vQdhRryCeKp2ut+wjieijtre3LxfmmkdbPBWBKsnCNhjHO5b9cDDBivIYNVu8fm9M5FrtfRE6DIv4GinJ/Mmm/6CF3pg46bHSs6SgabbJe57G8TDZNWxUPqOZfooRgtFJY08cafOO1Vcs=","layer_level":1},{"id":"631f75bf-2879-4820-9693-4c61411dfafe","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Unit Tests","description":"unit-tests","prompt":"Develop detailed content for this sub-feature focused on unit testing individual command parameters and behaviors. Explain how each test script isolates specific functionality such as range, limit, offset, channel, and date-based operations. Document the implementation of parameter validation, edge case handling, and expected output formatting. Include concrete examples from test_01_range_parameter.sh and test_05_date_today.sh to illustrate assertion patterns and shell-based testing techniques. Describe how these tests verify correct parsing and execution of atomic commands. Address common failures such as incorrect date parsing or limit overflow, and provide troubleshooting guidance. Highlight how unit tests serve as living documentation for expected CLI behavior.","parent_id":"ac41205e-f37d-4755-9517-8abc897425dc","order":0,"progress_status":"completed","dependent_files":"tests/test_01_range_parameter.sh,tests/test_01_range_simple.sh,tests/test_02_limit_parameter.sh,tests/test_02_limit_simple.sh,tests/test_03_offset_simple.sh,tests/test_04_channel_simple.sh,tests/test_05_date_today.sh,tests/test_date_calculations.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:20.462520238+03:00","gmt_modified":"2025-09-15T21:21:55.056860183+03:00","raw_data":"WikiEncrypted:oQ7VNoYBl3ApU4O5/TGa/eYw0F6q1qfcHQI6xP7hw69HzqxNkFBFk70Z51BTdbftr0CMXTtaEz8XKddWTBGQg6V2vmwE7asbWOXac7Hqdm39cgANb793M14ifz/3Vq0Y7P9Ro+CfMEt6EO5F7eja11A4Oa5RrTSJEmH7B59JUiuwj5D1e+AEQ7qCJFbvJ32EMP4rmwFApd+JziTypzzDPJpvnO8DCbcI1Y4oi0Yr1eLve3GrDIRVpUmYGmwb26WJzuwDl3pIiQVDaHD3nk9nueAMQAcDOPpCoG1K013xEfkJMbjQmBwPEHRHw2qyuP9U1+jTqWuhv2N4DN5J802C/P+1J+btkqVWgX5FwzUH2AZO06NnCQYgMaTlYnwPXWgibpk5EPS5Bf6u/nViXcEAmkXRC4e+SIo/Lqfh2AuOuqcP8aV7xnN0ZwhXuHd2rV7dovHv1xOIHH+tECzJjwjH0A17r0FLB3/qY6BdgXJiKbpXBNyglGlvJfUfNO2AdlnLTXJGwN1nBLDB84CrGtoDitZoVEQEB91mpaeBhvdOjMntpH8lZkW5RmE5tIQ2o9tDiRhGjrQBOvUYtarN3agjepMw9czFEPPq1F8PtuPcQZfKxw+QBM8hGTATFNp38Nr9//aAp1+823HX6yZHO5VS5epnYXkohljFY6M/RyVz7QJxnu5uTM9Y3czoapbO/bG0eQsCTh7GnBx3TiZPjksiz2DN+7C3eo20CxSDrfIzbQZcNpNj0woiFeB6P3Gp2u9ekeZEu1IUVlOK0u91FCIKqKX0ML/ETe6p15DTFCzWr4uorIjT6Jp4inWhorjD765hzBHWsI4Lu7gXtFSpZNKQqL+fKK/Zohfn/pJjxdWG5hFfNP16Qfs/5cx6kQpJnWzACn8XMmatvxdClEE3hflpGqIaTgEub8WV9hhde3hWDwXcQ/wHXe8Z4G+2uFfeUkW0+3pS26PwTwoEFs7KmIQ+IWB7aFXgaOlE3RmaIyasMsvANxDoASEz/DU7bvLNhppX6s05SwB/ZVa7EWsccjqE0lwau5mC9v7WpJvsf3z5SHwZ9Akk5SepzsTMrcITZHV3DUfkHkfLy3UJxHJFRj+iG2psdY2q8d+vFlN+uEnB9MjO1y2oRaNIoEAo3yse7OwGzJpWtcsx/e7dJmPyzviiFre6D0WRniq5Hl68evChVGNJrr+0qywBtE7o0Nvb06y4pTZpQAgbYoYAsFge+52aU2NLo3QfSag7S5b2BK8q5GgrZofF4rDg2OSCRe99gfbyakQEIkg3+XWt12u3Rsm2/MLpMaisDFEXfxdwj8+S8tFLSPaCDI6JZBP1ou0xd1Gz6s71BXWfsGTeHwLAYT+l5MsGFgzRNjxOmZztrWG8WHeoYfHjdRVTYuGCTX3UXxEZbnW+j/Ev0KBL2p8OPAj3NS0oXAUetHMSiJYKMaAHUtj5THLPoIoiVCX6oMrTgMDs2tOceuKtapPPGC4kcpb6AE17RwjjJIiw+PXOWtOxpd16fh+m+Qs4GSCyl5FowWKXAU+VzxJs9wBSF6ydg2wD1++OGK3WbfKBDj4QCdP7WPoT4Hawu45+cMB7jEyEFUfGU91X43G9HXdO5qkzOgVgBg8IHyy2gOy+Bz4M3xHjq20rxP9eXJZbYYjpBnI7kodJ652ll8QLpZXuglGFIjJFVaGrefNP+wNDknSmUNMIRZh3Zlia6/il7mUDaqSICvfqmSMruWd69uV563p0jp5JYoqCtfea6fXm6uaTHmZ4y24=","layer_level":1},{"id":"7e23f1c1-b9a4-4317-bbc2-36fa3c732253","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Scripting and Automation","description":"scripting-automation","prompt":"Develop detailed content for scripting and automation using the FALLBACK_SCRIPTS toolkit. Explain how to create shell scripts that chain multiple commands (fetch, filter, json, send) for automated message monitoring and alerting workflows. Provide real-world examples such as daily digest generation, anomaly detection via pattern filtering, and scheduled message relaying. Demonstrate integration with cron for periodic execution and error handling in unattended scripts. Show how to parse JSON output from telegram_json_export.py for downstream processing. Include best practices for logging, failure recovery, and avoiding rate limits. Reference test scripts like comprehensive_message_analysis.sh to illustrate robust pipeline design. Address common pitfalls like environment variable scoping and cache contention in concurrent scripts.","parent_id":"33439bf7-95ed-4964-9bc6-bec0c5d36f60","order":0,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_fetch.py,scripts/telegram_tools/core/telegram_filter.py,tests/comprehensive_message_analysis.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:29.358143081+03:00","gmt_modified":"2025-09-15T21:22:11.467289072+03:00","raw_data":"WikiEncrypted:JMwpWF0BBZx06HpfZvJKAmHi8xouHM1dWs66gfZhzGmzvdXJBt+IAvo0Ix2ckJIun5SGouFQ861l43JpJ2OAi4ku4xh2EInFkMA5Hu/PgMIt/YKxeOwYH2BvCtAd14QoHGmstOO97EodGsRkaUldGnXT8iS0BofVNOKSGVnTSsHg2gOsNr4kg3bhxexwY3ce1qbevgQSWnH2ptvgMsaCsHpb+8dcl02A8naEPsThF5nbLiqE6tfB5Xs853OoX9c2B7Tw4pGu192VcRy2+ZvfStp+/yyewGJAFv4oEkRAjOwD5wyiiztNL+7gdwySF/MW1jslwA6BQp3Sxa6UQmCQLP0lD+XcvhvVMrsPzbWA6A+8OblYScGrBWovv9MFPlGS5Pg5ziu/tFdjARno0W4xx1sM5ZLXjSd54zjcG3rd1a8VmOfW1DV5HCPqcVWLUb4oG4cX6u2BKzYDWGSYn3QsiWMeLpx/HwR6hX+/GJT0YdVIGghy5sSJ3IT3WlPd05mAt8/FenV2dWnISAwPUsnpRT3z6Z9JCTnlVS3ow0ZoY1xMC3rEyv4cxn3ZYKvqMn5zKNGzG8bVnIsp0D4MdjLLL5kMn0TyhgyobX/Irhvqyj757e8dhTOc4s/UF2xnDp/fEPKv8YaLoZdYXE1sTahIhACsCocIrb6e8yFGdB/36u6DgkYlhMApMQHrWV64FAJ7m9AlVMvEiuVgctNyRTwVpgfBDXO4FvVXNoeGyGUXjW4Syxeesk1IkMZcDVADiZYbvQ3RtUG5ZF6/MjnP/U+AdbJf/tBAzg6If7txWfvd9z0y92OeX4WHyk3gR8N5tXsokYRRN7RZtS/rFGs3o7ayfdpImQ/4olEev5mrXXoAWEywBkoAorKwHllnHvCPLCRh5qYJfPxOucPaDscG71V1GmgSIxEq84w/mvWgRbDvtQw39mi5VkheQzYmZMdEPgfx5vpExCU+CtwZKEOgZE3+ppLcilprUW/NkSYLb5u519Jf1qYFmvw4mbArx2uK6TouiAW2Ooyo2Bkv44l53a2BoHsy9rNMO2Tcts/mtDlL4TjJ1vb/W7KmGDKqoy6cnt4LczYF73TL/Xt2rkRD584EAfYtExpGZ4QED5QwN2pVbolFf0rSmrdz+y4m0xJR9M9iSwnHIPzkQtJvpIUg7mrKjBxtQhmokmC9zfVdz9MiSzulzPwMli8+rgZP5uYiMSUWupByH5xtznP4l669m9GB3PTl/OkwxAIRPLDjI9iUS3dshfLyfcDfzHQNihj4VQYJiMoCT9J8nktjOEojYHVVKY59wf3XRmQV9mgoKVTXetE2k5zSCEZbRFJQ4WWjbjIUHqV/cgVKYi8MRrQvunWV17byxziotGvpX4exz/W4TY5tFWu0P17hZpmdv3toa5HAt179GXGcqSQWlBrUPh5V5TKOQHbLh+qmoS3E7T4MBzcbOnEfFt5MKC66aPWekxymDkSlHQkLgWqIb7KV0U5TbvQqCNh8dwulTxSabUB2KewsMuRMQq6UB642wNktKkyg7FjOV62JNBSuYHcU1PF5SWp0NIUr6LBXFWPKwJ+eXzqhNRNAtxAOhaMrC4p+yIOGi3AEnWvVVgXb7Y730y9Vj/WoWt2FWCejc6xTDfEoUdqyiN49X59sz46UxYFA5F3Z","layer_level":1},{"id":"f0910a8b-726e-4ddd-a7f4-2c90b59c38f3","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Message Fetching Module","description":"fetch-module","prompt":"Develop detailed content for the message fetching module (telegram_fetch.py). Explain the implementation of the fetch_and_cache function that retrieves messages from Telegram using Telethon's GetHistoryRequest. Document how the module handles API authentication using credentials from the .env file, converts message data to include UTC and Moscow timestamps, and processes media content indicators. Describe the caching mechanism that saves messages in structured JSON format with metadata. Include examples of how to call the module directly with different parameters (limit, offset_id, suffix). Explain the error handling strategy and integration with the main telegram_manager.sh script. Address common issues like API connection failures and provide troubleshooting guidance.","parent_id":"8ba8b779-0b84-4565-b92c-2395a9e7265a","order":0,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_fetch.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:42.271242571+03:00","gmt_modified":"2025-09-15T21:31:53.871102382+03:00","raw_data":"WikiEncrypted:7J2Z02irw7WK4JWclzBtgpeY/x/geyrl36x/5i+E1Zarlns4iAayxrilAVI7bplEFSa92lPJTMxoVUroYWZNA5XvM+0qGPbqOXBedjZ972zkhauVdgqfUrYhX46ttma0hvHlxzED2pBDtKqSLmSkF850RYYiIZcMUI8R7b+3bKQFnN3vPqa8Hofj7X1dQnkOV6/tRyTbOGW13bfslZ2eUFYf0v0c6GiSKCU+0lADhgX7FXS2VUnMl24a6ZO7IoYFWTkR5SJG9hT+qjeRUlTbveqfPHGZh1E1frsU4rAI3e+mAZeYchrDwx/glIrGjxDIuIDMY/0cekmwR5e62c0TFeD2MeojQ5Jeu1+/9ligX9g5y/a7cDv4+9JgsSKOrEBXom74Qc491+PUfwP3eceSspATWw1JrbrMRx1Lnb2d9rCEEPLou735NilitwStL5HOFH9Jrt+YVeZdYxn/+WBmhvm2XiP1yUxaZnkVP+VUnLbGm9ihGd1j7+YuDhaXijioAtALQi/+UAGw1fDb0MHT321/SSHtrnCHKJ8YvhnfKcFFunPE98RA0S3kzHtAmuBHwF73260cFBAWf9abgHXQueaKoc+3saDX97TEIMQjYG8w1OzHFoLU0HvKRQxLqcMpw0bH73lujCQCNeAn3AKzl2fH/BBik5/GtXxAcORSoSeaaF5EpiUD51Wj63/aDHURp59ybG2S06jqPguf+nPVjqfI6Fr/mktc/U7NUeh5JBNaMZBY/8s90xzdOmUG4otZRl18hrRVYPhozx6Zwhvf1NsepMayVbHPv4q1S1uK8hmsgJCYMivDKmktNPMXXY5yGlOHEXMY68YVkOsmdvTMpSh4IythJ7WlPWTWH5GsagI2yV+pGdDTOyzOnqIvRNKumQzDZemhBfTZ/bzj//gTmNzqshKbH8HkfDxWf30F2ykN8vOxdlLBWk4LxuW7iZF7FgG8tIhx6roHQO1PUOxiNChKb2ld4J0AlVRSjVsm8uc4nTmfIZvyJZquTHjnJ0tDsSvqaBnn+UcMjaUXl3ghxN3wkMTk39koo5dvoiLyN5ipeOaTYFVSndPPHqXG+rcN6AudcfpbzCC2v1uqIVMQKjSTq9aEFaPOF8ETpibipe78MHHHuwxkB/q24kziV3ZCEFppaJrCWyOmNUv8YFOaGbR8Qls1IFKtU3KuIcoJa4kJFyputAL2u06wKaObaX7f7dpzPbVAc/KyHvPuWD3OHqyRleR2xF/Ahe0GvEzla4Ldg5E4cevvfxApSw3cRi7Jftj7JtCUflV9vsT8rIbEqJWOFmq0Ko4uU3WC0m4K7EQIq7y+tTBqPYuqKvzy0G1WEd2r4MzcFAd7wGLvb8JtFkXNUu0dzbpV9vb0WPdD9OiOyGsZw1zlX05Cal66Zn4sUs/JcGDxsR7ZxxBVlynhkVGhWnegaA3bO3PV6+yXj44E/7wIfNq+SIJsh6XvHsw5t7GSrKVDQHOyQkAyjKVIWYeXZf3G/e9QTRpHQi8qp5I=","layer_level":2},{"id":"3dff707d-f786-4427-aae1-0776ed48d2f3","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Message Management","description":"message-management","prompt":"Develop detailed content for message management functionality in the FALLBACK_SCRIPTS tool. Explain the fetch command's implementation using Telethon's iter_messages with configurable limits and offset handling for pagination. Document how the system handles media messages by enriching text content with appropriate emojis (📷, 📎, 📦) based on message type. Describe the message data model including fields like id, date_utc, date_msk, sender, views, forwards, and reply_to_id. Provide examples of fetching messages with different limits and channels, and explain the data flow from Telegram API to cache storage. Include error handling patterns and rate limiting considerations when interacting with the Telegram API. Address the message ordering behavior and the chronological vs reverse fetch strategies used in different scenarios.","parent_id":"b93ef46f-92d7-44c4-847e-82a1b1b2c17c","order":0,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_fetch.py,scripts/telegram_tools/core/telegram_fetch_large.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:57.789321995+03:00","gmt_modified":"2025-09-15T21:32:20.046684261+03:00","raw_data":"WikiEncrypted:IaaHBhg4aKVK2Z27STIpf3FcFUV/a3mbNQgqwx3g8SImhdBmB8mXDyq4GZxoGHXyN62AW5uQXYOYHp5rtw65kZDhULPdUAACa3ItGAw4zcuMDtHlcuZCnsHIyFklxjN/ylGrB00k6imAp1cZl5QQvevKX/0rltngpDc1Fn3DrgaZERgeQdFsgDBj7T+HdaNMIXW5O4wLWfLvFK+nht3s6PT82pbfXNLdRm+Bx2kU8PvzCKA0KWttW+61cWlXT5M3dJjXVoxaRu0gvTQjTc3y1RU/o/ajInuexQ6xklNYBxrLFiblO4Icld17aTMSDUXnavE6TNVI0rOEY5C4laUAmgPUwz6NE7P1cTEtrbD6v1ErVNoLVEobPsT5jemizFtyzJSmHGK2Tkli8u8KZK/1SbmMYi9xQdriR2v1r7KAXUOOLOp+IlURBBsPtWkwUjhpixViMA1VzJmacfLcISa8aIJZqdgK8FAZzb+dDSgtPt4Hs9+zjtgO8ydmZzkpRX9loUFCZnhMg4XgeBqQZHc0N1ILRlEbr7OefgYxG2vNDdZyUez5WOn3iCpW7PxMC1RMaFjE3MUkPPZfv3qtOU9iuLTFd9BYBIvll328UyIuRLqdiXlhdJAQv5USAZxxNw7fDU2Epm2QzKn4HSUaYD28xtx1zl+rSnrw5Qz4zufDCtKzFvlkTkKIvmpg6znN4NbDxcOU/muWs71IHFbfelFFeeCfDjAW1GDk8qFmKgCkCkjsjap8k+S4pLbaiG4HUac/GlNVI4Bj/TRcXJK0tx/jvb+I/4+SlzsnC+phhhaKN1gyBTWpzBSqj6GMnLm34ykfQdcPWm4Y4D/HSj1HXK4wzCZvWVx5LXQgDF+KAJuJozwou+3+t9Q8E5192hgJUKZRvzHNt/lqiQXdh8TrCfsJ5dj2GgpbrMcRzbYl9semscieOp+VsI0KhO2sIBjnrjI1+/58Fd80z1+afT1GLgrGNepV1D2cdNHVIG+VXOlGoWRiOn1VpbFTACWCuo+AUxNeD+ViPw2zOZ7W74QhrK8WUjhRhMkK8SHG8FZKHOi3JXWiJT7L/Gd3wM4uBKjGvWLZ/5kONtSANWafws9PI8d/j848LXKjESy0at1QZ4VXj0AcysKmgqr3qAsWgi4F7Y0oQcxv+tZ0z6Swvrc+aXC3JFj7fxR7IszTOtRI9eGgbn+th6KAdcekwnoeOOVAcJNas16X8In4GaCJEeW8FK6Sg2VDn0Zfq/HHu10wLHsjWc6Ld2wGSt8p2wjaKckGXru1thgUEU640nAkgGo1bX8dfpdB0HIjbze1S/cQARoE8aTAz65FO9mGA+1ca0M23TsDwZXku7mkK/dTJ3d/M12Kne5ok0AyJQ1gh/IZC56QT44D+LK9PJklRyv0pVUIhDLzfPDG8HCtmaJqj1ZhAv2nBc9mU9AXO4yes0x471lv+ICCrUvwz7FNkHiEt26CivX+uKUjX2dWFyBb0dkEdjGMLIjVjsJX454X12Q5MgzJlTAONRku143yJMA5A8JKsU0PVpAcZSCRxUby52DKOdvzKcnFsrTGoQmF0gJh9JzIYy8hTFiALV3+qrUUrbTKMmXBA3jPE33ytldqVGA6Lb3ppEWF372TZFtTecSO2EGegQIdTKJmN35udyTl2M2MtAnuKXVXG82Lm0x7UoWEnO7avG/FEeH8Ihn4LkhIQVX+Asmjie6M6G8Pre7+FjI1V52l3g0P7Lg+e4PDICpzXan9xw==","layer_level":2},{"id":"b497051f-82f5-4cae-b350-1488da9de1ee","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Installation \u0026 Setup","description":"installation-setup","prompt":"Create comprehensive content for this section focused on setting up the FALLBACK_SCRIPTS environment. Explain the prerequisites including Python 3, Bash, and Telethon library installation. Detail the configuration process using the .env file with required environment variables: TELEGRAM_API_ID, TELEGRAM_API_HASH, and TELEGRAM_SESSION. Provide step-by-step instructions for generating these credentials securely through Telegram's API portal and session string creation. Include code examples showing correct .env file formatting and permissions setup. Document common setup pitfalls such as incorrect API keys or malformed session strings, along with troubleshooting guidance. Explain how the telegram_manager.sh script locates and reads the configuration file. Address security considerations for credential storage and access control.","parent_id":"","order":1,"progress_status":"completed","dependent_files":"telegram_manager.sh,.env","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.793724451+03:00","gmt_modified":"2025-09-15T21:14:45.357750298+03:00","raw_data":"WikiEncrypted:6nDTd1wU0hYJuRoAJhne4b5ashHc1omfgy81/++xSBe2w9rUrWuXSbrEHiZ6Cy0qgHI5d3IpyoEw87N0yHil/UcTJ4KgQ8DWStDabJ0qczMrE4GTQybuKfcfZprbI4pbo55SFitRpL5kvtJvOyLYzHMLBpsKzm4e9LI0SruiQWMF2t3cVA3AOK60rlJsrE5oKUjJABgvHPOfNQtao8gPKcjnER9dIjoMz2pjQFpGNW9UdGrIGZGfhXiWcoukE0ftXG6+rF9CnpSKo6F+SZsnj5kDlwzEqaseKKwyBkwWDMTJlLuIBIztbbcK8ZP4TJzuFVWZzoc00hRby2q+JnHLh/oKBi9CsXQLUZscx0TbSwkLbzQtLDaWB3MnthBwlm8BopB10pbKOW0yOMfNzWU75H7wt27S4OdqSJxlwfg+xKzjGdU+biSxA/4MWzBKS6d+BDR1NeJqbuUOlVDsIQrZghF61T9vc1hlL4zsiRfAXbRddEMPIXjr5HDercNB8/yH8n7BiGZpgc3CL1eMAQWyyqMczV6ZXa1rmxG2wO7EkJWS97TJCmRTJrS950ce/FE35WAMWtsnsWQR9i5/7tiee+AV/hOhJGz6Ls8C7nhcQ/cdtB1GzcjpO9KLGDAZTNCxuItgvBFjnE5SO/t0bRFCUs969pj8G32RtITjCy4Y+IEiYuLEJ6t8EeidIXM41PRT3H6AHFI5jhSV0/Hgq9uenuwgiZpapzqaw3SAo1g8H/UkjEIT8mfN3u3pI0iQD9DlknClCh6c3t56O5zKGMPP24srWHyMu4YxNjgySreuSA9M/Wnu+Inv4N8GJKeKOImJLbf+RlMywcYFrJhWYhhMOROF8tm2ORAN/6F1/sEX41LNKncoTVkmyuEI1FOHI8wRrf3CYfPHryrrRGdqmDsgMm2woKbYf9esciKOypiCY5b4xTMg5OGxDaCekv6Th8OsnS/gNAo3BvozBvop4UiVMf97+T4g9l+F6db0ZZmrOHOhSVKb5CfglxAD4hx9fARWcoK0t00QuCHd2Lb2VzezvbKsrWdQPwUynt9wUqXrJYlK3KebBXa83vuW225EoBxwfpvr9wpfJONB2xapjv+cX22pjElS0lXPBbtkMB5s/Xp8i601WxMRGsQCmRDTxXz37ux4IH0NcYsfdUSzmfe0mD5VGnx+4Z2WNfPyd+1gX9zREDnTaiaopsEkIjVozGbLBBi33WngXBjWgcgzzWx9zwJ2t6xNr2eo3gbnK18Zny+BbxRLNqWtTvMFjYBU26R2TMjQQnB9upCFHqH/boca7qZqpShCPELYjmm4HNVS5C8l0ejy+4D2R9of8aQA/PLSWRrtOW0/AeV9fE2O8edEMkWc4QgTqJ0AyNj/Vct6K7TmmUUtHuvZNrR2aHnTELprvDHXoSbSlJ23JKO6DT8NfNhX2HYwzfgm1yszaaCpGU5ymwEOpJvrWwmLBKbzm0CMkrFweU/dQJyfqlgSGqULo55E7T9T8zlMd1legLjK5RZ4qSGmd7qazMpNZcqqAzA9/CrFbflB1o+K5DaZPQb2n+fvu1CJ7Txpik22UXW1ZaYqhJLgtZr2A+J8BZw18i7MY8pqohCHEMRoDpeHHF33FSkXBgYLrRcJ8yDAvQLViMpPq2xhesMhzc+DP6J3ZoxW","layer_level":0},{"id":"b93ef46f-92d7-44c4-847e-82a1b1b2c17c","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Key Features and Use Cases","description":"key-features","prompt":"Develop detailed content for this section covering the primary features of the FALLBACK_SCRIPTS tool. Explain message fetching with configurable limits, intelligent caching with automatic freshness validation, message reading with flexible filtering (today, yesterday, last:N), and JSON data export for analysis. Describe the send command for message delivery to Telegram targets. Provide practical examples for each feature, such as fetching 100 messages from a channel, reading yesterday's messages with automatic cache refresh, or exporting full message history in JSON format. Document the interaction between features, such as how filtering depends on cached data and how cache status triggers automatic fetching. Include real-world use cases like daily message monitoring, content analysis, and automated reporting.","parent_id":"f09db685-51a9-4251-ad6d-c1173e2dd978","order":1,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_fetch.py,scripts/telegram_tools/core/telegram_filter.py,scripts/telegram_tools/core/telegram_json_export.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:38.827150651+03:00","gmt_modified":"2025-09-15T21:22:44.728725527+03:00","raw_data":"WikiEncrypted:XkWPmYTjWyOYdnDjB+M9axX+46ADyYst1kwa00+6YWckfk2PVt98YbKBFyqw9AydSckDo8AAiTkKIMWq0Y49YksmjNiEGQNrh/1gUDI2hjzS5hCe5BmhKUjY2NdMVOye3Ed5NkvnGm8U1xXVv54Ep6mIz/T3Xq8tdGLEVPxL36DVKOkclwL1Ow+O1B0s/NzWVP8m5kLdm+3ShWell9qJkZWgqv7o+bDG/C7DjLoT/A8RRsF6C5OGZktmwTuZbaDlMVYMUt9aG9Kq6h7s1DuWiaDrnd/YCELKgwleAJn7G/8zezEAqIuxZ7+xiA4/YCvIDN8PmSqDLoPAZH9AKKdZgeuNN0+EBO1hHKMSl6pFvOvHumUoXddH0zL6B3e9wpmmWUNgZbYaXmS4YwIJAv4o4nPg5TvyqAA9BO5qsZnVG5xR+uY1wp5xCOWfOs9cnPl3zIbtLEuHX5hI3tzKR0VZjQkyl2mdAdsxSacl7d37x5+5PzxQVuWUrmTvlO6HUpKKVwJqciIjWFEOIFv+GiTbJn/sWpo/fX9hEl4aQMXAFAtdXK9Pul+A9BV6uR89K872IG7LDYzGEp2hRc99NyiXASsrSiwtQ+HC9fHOIPiNNS8wRhxzBNFf0rE+IosN3P90z3xKcZow6GnWAEOp/8NaFgZjhlGrOEkj4ax7qLZ0cHJJZ6qdzMZktXxx52eLGq8+UbeGMjmk6bvpAPxv2jZPGQ7xdf46i/WyVzfRQ4Miq9vqf9+/MmjKxrhZLMdyYJ/tkZaB3s7kHQgng5Ud7p5Kso2NkCqJtEDtDswtquaPSpOj07XQFodb05Q2kkci9nPEZuF4Fn1lcEyLKNcoI9k6iRF1LYWnF1uy9J+b7krY4ndMRCaVbtgayzwQU6H3Q2aEpMC2XPW3idtVNEXsI9BZb9kuYyweCK+CLVeSPikBE/I2JoNipwC7c+X5s04ob20yUy3e682N9dA9ia5ygEvP0LbTLjC1SuENGuATb4rLjR0XBjVIEf5dqreH5+GJ5fkMZucsFaFPsx9edWMp6MmTijWAP2DtZFc1+PfFsYydObe1iP0MMvKVYppk1N0uRSFVWkYrGHfbpp80Mzz5yYz0O54oV8mW2hAZsYQKL/jHWbJcJnjRgQBHE+QTm16S2c47MoN7fU/wNJJeLNstMJEMyC4KK5edT8bmXdn2au4OCJZ6J19MkIwTls8PuymNhQwNciK9SSCFd4rPioQQcrCnrwznLh50spnPb279/N+CIh8e9NFnY8/2Gav1Od3+F/CFZPLSDeRf5pBzjpSu1JfXfjiD55pofI7pbeC+FCGPVysXwrdt0qcbjrra7v3O4LEAca56U+53Yfp17quwP2ysZUR+fHP+2B0rZT2DmKNaRcWDxvNVUCVj6jjhyiA2J0P/mNs75rNfFgtI+J68dYVooBtm3FAp3StCH1RbMzht25kKqIpLTFU1KYOAE/NiirxKCtJwaK9WJOIDmDTyh8WbLGqpIlP/x388PAApbo5BhMCIDeh3h/kg2N0IDCcKeaMTSoiKZq9Hz4RznJCEEMYuTo2Q2YtuCa9KXvmOiOQF8c+q/IoyuJU1Sj7pOENmN7DGaa80rnKFB9Mx62L3/DEKlxNBdXAlqeRdtmFf8Fx0Gx+KeDye8LJMOevANa/celFis4N3tUdxmV+pWy1TtKn/jW0pcZdsQkdVe5qaq8o+dB/0/ERifcOsnCfB8WtSZIJUgw9FnkmiWOddtBW8RknVEXbnx4UKZ4wR8HhfhvjOUUbLfH9FpTGpBiBgGhj6WBn/i3XUN1AspMvNTgKejbfwdg==","layer_level":1},{"id":"15220635-5cc1-4763-8514-d2ebc0258e8a","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Read Command","description":"read-command","prompt":"Develop detailed content for the read command, which retrieves and displays cached Telegram messages with optional filtering and cache refresh. Document the syntax: 'read \u003cchannel\u003e [filter] [--clean|clean_cache]', where filter can be 'today', 'yesterday', 'last:N', or 'all'. Explain the dual behavior: by default, it checks cache freshness using telegram_cache.py and fetches new data if stale; with --clean or clean_cache, it clears the cache and fetches fresh messages. Describe how the command routes to telegram_filter.py to apply date-based filters and display results. Include examples for reading today's messages or forcing a refresh. Address the message ordering behavior—currently reverse chronological by default, with plans to support explicit ordering via --order parameter. Discuss integration with the border detection system for accurate date-range filtering. Highlight common issues like stale cache or incorrect filter syntax and provide troubleshooting tips.","parent_id":"84bcc4a0-82f8-4ca2-88f0-fb5b6e4fbefd","order":1,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_filter.py,scripts/telegram_tools/core/telegram_cache.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:49.143437534+03:00","gmt_modified":"2025-09-15T21:23:03.015718933+03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"627d7866-edf7-4f73-82f0-8526ff5d77e3","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"TTL Management","description":"ttl-management","prompt":"Develop detailed content for the TTL (Time-To-Live) management strategy in the Caching System. Explain the implementation of the CACHE_TTL dictionary with its three-tiered approach: 5-minute TTL for today's messages, 60-minute TTL for recent (last 7 days) messages, and 1440-minute (24-hour) TTL for archived messages. Detail how these values are programmatically selected based on the filter_type parameter in is_cache_valid, including parsing logic for 'last:N' syntax. Discuss the rationale behind these specific durations in the context of Telegram message volatility and API rate limiting. Provide examples from the actual codebase showing TTL decision paths. Explain how this tiered TTL system optimizes performance by balancing data freshness with request efficiency. Address potential issues like overly aggressive TTLs causing stale data or too-lenient TTLs increasing API load, and provide best practices for tuning these values.","parent_id":"733fc1bf-6dda-4d10-bbce-d7a190da4823","order":1,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_cache.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:00.364967144+03:00","gmt_modified":"2025-09-15T21:23:32.107602539+03:00","raw_data":"WikiEncrypted:eZsIjTn6uOo6mn4NKGaFpv91GZHtTxrLbowDLfyDa36Hv/KlFWa43rxR5umsbeeG2E3cMJD1Nv8uKo0sGA38VLRTV56d5u/3f5ijKqtnPbI1jQVpieWQeQH02eQAG7TXwFa9lhqW1K3+5OBMEJ0B2NI8Q3+aXn1NobJ3w5D07nPrXWTkGJ+KodREdgsJ0kotbRdJ+1GSebs1DYQj/iunRzfBEH6lMlrsa0J/JHC6aYi0waVXZAPtiNLVuGDz7LqQiXtXEFt0NIG2+afPDnXNy54DDcx+pOgHOI77DCiK6pxEHSnAwQ9tsy/qFY7B5GUhd94Xn3+q735urdGtcxf5todUBjUqqluSfpm1oOQjgTTVRscegkRS38fx4c0rAifGaIeOruN862JoThBfTmnsQBfmc3NQO7SMidHMeZR6z1c4kZm/0P8oaOq5nphI3VwONgOHijfR//3cQaXSfsYXt3PFvmN4FrSF6GnsPFGi2oanFuSwWn4Ng2Hz7B0rnIIS+U8HRqOLa3ayXihqiI+7a5lquaeawIqrZ/kXm8HiK3xh0zu2YmUQNTqitvHg4NhpmGNVVzNvZFhvXCgd1Y4bbmSSvXR44BLsrzo8c33gwe6YKyeg1x7umj+11NNLd6W7lPKJNTV06eRxge5Oihp4llEPMaQnXMeG6eg8yR1ugqV6jsaitYXlrgdGaK+jSTUo5351PYQTkz9aqeZX6b//r52RzyZwvpy21kGAQJDX6yE+PE6tP/6ZWh3AUd00LS2/4c/8ELjJEkMleLbQzLlw5kTo8Ot0DfjkjL83RqMze2yUJk4i5JKQees8vLbzM9IYRz53DF9TuouMT+PHMzHMtAk/nA1bjRDw9WrLgTePZ/5hLYLqmmU+9Sp71UhlypOp606nAI3bpzUWi6dhHgwhMIwbdlMJYAmNLbaM1fI/b7MMV1KageMcLE/Y0Xh6LK0eIek+mjIo5LQNm9mQYE9R50hAtOinF8wDejqbpcxnCfYag/alvEpbHNZKA3fBMOSZgFFxOVqKpJ8FSWtu41yHKjoVamHAyG3OY8tuW6GiJGlM6IVnR7+7Q9U1zh4nslAPtl+Cle9wfgvawV0klVkio8tR+sDrPigpswG8KvmYSS9RZuI720Kfd4p2JkRY4//5ALuMB5OODvr8ckokF3X+j6yIbhnTxcdumakyk4c2xlqCJJCcdGj+GbupF1PoiouyLghl8v+Cokkj3RqMSBQ60YN9BIJEmrpBrXjz9Q1xKwvYDosp8dAfIX2u8Pz5okDZQD61wOYezHhqY/rSrhPEK7gYoT9nhxkTPveuylb8LQQjhqbztxje/zGfHTGctiXi0yl58T7bDRoVbwt76cyp99Oa1n+6Q8ujvXfMJuXxaX5RbeNqP+jhVLujJnlFU/lsJbIZGgMjTy2OYRO085M8eBtq7B/JJdgBwM4ibj0tX4r9xlMqDx1Eaw2/1t2BX2o9sbLNOpjj9QKbXBnWypsRiaah5TGS2pSfw5Ndgq1wKrS7cK2DiCvxXS/UgWPiFyLIBoQjf1nb7VxWq9yRoNqeHyHyyARROYBSuYAK+m9w1t9o1nFDmDFBXo+oayyXNTuHDeF5YB3CNP8LYrcNPKB8+w==","layer_level":1},{"id":"216628b2-a951-4e36-bfe9-13d33fe9f24f","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Ultra-Robust Detection","description":"ultra-robust-detection","prompt":"Develop detailed content for the ultra-robust first message detection system. Explain the multi-layer fallback approach designed to never fail in identifying the first message of any date. Describe each of the five layers: (1) Message ID Sequential Analysis using timezone-independent sequential IDs, (2) Timestamp Sequential Analysis for chronological sorting, (3) Boundary Detection for identifying day transitions, (4) Message Content Analysis for cross-referencing known message content, and (5) Cross-Validation \u0026 Verification for result consolidation. Detail how each layer provides independent verification and how results are compared to determine the final high-confidence result. Include examples from the code showing the fallback logic when layers fail and the decision-making process for selecting the most reliable result. Explain the use of temporary result files for analysis tracking and the significance of the RAG message as a known reference point. Address performance considerations of fetching large message batches and provide guidance on interpreting the layered results for manual validation when needed.","parent_id":"83e2c111-02ec-4bb7-8d62-816662f21ec5","order":1,"progress_status":"completed","dependent_files":"tests/ultra_robust_first_message_detector.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:09.947054894+03:00","gmt_modified":"2025-09-15T21:23:52.742733126+03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"b03c0767-2389-4438-89f3-be4d85cfe7e2","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Integration Tests","description":"integration-tests","prompt":"Develop detailed content for integration testing that validates end-to-end workflows across multiple components. Explain how test_09_integration.sh and test_ordering_integration.sh verify the coordination between telegram_manager.sh, Python core modules, and cache interactions. Document the test scenarios that combine message fetching, filtering, and output formatting in sequence. Include examples showing how integration tests detect regressions in message ordering and cache synchronization. Describe the purpose of comprehensive_message_analysis.sh in validating complex data flows. Address how these tests simulate real-world usage patterns and ensure system coherence. Provide guidance on extending integration tests for new feature combinations.","parent_id":"ac41205e-f37d-4755-9517-8abc897425dc","order":1,"progress_status":"completed","dependent_files":"tests/test_09_integration.sh,tests/test_09_integration_fixed.sh,tests/test_ordering_integration.sh,tests/comprehensive_message_analysis.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:20.466606028+03:00","gmt_modified":"2025-09-15T21:24:43.325777851+03:00","raw_data":"WikiEncrypted:0j4RRfWJQdenLQLpT+DwLaDwNDV/GIuQlHpyc54dnYh860yDO9H0C0nT2EFEr58Uf/Rd526ESdbw8khXz5mHZEZbynoM1Lv4I0B1q/ocsZk27eo2ECuXUkcu3Jr8otQ+ThYQMQPaBB3B+mouhufGVfL2VvwRz9SkoC/qKUgG8GOLB8N+yujarZKTD86o3bVsE5ZC5pB0MVWavwjhBlVUdR3U0gcNLdIcvu2l6zoJQVaVOqrR8OHRncTKhXOZMWtzOwyH2iepaGbRr3Wl4YMMba+CBP33w068cb/H8uj1fMFpQf9dPhTsx7gPzEY4lUQCNyenaaOcOAr65DkhnZdmeynVNRLiHjzzA5WCL0kP2FPc5KIf1ph4ST+xVINwK/JhSAbF/l1gqOQRMTRFInL5MbZMN2Q13Zs8ZuvwmhLppI/Pi1FNVupSqanjXgRZmulSqsmp4sJZq+y7f9gDbg6YrmO7Ke+1Njm+5v/VBtTSEZjGK0h4yctjxKkbiDrzgjeD4I86tlYwiGgj6dHgO0rQ+I+9qlQhCAWIcaKq23b6LcckMWrOaS2tuAsOt3yxUxbXVSfU1n5jRIA3NGlMZRDBRwuiRHWHnUtWhCdxhlqJ0W10bAst4/IyFEihr4mUuZ1u0LyF2ppwj6H4DR5aeahF5t/k5bctzP7SvgjUTstuZ6FMECr6FUIJmzCfAJridk0nHW3DvT12qSL5CoEJR2kUjXcflD9MMuQNPDDOkyuFDjrBI7apuATw+bAEEU8Rju1wuAqZ+LeKtCrmGBLdxAYRFVJywGHdDT/Z8g00cTbgxH5aTWvEOEaZhowuCYC2dIMB5jicDEOherA+LjUeB9c+6ZbUYT4p8EYqH4visd3wwkvZfrFc/NzF2o56WCBkinr4ubq7Th4vpzd+SmM12jISa4nEgP/WRyWLU8xmTdyeBMtWqwrNosBGcHXnTrvmutNfOmWTZmQo+OSz/FGBjEqhM7S1W+1iplRP4uI6vewXgzimcxKB+0+9M0cGVSvFO//x1pSJwhAXU8pzK4Xxn7Pgwq4WQ051uCH4s2godtNrIztZFmTvw211rOAu3KAfKk6DTUQ3t0pqQsBv7GjKi00TBGQ7s+Mw1w1U21od9zjpRZd855EaCZLyoRIEb2mbI+mmcXUt2jNYNlePuH9BP2djnF0pd7kNcINCPkWdf3KvbpVMneRGL+HMf2xqrhKrCuHthXDNdvrgGoi+fnMkor1v7u8BxydneqLbaJiCHGi1AhHqdjfQaf8MvMpYYaXtwiNZsu6F/lPcMXFvUJod5DjEaStFJcUZ7RrsSc7YLtah+RI7bxXvAdMUFZATVALvLmiyk9tJLGUxwAkzmTXCc/DyD0i7j9T+WGoYrIIhA0xdvgktl0dkwqZYHnKNovcHHHKDA+amHwwd0W81+z7CEuf3jsdmL3BqS0Kc2MavMJSQuyrDe5eZA7B25Q53evTA+2eSP0pRlPU9DYwqea5S/LlDIXiVprnEZcEPCqI9jg5yWKI2PALxQJBDM7EZRyrCp0SbhWvlPKNoaoE6diZibElytr4a4uwLBL9374MUq+VFu8uEM52/JrhzH0UijlWbL2jDpVEdnkRWLZ/xqXSHVufEZA==","layer_level":1},{"id":"12180e70-be56-4390-9019-b0d78ee6a09e","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Performance Optimization","description":"performance-optimization","prompt":"Develop detailed content focused on performance optimization techniques within the FALLBACK_SCRIPTS system. Explain how to tune cache TTL settings in telegram_cache.py and telegram_smart_cache.py for optimal balance between freshness and API load. Describe strategies for minimizing redundant API calls using intelligent cache validation and pre-fetching. Detail the use of telegram_fetch_large.py for handling high-volume channels efficiently. Cover batch operations through limit and offset parameters to reduce round trips. Provide guidance on managing cache size and cleanup frequency to prevent disk bloat. Include metrics for evaluating performance improvements and monitoring cache hit ratios. Use examples from production-like scenarios to demonstrate optimization impact.","parent_id":"33439bf7-95ed-4964-9bc6-bec0c5d36f60","order":1,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_cache.py,scripts/telegram_tools/telegram_smart_cache.py,telegram_manager.sh,scripts/telegram_tools/core/telegram_fetch_large.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:29.36710141+03:00","gmt_modified":"2025-09-15T21:24:56.993141207+03:00","raw_data":"WikiEncrypted:9uOBpMbLX4DyZqW4us3Wm3Q7klXxmeD+JMMoGiSO2oM1ncLZzA/fqddJBlYZCaLBc3dFT91lbTn0MY20VZ4msnea882mwjZ7nU07KkKEaTxi5/L+4EeWnKq5Fxt0ZJ8Q5VDM1qJC2WnkTHvOaSoRBJBzY8h729D/g1oxd3qwF45g4RGd5VeLb8pMy5sU3Ot/KBQ5WfGMSjQwgKZ+zqQnSuon0SHLo+Nng/2X+VJeTjWSYK8ML0AKzDzpzQA3fsjJdl4nUa6Ru2AH+SjTrCbNjpo3kaYKf2doFnjPiOY9YwaE8ef3p9Hpq6VeRAb6I819HskqWb2lQFF0j/F/qgaiOjtbF361RLCqN7FxVcO8EKb39j9P4TF7EBzBwIBz2JY1LqfHYijvNYvMimwQTX50Bw8G6N6MjRXyVoox9vf6b8+RV9oqntqQXZcZF1r7CekPOpG0WML1DgNxIAS2iucW96LZdBwlBqKOnjP1+hQJ6G9Afitt0EsW7bQNlhEiQjI2IzxFP8ODpgabdrdB/jzmCdJF/Hc/3fwPatP6BQ3uwDSpilZdcwbmphPf8UubV16CXGkq06lf2RoImfsycnx6HSqxh5Gn7SV1v0AAgfLK9auTX4/kOm2yqiAUJ011JOxRPKkNDj8Q+4H0TovLFh8ylnOECwKdLWruwTurpjSHCrAO+g5/0mgRiB3pPLcauQe+mG1qcrPzdeynmfaEPpOi9z2f3oNHNo2PRpYSfoR9A0kfQL52uFdC1IuB+WXUzTWAB3Hln+DQwA9fMp6yPZPLmpk1yVmGsqc1fJloX8N64eiVS8Mz7vvh3XRi/fNhUb6zsawNgScHCN9KmnZLQ1fVTLXYQ2AzQjNDryXV0zM/Ii+6pTGZS41NQdL0silz7RpOwNbwsxcvO3nRn5ko44u3hS/Iky+cviq9y4SQLAV0yK6y04678WPuWVinjnNA7W15amDRRFs9TQpZI5DoUtNhn78QKeAjI0f9goV4s9PBJhGGT60qRdCQp7ySywk3eb0uMgYYy85fcTgYmlqwuKsrFkQkixDS15Amx7advNlINq7MV/GOVldKn720e/J4EyUAQ84Y9T2ln8iqV1ex7JKXRG6YLdoJEhVf1VmjQSm9vUT2WAX413GBFBGPLvxA6c7apvrSJzbw1E3eQmxoxW80aG/nP3uEbRbPs8Y0i1GSXtQDl/FTSAw6DHHUwGgWwfc7N+QikFGA8w8dkufVWFM01VkgAz3lX5K/bw3CsV89j+QnzP6nKpatITbQE1pnGIbx1Zz3NfNAhEgtn8yLycy2oYQRYeydoKoU+eLkBKQ+DbKW37NiEq5VrVwZ4TbMEHJHUyoJwmq6WMTyZFixrTexv1n5BusUmpCPXDMjIXQDhnh1PkvzLLCdRYstW2M78X9Bi1vNecShrS2dDL2kQMssfBct+92Rd2Orhu3mTRRigF/bgX7b1NmYa/MSun34ev/Pj0unbUPIYNME0lJ9z/tzYuW8vyDBPOL46gPCWajeeIZwFnC4TsDdhhh5yY/UmdyXJGp68txX4tPHsPd5vtWWp4vHwiIwv7+Uw9L3lH30WRuL++vcYp+Smcag9By0riBU","layer_level":1},{"id":"0abee4b8-9eba-4ac3-8819-28ebd0d11dba","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Caching System Module","description":"cache-module","prompt":"Develop detailed content for the caching system module (telegram_cache.py). Explain the TTL-based cache validation logic with different rules for 'today', 'recent', and 'archive' message types. Document the is_cache_valid function that determines cache freshness based on filter type and file age. Describe the clean_old_caches function that maintains cache directory hygiene by keeping only the latest N files per channel. Explain the cache_info function that provides detailed statistics about cache files, sizes, and message counts. Include examples of how the caching system integrates with the read and fetch commands in telegram_manager.sh. Address common issues like cache bloat and stale data, and provide optimization tips for cache performance.","parent_id":"8ba8b779-0b84-4565-b92c-2395a9e7265a","order":1,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_cache.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:42.281280997+03:00","gmt_modified":"2025-09-15T21:32:47.089369059+03:00","raw_data":"WikiEncrypted:dAMSC70bWva9SabC1uic9t5z5jEAqgDpj/mdBmFI3RvM2jaEa6pYThMXpVkexFrSY/cHgvV+kGHAFayIwnshEi3xWIfDfhpHPFGc30u76C1T0+H6c6Tc6fHGz2PD1MObbIbcfqfs0UABMlsEXXHXrnARWVqPUS/jsfFreSGj5E334bH7Aq2sVVUDKDN5+8mAef8ttMQjWKUApEX8Rq4TVDNIhxD8IHQc1OwHeUuAg6mXWa/NZhH0EYLnENSrxDSrInDtwjh0+jJnBRp5xYuIOXEtwWbuSugSTLf0oGWYPYbsbsz7RnkzFmitF7t/kBNaNpHzaS+3snpAJvnIxjmyLMaT8eYN7b3WiWfh9dKMFcWnqmOtnAE7KyaXl3bPGd8cslMqdQyQQAtwWEIa52Dq5mNY1ZgJp8p+tdZXGxqwwMhXha0fM7w5cvAp6ccHYciLcHvQS4BlM1eG3BtywSd4/Gn7IEfHpShwa2llZXbJmnrtNuU2wbp3T9tPqhTM2nVid1skUf/Mqbc4btUQcbCiHEjeSWL0vdqunw+/P+vcCRLSIrYwfSDv6srinBcDyo8nbAXApuCMQBn0EIUcTmtF4Hfbru+64zHcs9t1kHUqLWh4hWyVOeZwzUCoGtOQAnN41Jw5E+u3wfTO71Tcby/Uk9tMGGMsjFZZDbLUL1PbhFqdaUYS9mF7a2OWe2TARRC01xPmNf5GTGhOuML2vqukekrg/88CNy6cwpS8YtsrMtNwW/M/nMD1AlYNEMX8KV59F/YpB6CwuiuO7GrspZN19MjyGSXcyz+onZh9MWo5eMSU2HGHQDlLcZfGREsVsAVcsPCogCeJa/F4PXvZSdwtxyRhZD5fMFMkTl9VftbBzY3VdjT08NzXVrGz3kLVF5h3AcPFBlfqUIlgb7LGe/g1d6c8ZNhbOBhecBDOvptFhVisYBc878kLKLDMowRhFCeIYHGx+59m6Gld+4Q8/fm2ETXLtl0h/qFurmPz6n/PYQJrq3/W5eWB3+nT0/KuRxht2ezNRIZjaQQhdNQoDoSYCb+b50rBAGvdsu2bA6jLLb/UGKeuYPnlJpyx+4NcKPTeTTqy4z2OfVIMjwgXv/boTlu4EIwK2J0pD1rFYoocoKVJDBY0W7Zxk7wAU2zzoGC6BfAf8BUTMTxG0BdoRE7FCFCOEr5JDywGR2fXudMjmdl9fCK0O3auZbMoMBNvEavUvnXAVPSQ7lTIp/8qCe7VI5/SwKL/SGgWlKvm0YUU9OkDvxi1s9NaFTKKsPU2WypBfmMK+Oqp/0oxUO5PkoiIt+hs4OjC2afK+thVflHCqe9HZm/cCXbGbHiaS28Fk0g88jy2u3jXXldiwa5qc4EAUzxGSHbI0BgY/G8Ijj4mOz8Hl2Z0gBzHvQEoIuarB1C5Yyh3Sc0iP9Xea/ywXaPCVokBX3YucEAGpxsVtJ1dg4+nh8Pa+D+azf9fYl8JV22d","layer_level":2},{"id":"0d5b5ed4-5a27-4ab0-a3ac-cbdf73fd299d","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Cache Operations","description":"cache-operations","prompt":"Develop detailed content for cache operations in the FALLBACK_SCRIPTS tool. Explain the intelligent TTL system with different expiration rules for 'today' (5 minutes), 'recent' (60 minutes), and 'archive' (1440 minutes) message categories. Document the cache validation mechanism that checks file age against TTL based on filter type. Describe the cache cleanup process that retains only the latest N files per channel. Explain the filename convention (channel_YYYYMMDD_HHMMSS.json) and how timestamp extraction works for age calculation. Provide examples of cache check and clean operations, and describe the interaction between cache status and automatic fetching. Include the simple boundary check implementation and its role in determining cache freshness.","parent_id":"b93ef46f-92d7-44c4-847e-82a1b1b2c17c","order":1,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_cache.py,scripts/telegram_tools/simple_boundary_check.py,scripts/telegram_tools/telegram_smart_cache.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:57.796004576+03:00","gmt_modified":"2025-09-15T21:33:19.201662379+03:00","raw_data":"WikiEncrypted:dAMSC70bWva9SabC1uic9g0DwTZwUS2fL/F5kUwRl7lf06SQUHSQvVY+eC2EasgJDILL+nkeDEbuQo/xJQxC0Q9EbCQFBUioyW9KUoIEQAVkXcO60mGQRlareQg8ZlZYLl0yHf5apZmZylolA4eyrFgoqI7AuJ9PsfQ0DtMxVynmrxAnSjsZWVpB4ZCnWe4V6LRBi9EYAf4dPIS+y4Y7gM/hK6Dnbf8Ov5OCIFizPCtkeIjUn5RInF8OW2pYrkva8+01wjzUrjg+V8csBhYBOsxnd4WY/FIeGqA3bTdv5H2Ir04lSl4uv7hhjxlhIWVZ/AhVKuUc/TViQYQWycNskrL/9ZTeOv6xpeYcUFT9/5pik75wF4PqS8853vL5/V3O30tsHPIvd1jFpE7eZYt64V+iuOzYHr89ABq9/oDgGG3/XfbCCCvHpo0Q2P9Qz6iJkSeJaG7gEriFmVWX+NOQFhUSx9Jx+1+s2F1Re2hPv61QRtEBwCj+6C7Lq6B7U/T8BcjSi95evQx0YgkWpLxMjB720LjiuJtkxd8PvXZHrnfDmKjLy7NSBLx9xVH28r9YaRTn2p+HCKo8G1vG7Sb2hObcIJ+miqcQaV17m6Ro2Xgm13cXaSwCck0FbZjmSp4p/eMbFYPYcV4nzac2yM/9YmUERGtJi5spmOTp2De6S54pWpGKhmilFV9QF0t9/qz+5Krz44Y2KL/JMO/yTikATHgzDz3WOiFd6VZMc3CekNYx9kwyLERMzqLoRHabDbduCVbOZRPRyeDrjizYl0bm5nJBex3CNduQCoIyAyQz7m7hoMPYWmngbWjcpf1zyNumLkZLN08RRLnLiQRXasSB0+qNKE9VR1ZrCQQcZObd1jnajx71Q/PSERu+a/VAMJonNNfb2vIM8NfC39/+CUnPeKqfEAvTAuy5ImfVkO6Q7brqebdQvJBMby0weNq3Fo8Wi7uXeoWEy0jKk6r3yQSzx5ENEwZBidekYgrg3XaYRdHtmWkCSlbaf4JXDokDt2dYZMPMZnzGiu2obP8CKCvzf1VcbCWRWlZ5sIyYSpIZzEJWC76UC2OPg484W0KB+o3qncsTNyyRrMGtpBYsA/0ImgrsvmSrQRIW58yK+y1b8fiV5a16HhgAbD4XixpxNGFQ0frMlMkgvasB1cJVjhbFsAdJH077xmk8hsrPCdG4fD68xk8kCOAXP2eZQCSbPBYzl9GAc5WzQHRp2cL7tPqtnzDGqtCFAZrOvE77PPhcNlJJP3q8bKfTVeZ7tVBkcSnTCIQ8jfnbXXKQQkEmC+7EgvYlZEf6TMOR/xAmwGIhINky/ecH7JE0lZLFIuXGgUkNuzCxaJIEY7dC3p9yUcF+ITml8Cnnzzgijdv3doDca6Bc4lL0gDIK4az7P8RodxXELhhRloSY2qp3IT/2nlTUtNZQyDFwD6UAeliH/1S6hGsbMNGKrPqJFVwNfUbUL96C7i9i5pLq2h26mOuFrp/TXqGkCto5s7OHLpmnxhTcZiy9O/4S8vDVmJo/aBAPfM/QHmvqJOtA7/7ntcRCEn87ckyQtSn9CBEOtr0xOAmZuSQtl7m1BVZ3x8SUTMrNBpFCoo22laF1MTgVWyntUV8MPiDoyeBCFrwoQaAjASaux+YbHRH+8xJ1oP1IoTSJFOsR","layer_level":2},{"id":"84bcc4a0-82f8-4ca2-88f0-fb5b6e4fbefd","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Command Reference","description":"command-reference","prompt":"Create comprehensive content for this section focused on the command-line interface provided by telegram_manager.sh. Document all available commands: fetch, read, send, json, cache, and clean. For each command, specify the syntax, required and optional parameters, and expected behavior. Include detailed descriptions of filter types (today, yesterday, last:N, all) used across multiple commands. Provide practical usage examples from real-world scenarios, such as fetching 100 messages from a channel or sending a message to a user. Explain the interaction between commands and underlying Python modules. Document error conditions and validation checks performed by the script. Include guidance on interpreting command output and exit codes. Make the content accessible to beginners while providing complete technical details for automation and scripting use cases.","parent_id":"","order":2,"progress_status":"completed","dependent_files":"telegram_manager.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.801788028+03:00","gmt_modified":"2025-09-15T21:15:59.035050485+03:00","raw_data":"WikiEncrypted:+fyGQgd0eREU0LbdYoq+mDNROftTAi0xjn/7ALOljCnuqYLuUCLVsf8YSdt/cTeS7d8CTcd5OmPdtQVl2rN1f7bNQwYcIaiZkLIpYsoR+GJL2yi5M7sPQXOuBSrCuP6QltFru/Te0J+JsN04Q3H9Fp+kyELVKTKLXAf1Bmb6sv1NqvHRLhNmvgEbVGO2EHtHc5FNbm4GQtTHVCeQ8ZW9VvU7gIA/TIu4fzccT6KR8h0NFBei2ioTAhIsrHzXoTI66aY8tPB95Shydv1SvibiH9vFr4ZpYjxU5CaxvO+LB6/ewi1oOrvopH49V1ORlAn14YHmHmTZh/WHH3GMQyriGnBlIKebCNcretG2goePGqzTWAo4yZuY5EUYjK+COGUv4mlpJd6EccrPkbrvaUK4R84s5EbNc/AMu+49ycJPkrctsNFLP5AxDX9CB9XXRSZS8LgKtjXpwYL15u0RJRTBeEg8z+PTZSSwI03eX2u/pYuTYCWeklt1X7ZfyjNFeI3/beZyNwYv3PlWcII7wXXiGQd1k/kx8vpeuCjcl4FXJmSrERaGJGv9zSyxCWnroUL+m2McWEWuPQxBJQjPXT+bjMXRoZMLFIwynnXNSeEDNT1o9AHHmtIlEmk2xZPeiDj8S5BlTI/6X6chI4XrIrrhZVoNJLvC4sxk63r17/LuhyYdF/jjh2akkIoNbIhoCSXLvh+7XQXbsn8jmg++Ti5qutXE3mpas7jCWksDk1WNIKnjLxq9I/GDOItG5TA1vg7Eq0gWT1Dd45u5mey+gGQzx1Z4h5t1mSA3w+yOzr+xmnH4CMo9p7X7jbnpNZ0dNeKZg2tunYIaGg+TwrZhacoS24I8rMlKfx6Mfv22NzbjmlFyuP+KUMKUuFRyEljUXZmt/EWWBSIm4SrBqQTstt9VxIImz8GGg0upw3Pe76XXpIIF1XFhgI1P5tThNBvCraV8GALxZo7hHtGzhoZ+of72kavBWqel4EgAvvw/pcm6DpE5gHzbDd9uK4HKXMfaNZzBft+zApm49zMoswlqUJzR8EjSovapUxO4rMT9Z2ROYOv4Qc82Tz0DYyiMkx6uHfW1qgaVAJ9V7SGyZ3XHP6FHdtyqLJBV87dbl+5bZJog21fDmyZ4RCJ+RsxVs/oLYxLZ1v5l56kToRiJwo/ytNOKAO5rJCq6pTVZAlccA+D8N/YFkkSxQ4xEFmMoEi6cPPId+gKDLLKuiQ5nQheOf8mhLwxOR1uMCVvCyIzzrAXOAZlpiN3Fu0IN8HMAh2+V7UYdg8NglqYqOVq0M7CPb6frWOse8vpuJnad/NZYMZLM+a8mo5B1Y9IoStvUGJqslZuoRw2kLDGUpRvCG3rsD9z3GsY2Hpi0stPznjWhHtQa0oK+XhVQiQi2q2dZ4benPSre2kMCfRZYPh2ZvYp0psmLvdM3pDkJ9mPUckIqbraEcEvvEGr0pwpCiQBboYReP+Vc71o0Ca/laFwmfWESqNVrLnbbiUt7tfBnD4NzOoi3SP+YxJHALDE3wN+gbkZKhrM1VJZE0dyhvtplyCaBOaSB+byCpnbTPpOo6OPDhXj2GmgRYRnkeg4hazmTfuQ0PZjx/w9HHyYSHHy/4vHCy2YbzmK1yQO1TR3/1fCeEwbMV3H9v/aKqRgCahguz+fqn8LUz1Ks1g/9fW/kRq1ocM5kPtCeYTuEHrcv/Qyf5hjkg+xI8tYU+YEYH7kdXOBERV3M4N9JPC3Ct97l6Ec+mKcPpw==","layer_level":0},{"id":"e6647212-567e-4b78-a3d4-281077869414","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Configuration and Environment Setup","description":"configuration-and-setup","prompt":"Create comprehensive content for this section focused on configuring the FALLBACK_SCRIPTS tool. Explain the setup process including creation of the .env file with TELEGRAM_API_ID, TELEGRAM_API_HASH, and TELEGRAM_SESSION credentials. Document how the send command accesses these credentials through file reading and environment variable loading. Describe the script directory resolution mechanism in telegram_manager.sh that ensures correct path resolution regardless of execution context. Provide step-by-step instructions for generating Telegram API credentials and session strings. Include security best practices for handling credentials, such as file permissions and environment isolation. Troubleshoot common setup issues like missing .env files, incorrect API credentials, and session invalidation.","parent_id":"f09db685-51a9-4251-ad6d-c1173e2dd978","order":2,"progress_status":"completed","dependent_files":"telegram_manager.sh,.env","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:38.831867121+03:00","gmt_modified":"2025-09-15T21:25:25.015980849+03:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllM04aaN4gt4AplM8UfaRRaCLgT+T3gNg155PbD2CKTXRBmUXNpiLcwuQc9rVOVvD7EfjnI367j3mmHjPPzUJeOotNC8K2Hx8kADDkvo2I5J1d0WGgu75XmSmaZUJojmgsUwvkB9VeydQOY4yFNUDqyq7bjbd1j9KKWfyr3/acoDDW/B/0p2vMEo6ZP+3uKTysD8qrTTd7sYAPnSVw624cM/weFo7kgpvt0ccQK+IEW8pVD/YQxSWz54AkGOgAYI9JLQ61bOHLd316OtDFDZqM4gBlowJFMc08W99k2X33d+uS5kN83enZ44cwi9z18TyBvhffEyKgjOvOtWfRm7DD4F1uZPw9/Jp379BGw55xKFcO5yAbFxHLGykW6MI6M+YUpWYCfXw0CCYCeJ0BQZHq86Tz5PuJDZUBE20JmqhjBIuyTXpR9YGZxZfTAUCkNsbPVIyYwxnnJEal7xl6nU96uPFrDBqizHwPWeungX5/VpdQ13v8kgME8zHa5omLupmWD2rNerAo+ADvxGJL8JEAKOeJn7TT5dS+BGxp8QiYaZ3MEeljbG2jb7cB+9nWRoDhEPbVL2MeFEjOh/C7vxt6UwmLuB58ZqhOU62P7N+wJ8G8d7Z/vcfozRrj0Nvo62tZ0ExoUgsy88kVbHjberqdFW0yR6ck//4a2UvdIywBz4hvT5Llp9M9c6oDTNuJckgigzLkF0N5dMWopsj2DQ3+3rEvanryVToqLQwYdQuoXH13UjQa+hVWW3EbLBLZwziCaIrNUTUJJ5/8SMS90UfmGz1Fc9htkpUj+IgDZibche8ffDv65wCfnEpxGDLV9TkI6arTnv++F4v104zTYQarbrQdnZInoqoikJcSGSit04Uyimf5HqZ6Gujym/Iooz8uCBtUZw6FergGuSmLNgtn4/DnW7W7b9KzJmSUq/+nA+y2ZBuFO81e0o2jjcDGX6k17UJr5DuoO/hX8YHoSajxkS35dunIkuVU2Cxeu+IsxbJJpu7kzqZoGn2Cel2b/c/yRqtNF7ak81Y1AQ2kweyZX17UU05BHJqJNpm1HU/e7zYQz58T7W6EHQojLLru2rSLfwPUMl+FtgrEKCHWRl7RXCIHcRxKYOgWIbEDQ3uVOAWoCwIECB89NtssOtD5Msy33AB92EJBsIua3KqwcsOeuw+3cDmkTiCe+RfymfZ55Iy4xAi0IJHCYrdFOvS43ZzB+Qw5h38GE8o6Cwa3YIYv/fOiTeBR0W4asvAeMyG8RNqoZiNI8VvhvaH4fIP0J9b0DeurQp74jcnOtaCYd1RCDrrudfgllN+6o4zkWSBmd5zZwiH+Xa3RWtb36xlfPYaiqA18sma8oJOz9RFDdavpV5/lLn/DhyiQx8vhdy1u67iva82rUSI7VW3j6rMkkp8S1+6n/NB5lMfWY0uu1c+Mssuyg0FGAWGRZdbQSfpOvEmoN+nr6lhTBYeHd3wNpsB4dFw/UFfAeVhkNhabhocHZEbt8Itnrk1oGxOP5/Z2EaS0uD9xoQuVdOCp787IHa62mNTWS8xLxjbUWwNgrxdvHxQgEoQ91ZdnIR5ppmYA4Y3","layer_level":1},{"id":"dd24385d-b496-4c41-8438-ce0615993854","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Send Command","description":"send-command","prompt":"Develop detailed content for the send command, which sends a message to a Telegram user or channel. Document the syntax: 'send \u003ctarget\u003e \u003cmessage\u003e', requiring both target (e.g., @username) and message text. Explain how the command uses a Python inline script with Telethon to establish a session using credentials from .env, connect to Telegram, and send the message. Include examples like sending a test message to a user. Detail error handling for missing arguments or authentication failures. Discuss security considerations around credential storage in .env and session management. Highlight that this command does not use caching or filtering components. Provide troubleshooting guidance for common issues such as invalid targets or API limits. Emphasize its role in automation and alerting workflows.","parent_id":"84bcc4a0-82f8-4ca2-88f0-fb5b6e4fbefd","order":2,"progress_status":"completed","dependent_files":"telegram_manager.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:49.148175024+03:00","gmt_modified":"2025-09-15T21:25:36.709410278+03:00","raw_data":"WikiEncrypted:3GctyqpusMSw83KPLCjbHjzpe5MEsE/G8W/oDSJu9sStC1sndlMbPrFHtmupwUFecE8i9ID9XkqdvbTYD9sMPQgVwfld8odWPvH1/FkICVA63YI8C7SPxNqRyy8JOdAJpLpgJNinTf4RLp9kBkUiqsmzPpkKz2aDD0KOFbKy/sjDzFpe29X0EUfncnIlBh/ISDvPolBDrxT9ql+X8lbEP7KFyh0Z/86puKJwOotB+VzUvkU7ywAzbLDYgRBeZixti81AIcvWcPNGSd7ffz55J6ZKbrP85Kl2uLJrexHsLHsrJ6naWjnGc0g0U8sBS4R0onTU7JAGFYibvO2248Q8vD2HI+JzzJzmqc2Xxo94OjXEhgReeKeQ8sndXjYN+Ntfpfn1+kSETbVNNKFXfRsrwO7NNT64G4HZWOeOhp3qN+BLt9+MxtTG1Dls1cyanHOV0aH8NKQhEwKmlEvR4LKK/0IzoK+QNLBSROJRJJ0inwFUUVq9xlRd3wMMIsVGLzHKz7gkjdByLQG7dPlISC8z4tjYLBrWVIIb4BEmZBuXOEzSXeAot5ptfEZJZ9lPtamWP7XKRez+FkLwsziqtG2PR7gU/vjFlLink7K9AUdpTmRhpn+87siwteCFwL8iGBGiJXL7jGwtl26Ye5fsZLcxqSwXspfycEty+CG0rmNLo4TxjLc/px3sm7OUgByPu95V2wEg0Sd7xM6Cb19E8ypZMrHMtfVxvJGrvmNPud1Tk+qF3uBk1H6a+nKWsGJAd4ocjyWS6cV0JvsiF1rZyee6LFIrziGG5VpdNn1Y4NR/Ey91CKNFPBXufr+M5GLeJeaWxIBhiZXaTLU14IUNKH0bWaFWejbiebVCw6aEysPAOO2frLwiABNTy/CuZcXIPCajjDjBBnwrUW4hi9xIfAIpkLLmJYTNN0cVNsc15905dDWcARE0GdnEBBRd9QCCo0Rju57x3ypAZ5BC18VCN/ToFQ0+kfx4lk2siAbMHohyP51vQmq3JUTXrv3W8VBu0FtfXJI1dHkIPQWiQVKCHx7weSeZKB2ulDT/jUayi5XpS81T23HZKOyPoHBKL3F1OzQocMVPofKjMxZyclzDT9e644dHR3u8jV3ZtboSlf9bh6c3Dxg91iBp+PKbISKAPqn4j1mmTM/GqD7rfvJzALgnPFdpG9qPf1hwIpaVCeT2RT0g6WLy0ptHwhzsYbf4jii7SmFjJuGWTTOpKFnJ0czWaIrdFsEPEqbxcPqBFE4y6z9bqZIqmKdhAuMhDsMxIyCYDh5fA4kDTX3G9yMZjMRtuKR+jf09uWpvIVdkJYG2tGIzwjf35NKKgFLv2gNXMIpyEpW9p4Uuzsi8neNuVMAFUdMMbopD68ktx4AWPbN2/LTEDA4mogw5RzWMRL6tb9Mb2ZXy8+lJ0f+Q+gAcmuQ9fqZDeSz6lWKUoVeMLHLkVFIWltZCk8ixO7hXz54iUzA4j4Aah1nHcjeh0CiBcnBzd4gYEpntszUUT/7kAdy8Nfwz/Dugc7e1zEBrGUB8FcO7fWQ3+gdJ5NvobsR6IaBqNHKPC2w2HnNkvIXu/Oc2Pic=","layer_level":1},{"id":"0f936ca2-fd48-4955-b487-b7b50df34b50","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Cache Cleanup","description":"cache-cleanup","prompt":"Develop detailed content for the cache cleanup operations in the Caching System. Thoroughly explain the clean_old_caches function that removes outdated cache files while preserving the latest N files per channel (default keep_latest=3). Document the file naming convention (channel_YYYYMMDD_HHMMSS.json) that enables chronological sorting and age-based deletion. Include examples from the code showing both targeted cleanup (specific channel) and global cleanup (all channels). Explain how the function iterates through channels, sorts cache files by timestamp, and unlinks older files beyond the retention threshold. Describe the user-facing interface through the 'clean' command in the main function and its integration with telegram_manager.sh. Address common issues such as permission errors during file deletion or accidental removal of active caches, along with recovery procedures. Provide practical examples of cache cleanup scenarios and performance benefits of regular maintenance.","parent_id":"733fc1bf-6dda-4d10-bbce-d7a190da4823","order":2,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_cache.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:00.385624775+03:00","gmt_modified":"2025-09-15T21:26:14.404182475+03:00","raw_data":"WikiEncrypted:dAMSC70bWva9SabC1uic9spUnWswRIed9chRxV6GG0o41HiijO6zYMfF8c29nbEqVn0irv2f+TYr3/xdUcAXEcaQf3e+uCYyG+g4WH008t3jytW+IX/EO5/PiFIX/I5LjNZWuPjDAyW1nvuiLmjR5qiJ7NGVPCAZZo0qLgSQ1bqMiEEuhZgg9L2oSydC9GrU/ZWAnR4VYL/0hvUmdRe3FbxtJzTR+yvags9YS41bfnhte8X9b8X3Ujoxc3Ns9P84Ni2U9vMkdzDogstkkJ1OPwU7hddOq5oZVVt/WXiGRQDnqvHGMeE6inM+N+KxxPpcmemsHY3KEBMP9K/+FDrKoyrgWZTKm3NKcO7Onm070wlqNZ3sQ4C+XF4cCsq8ZvzT1I914jvxN/4fw1Cd/AZM749hxv9oPFtF/rW4cY5I7Y1HeJMKEtqi8BWivcKynlIYu9p3JNuSY+0rxkj8NHdtG4PIAG+N52lMYYM7KJ6A47SVyoJkzDHVSQyywYzkn8rEmgmzPZP5ikUd9kZvCz6Dy/KyA9lDlOuGfn+jOsb8/XQOx4cbLf+et8t4X3kTvH3jRkhNKu7rToumPICG9E3nOJgFhbsxtf/j+xHk0xJsMyIhUVvSNTJIF9ExkDJxKFSEk1DUQhf1OSpQrfmZ1ZZQn7LNNJ9QgwLM9/yulE49/qdXbImc0EylocPibqcKsc9gwqniVHWi605IYPzzQmLTJI0bWjdumbN281YmnBjHLU+AMOx7fcGX6yCN+xAuZgonCK1NSoP+FUUXNknUi+gmkfYX8/sBc83c9aYYb/E6cwhnkO/5TWSlXNivZOPtnW3578wtVNHM6QjSjbskvPXgbAQc0X8vbhYUh9zsswkwOMcI+xhN7HnccaI1TGg/7raNPzF6+6f61iNZdU/FiwpfgR+77nt0XKs2HRfRyYQlLeeEuMvU93OU0VeL8RUvlew5s2qSQi2sXAVa+DXJ1U9giRczqtwfhVLQLWJelN2zl9LgWE1BaIrXxncZRCjoMgqGeQPYIkpcT3YHB+Os0db2MYtpshQpmbVJxUEWlk9EOxzX8zxstDbovJzQT0wXjXhkYewfjmiEaIDnsWOT1MZZ2zBOtE685lRQMgl4QC5tRYPPSCp3KP8GwPHSQDMQwtvOcjkLb42qykisO0RlpHXzn6Y6mY7WZBlfdPCewzSj/QiLSv2o0HFmeKvryya3fSSA5N3uR6L+NvdvdkNPPqPWUOhcK6wdRo1vfW1cKeU3ZhTq0cKPH+jE5eJ7Sxy5lLLIhCzzglPRCL2uH8qcdCjiT5auMnfCLyrKKKJplhH9auyZmFRHoZZ3HEUubCMGab4MAGRcsb1skexFy1ff0XlrXmUWZ5ot50dIMO5N7F5Wv+A3vg2w0KGzbMxRn1oUGkUgG4tEg1OpbT4X076Za2T9fxQiw86Q24Oz0KY/8MJfJkgQp6zFlmJ1Goc5brOf1hDbp8lEzHqFmhLBzs3Qkz97iuFUEdNACk/9Rqw3fColUgtqML4mXWDICeauTLRBekcPET0xJ3aJ2DX8HVv+LEgx+x66ztx5uvJI1g7vXWomB1fslnKgtpTZFdodobtJCRc703iRwfF5KYO6EJEearjrORSxb/aBsRHCRKkgJwptE7cbmRV635w3tCM59MC8DYrmRj5NTVNRKZbcpSZV+CnKXw==","layer_level":1},{"id":"e3d218c0-7d80-4c30-a506-8c4afbd23d2d","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Fallback Border Validation","description":"fallback-border-validation","prompt":"Develop detailed content for the fallback border validation mechanism implemented in the telegram_filter.py module. Explain how this Python function serves as a critical safeguard for accurate date-based message retrieval by validating the first message detected for a specific date. Describe the algorithm that checks 3-7 messages preceding the first filtered message to ensure no border detection issues exist. Detail the logic for identifying when previous messages incorrectly share the same target date, indicating a potential border misidentification. Explain the auto-fetching mechanism that triggers when insufficient previous messages are available for proper validation, including the calculation of required fetch limits and the subprocess call to telegram_fetch.py. Document the recursive validation approach after auto-fetching and the conditions under which incomplete validation is allowed to proceed. Include examples from the code showing message indexing, date comparison, and the console output used for debugging. Address the relationship between this validation and the shell-based detection scripts, and provide troubleshooting guidance for cases where border detection consistently fails.","parent_id":"83e2c111-02ec-4bb7-8d62-816662f21ec5","order":2,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_filter.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:09.952335402+03:00","gmt_modified":"2025-09-15T21:26:34.037875003+03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"fcb45c58-40e9-420a-8e87-8dab99b10c9e","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Error Handling Tests","description":"error-handling-tests","prompt":"Develop detailed content focused on error handling and bug resolution validation. Explain how test_10_error_handling.sh verifies graceful degradation under invalid inputs, network failures, and API rate limits. Use BUG_REPORT_message_ordering.md and PROPOSED_FIX_message_ordering.md to illustrate how test cases are derived from real-world issues. Document how test_ordering_fix.sh validates fixes for message ordering bugs. Include examples of error injection techniques and expected error message formats. Address how these tests improve system robustness and provide confidence in failure scenarios. Provide troubleshooting workflows that leverage these tests for diagnosing production issues.","parent_id":"ac41205e-f37d-4755-9517-8abc897425dc","order":2,"progress_status":"completed","dependent_files":"tests/test_10_error_handling.sh,tests/BUG_REPORT_message_ordering.md,tests/PROPOSED_FIX_message_ordering.md,tests/test_ordering_fix.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:20.471514635+03:00","gmt_modified":"2025-09-15T21:27:10.799970355+03:00","raw_data":"WikiEncrypted:Jt2SeH9cQITjBGdB/YEfX7XugYljK7mlU6POrEtOSpThDcVM0j+1zOmCECMWMEtzxCmI0ztL8LK+bF61TgQFAQZQwZntIZYqnYjkgYqN+SZ5Xp29jhOsxLlrD35jqudK9Q/PonQwe4kWz6MVwnawP9OKMvqU8sEVfmNem+ijT+yIKN2YrSs8fyJ4gujLNLwrVmGvfhWVWfTv0eWZ86z4qMdNviOuKcWREYklVOaOdsvimSDrtqKuZ7giZl314lDN0xprmDokgRmmfheqgnE5VBgp5PTOjh7esvJvEeYo7dKFa9jZCz2g0aX2cWBtPdNqTHq1zc9XGTdpsSXGEZXoEFGX01qUr8ZEoNn4RGeWBnPaH5DVuCm65EFyX0X49y6Wdj5U5CVt3kIvVnjhMfLzLjAm+ejHukyLF4dyXvNPg0uDL0Y1zVELZwm2Mk4Lr9hgJKbrgtwYdtU/kyedATwRJlASz7+m9RI/QOsggeNpEPTxMMDphtV2wCKnb7MmplyPB9pn6Vu04kEy84lw0KoCMYhcsAozNAZEWO1ytO7Kaj7sBY9J56r7CXIwF3SXhZEirHxRN9pDu5/0RjP5B9qnDbHJTqw4euRzPxxymZUbfE80ziq0aQz6/oBAuguh6k74l3pBfpbz5TCy/40wYaMVlLFmWA8sEZWcOd3jIhwVY9F0QhWpboDTwhDLbBfZiZPJLEeV+J/qG0NF5qtskRUBPCNMTHVBesWLoS7ferLigzNI5GoE40wNAijkwDbESG67he9iWhyv5zcIS6UbTZEyPOV5xkoKZ38JKdpJaMeASjn5eJzz9iV9kUHq0ubjY9qfoyhE6TYVUtg7/ICBTZDcyMOBngzDqgKPeSJpPs33IFkxcNsoh6/WczMf4PZCoPxzyc3e2a4/AsOg1heUaeR63esyN2VEkmuLYfqALxeJ8sImR5u2QQr7lbkso0G23S2ixMKDM+xscljuVqIejwY5padcu2ymIRL/TvV9y4O9klY83G0Nc/Hq8FFTAsxUdNmqFx+K/5094ehw+YHungtzCPpj+3pbilmM9+T+vW4D78LrT6q/4BE8XEXDLwdIG+/woNTG6i7H9TfPgupY5uQGQcMX6kUkQnZykFT/MO5nAh4amaK7+8Utri43FPbMUd6CVONUjJeB3frTZNsn7FA1g0kpzS2StYopyfVGZMLfIC1JR1njheYctcRYUy2mfYTVj7OXiaOs/k7gqGQraQnB8NAvASLLt+d1yFTU3pDvMxB7YmnAcn4nchKNbehyfEXOZescRvx4OMFhegJ1oLFjbPs91SQlqi6QVx7YxAFCQ0HnlNY61KGApuje5TI8A/K+WBxWlQhWG83755gBr/RfxjlteIhPTxw+XuCt1i5h/622E9fv/NK8gET+2kXny20CT1De1WJcLUnbWlnZbquJCKHTSU3PsBrdGgK6HdNseUo+/7rTsCJTkkBTuAjPLNXFgwEGvSlsUTC/yUmWgEUkCeUCsfZ6B5Znl8E/Z6+vp3HNaWzeMkJiVsqMSzoJG/rU","layer_level":1},{"id":"4752f2c6-aad4-4945-bd6b-4c5b50b18b67","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"System Integration","description":"system-integration","prompt":"Develop detailed content for integrating the FALLBACK_SCRIPTS toolset with external systems. Explain how to export structured data via telegram_json_export.py for ingestion into analytics platforms (e.g., ELK, Grafana, Pandas). Demonstrate creating custom filters in telegram_filter.py to extract specific data points for external alerts. Show how to trigger notifications via webhook calls or email from script outputs. Illustrate extending the system with new export formats by modifying or wrapping the JSON exporter. Provide examples of integrating with CI/CD pipelines or monitoring tools like Prometheus. Include security considerations when exposing data and techniques for secure credential handling in integrated environments.","parent_id":"33439bf7-95ed-4964-9bc6-bec0c5d36f60","order":2,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_json_export.py,scripts/telegram_tools/core/telegram_filter.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:29.373147029+03:00","gmt_modified":"2025-09-15T21:28:10.364621054+03:00","raw_data":"WikiEncrypted:gWB8HBj+8+/15rQhXgtMjCNr8GB7wbRn8fn4n/YsAup6+q0PWzfVYRcFcGZQsdNLUkw/Gv5higXjQhM3N/7YIxFW5n9u8XDiYDaSyz/wHak6xU5v+i6y9XH120oem/jpCg5+tQxaZzBjIiqxXQqW8fHiIN1z17FEEu4ltcLqGIUorDkEH9z22Ra1zzWaBF5IKgB8qxfdm9oUBhnfy9U2TplwFqASxuBjRnPhucQaHS2L1fqrbZoLvnmg17i00qekLr7rTkW2dNd62MJ7L6gjXBHbHMV4on/QAd5a/ZPpKJBuOTwz/Hau0uELFDy1OcW/kX9iFAjyJ/4M0prTMCJ5IRzFzrbWJvuD6oZg+Bos9trxuKE6Om5X2wOwrmehJiALIkewg2tFuI+7ajRG59AQZ7bqpG8BACTgV1uhkNtZ+94cS2ogy78GcW69C/xWropKE7TmGBPGGA1F25gVc2/Kbv2oMUQucRxfLE2vHWFKfu5e/YeCROSBd2jS63ScdEjPxKsyuOGcETXmyirZrcUiYCh94QfmWiilBFmtY4DoWeGv0Ng6mb4ulg1Ywd636dUqDQT36CZBGRJy3TjmajdKo1kXluMzmHgZ+uyx/iDeJ3cNmWJmeyGEPJXdXfkhmogg6Y5lZVsLNGWu37/hzpPoT8oSmTQGzWdJnIdqzIASPRtsTcTwnlr3D042WKtJgHCq3SdzBOvMmFX5Zw6vczpqlG9pB2T3c0cr39BHMHnAq7ZRfA2e4vhWdKb1uAKQYRuOf9bug49aTXIGRUUT9LsdzBJteAhWyoWHStCmOHkUcSOghFp9C7Ew1y5zbcshMOZkKA4QIZAcwtmM7WQYWs1TdVJTT+m8KV6WKtivB3TFyGLZrysb1QTNg92UAKavfFiEhf4PQJUKcAc7mqTgwp2Gu9rcMZu4ny7oMXPUdd33RmVZl4w4vhh5j6/xtXccXgNXz1v2cp8gc8IvkVsIc8wZ1TYce2WVP3659GF110mFYO6RVN19Uub/s6Kv11LfbRybant2BSradM1IyKnd1gEQlMsM15dMyjT5GCFBLrUSsgTL4jI/wuXLrBM8FJzbBliKnh/jN8B+S9AnVV+1is2/ufpRn3iV23tqsnG/azzQadLwcoWfDTbrvKSIb8op8zE7wWm7OwWVEx2AqWf42sFU6E4RYlPzbrFq8VrapaKJzEUJpRyjlacRqnqg1+Np2stoSCF/ujt/T7ufsYv6gqOkjfCEY78vQvpl9N1sw91dtQV46Zn3vsYO3YjpJoscC9pD8orUtJUxKPyP6nxvypTt9kcOuv4jSS9YC0y0++QfIHQS9bQGRA+EQkXN4urHubO8BV6bU7G/nSzJM7QSvTYsHv23QwaQGt9PZbSXsQhb8bdVigwOsYRosS2L7uZ4zf4YGrgKXwvIDXHD883zL7fMEUSJDxVM6S9VXztb2vb7jhlsPTkTNoSHI0h+3iVJVHMj","layer_level":1},{"id":"543258d9-be81-46ad-bff4-a06024f9756c","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Message Filtering Module","description":"filter-module","prompt":"Develop detailed content for the message filtering module (telegram_filter.py). Explain the filter_messages function that supports various filter types (today, yesterday, last:N, specific dates) and pattern-based filtering using regex. Document the sophisticated border detection system implemented in validate_border_detection that ensures accurate date-based filtering by examining messages preceding the first match. Describe the auto-fetching mechanism that triggers additional message retrieval when insufficient data exists for proper border validation. Explain the display_messages function that formats output with date grouping and metadata display. Include examples of complex filtering scenarios and integration with the read command. Address common issues like border detection failures and provide guidance on troubleshooting filter accuracy.","parent_id":"8ba8b779-0b84-4565-b92c-2395a9e7265a","order":2,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_filter.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:42.287472237+03:00","gmt_modified":"2025-09-15T21:33:38.86970548+03:00","raw_data":"WikiEncrypted:Ph2tJR82xL0YTniU0B3H4Lsn6lPMdYGubhmayd9CiRIx8DA5Epe99lDYGqJsaE0+/9Joyv5ZB0Sf5UiPUcMzhBymIyMIkVzvSESdimlyYn7alb/NvrGKyOU6v8Zo0NSKIZoTDQsboIwBaalFq+L0lArQJMOtLyYfbKKuXwSZQPr2JpF7UvjOPnTiSuzuZGAMUKBYEneI61t4zsMrT9tg358ksWpe3srIkp7x/Q7ZaYHVLJH7IwAQZSKLkDqPrIIdqKY121y8jqP0VqfCYsIt6nOgGl5Ga3RMhK5I32vqMRvDPVkqXjU+EJj2BbaZGOYLEY+0aIcxq8UtWCcvyfFOGa8rj+W+IMKu1tx95GR/NN9acnnj9disnUMlYmff3lQtHhbfFyUNkaC/yInw4lAxfzOq44vc9EP11dQJIIGBkG2/X7+2vb3anEdKUvQagDZJSCNqtkh06EfRWB15bd2GWUOK/VTfUKQIvswkVqnDdmxLSgPdA/nnUO3qB5fkOih8EOg0GeSD32tpz1+sbeShpjLeUyNOUfi63yDOQ1zJJR2x9aNcbrqBOcYTCv4qm5SkF3xOA05fvHfoCDSlrJurqAq1P7I1dQKRKW7btz59OIQtFIRASjD4oTdM2BjlsV6CffBQIYrLBAUfHEw2HGIat17JBOSKvrhrL7ICNh235rVW2Nvb8GBt1OKod61WmwkhxyTVoT9YYst47Bkrm0mlhR1UIgb2bFWKIXyXkRXFw+wHECv5X5sMbdAUXjVt5vHFLGxR5zp5C6WjZThcWSv64XAxoIooDJgiCr8wQwhSWCmxW/tl0CJmAeX7Wkt2HHNzHI9Ju9wDCj3wSnGbW7N6eZqM0r42cv/6ktGMpZqa4rXnTnMMCCkhcxNvG6RGxynGnMYR1EbcXzq39tI5rGearmet/myJnp8hNDDa7v9oGo9jes3r73uopmwPN0X4WJjiFziaPos0dF6nP+/1gKW50l2VR6kJFUc3kGkM3CFeW18i5LxZNMiL4ZbXb2bhKfOHgKk87VRq3WRE+nIW9zTvJLRJ3kJzaXhqW0muj/qSuJFB+Zx6VjIenUIRzUQK6KteX1HgLye5Dg6GPwYmsBCxVsDAASEe37AYUV3LcrK+K9IAAyCYC+4indgXOJy1CbRsM5IZmOboKseWqNJFUvbqHDE37iukJzRC30T/58jyXs86q8/kTe/IYBcOLxizG9gZbokeUQ8yhCVUZaipTNqBsUNjVVrsFMjhCHeuMKfemkcVB4aALPdbVCP47QAkx2QADVqqJOUqfkyYhzfG99O5yTu9Qxynzn9eaWxWata+VNNFy1wwD0tkuXleEBfN+cJb1XBujTIt/YgRJL10Wc1YPYbyYVElphm5DfMU1RRQkd7CTQqyoR2q8FykJEnQPLL5fUMmV7DOnmBVllIpAJEflf7it2b0tqQsMmToadJyacsiOJwQo8CTI/jYA5gu1ydbqkh63s+cI+1FkplM2ombMc26lEBzAy7w8eyLKIIbi58W2etStIVykgk+e0Ge7oB8RBvAOi2h9yhRpQAcooVwlh/DHav2NZIgmWwsnk3zfsZ3kwRAkoqrr91TCH4vyAYFavqwmsNcCkFo/+8rt8QLtw==","layer_level":2},{"id":"60c165ee-6b79-4a52-9feb-79c8de8f7b82","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Filtering Capabilities","description":"filtering-capabilities","prompt":"Develop detailed content for filtering capabilities in the FALLBACK_SCRIPTS tool. Explain the date-based filtering options including 'today', 'yesterday', 'last:N', and specific date formats. Document the pattern matching functionality that supports case-insensitive regex filtering of message content. Describe the limit parameter that constrains the number of results returned. Explain the border detection system that validates date-based filtering by checking messages around date boundaries to prevent timezone-related errors. Detail the fallback border detection mechanism that examines previous messages when filtering by specific dates. Provide examples of combining filters, such as reading yesterday's messages with a specific keyword pattern. Include the message display formatting with date headers, sender information, and metadata presentation.","parent_id":"b93ef46f-92d7-44c4-847e-82a1b1b2c17c","order":2,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_filter.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:57.800697353+03:00","gmt_modified":"2025-09-15T21:34:17.624092288+03:00","raw_data":"WikiEncrypted:Ph2tJR82xL0YTniU0B3H4OzimQ5vNExp5EkX8N9gh6Jkw/3kaqh60VubR27Tjc4MUPPU/1X92kc7PdMjE30/vMbi7KKmh5mfXExiTawIoBlAvGXYHf9ARF89Efi3/TwjyIOWK8Y55aUFh4BgU78zfdmepNkgfjrVBUj96JQuWuzG1MFolMpYk5QN1C2DBnU8vGMriJohZGHOvGVAdQC6K/1neLNWPwCtECx4JiR1hKPIDoe/zm4X4y3XxiISSbNQHpgabGu+hp+AMHmMfAbFIlZwl2Hei1uM4R+tLUmcqTO9q3JQBJOYROaLq3sIVL0LsohgCBkyLrt4agSOCQ2L7E3/Gj84sFv80jtNysXDu53qCt4XokGafWRVwOSSnEq+ThroJ081fOGsWA3CvXtRRmFJmbx+i9xkRCbjhiN+dqEoDzenunZsNn1VUhSo6Il3hWakysOOm5qnxe9/GP/oy06Y1F01bvp6ltCRtzkwY6bChWb7KOd+pDabwu8khXitIh3700XrQCuvaAmX41kNQ5vz76mNguN2G0E5bQrzdHFrQf3NT8g1wt0UfKbtHudrhdhKmVOJOItR7gUMfSJJT1dx2j/phgk+qPnlj6idgqvFyLlYxV8HuqUxsGAHHkqnTVrz7+t+OZt6v+6ryfZcRpkr+HJ+lLH4h8jThp+a91ctP47w8P1NdGEb8NuqOc3TEgJmSgmT6bJ4FmWkWbgb2ZcTY0iqQBb/jWjnUK2jLN3+3iz++o5JNXATznebM77IHmY2xagZTnT2ZeOT64xtmGyf3x/lJ1/2cNnJJ5vC6eFOXjkTrHZjt6/po7qHJ8Yn1cz9cRWauFQKGhWduU/iV4jkvVOVFxeAEsyzenQyG3fuH3xDZrXljt+X0875vGx7Mx5gVnC+vwZw0OSHO9zIsX9+bqy8tJz6XCoa0Nl7tBez2m2xcstPu2EaqsahMzd50FCER3o27F8rH6RGLyxJVg6Jt11yZbiSEPpzAV8XcQHJNzOFyB/KksB7zjcgssCwEU2AzEwsEXIlcaFkSgEME6AkumblyP3SaAQXIhP/aC8so3/pYzchcQ1Z+V5yDsAAamh8HF9D7WVRyinN2PVQpFl/uj2fWgXKrA6NFSo2f00PdUMqHuMPvCBXqgg1bATif1SJalHINxejcSTw7daWhL3kP5WFUIrd6qoMpqjbJ3wTOYWllY0aTUSsRxa0enBgiHIkqMu5K6VoOXmoYoCanoEgiiFv+2850piYU9OMzObzrSbb8IdbvXexuqZdcDnP7O+Ngci4FJNdJGWQrEwcr26cgyBLqriAyT1M2HmRtScGX3KCRvdx7qEu3J+XDY0ZryjBIe+iZXg4l17t61pKJhpIDWLIQ9U4li1J3Wxmfs13YClOlgMfoYyVvQAbW4FSjVcvzlVj2s6fsqQgme8aK0lkOdARqjOLdtJWpjlGD+up4V6PCF7u3MhlqVpZ+d+R63ahq0RChYcymDflPFp6fsXpIQ2CzrmwRqgMqIy7QM+lI5eDLoI6+TQHo2kKwPWopsZt2Dbri7Cix6ulc4H7eXE+dILiwrVp1flHkYo5tr+cmibw59BAAjSO4Eitsbg89+oG72zQ2PsZJYiENskTrGrtpQ73rVcdlRbDa3Z+R1d9qdgsjtnjnojKyQV8FegLugkSVHjpDn+3HllcW8CU9l/D20PSRtKrbCS0ckzUpto=","layer_level":2},{"id":"733fc1bf-6dda-4d10-bbce-d7a190da4823","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Caching System","description":"caching-system","prompt":"Create comprehensive content for this section focused on the caching architecture and implementation. Explain the purpose of intelligent caching in reducing API calls and improving performance. Describe the TTL-based cache invalidation strategy with different rules for recent vs. older messages. Detail how the system checks cache freshness based on channel and filter criteria. Document the internal structure of cache files and metadata storage. Explain the interaction between telegram_cache.py and other components like fetch and filter modules. Include implementation details of the smart cache mechanism and boundary checking logic. Provide examples of cache lifecycle management, including creation, validation, and cleanup operations. Address common issues such as stale data or cache corruption, along with recovery procedures.","parent_id":"","order":3,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_cache.py,scripts/telegram_tools/simple_boundary_check.py,scripts/telegram_tools/telegram_smart_cache.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.809321431+03:00","gmt_modified":"2025-09-15T21:16:05.501469286+03:00","raw_data":"WikiEncrypted:6+tjrG+VnXc4xk7AT6U/b14ZeVCMG6YwGyfmYNpQbmF4K/5QnbswjXbe6F/Rucx6shDeEZO3lO/snjdpfAMCUvU7jWEi3aO0ZoMdgjwVPATxzcfVSDfvOQ8abD9A7RJyVNqxyvVFCLiSl4ONUQ2u9kpEZEzNdTKKlrTyodl1/SDcMEeQjFJa3fPaRDqPrWa5gJzWRcNI74aqexpbP8R7IVmLdHOAQKTm6/7QJFJ91wR7Qk+InfZNDfJj0Dzj2vQEjw3AGiYdF0aLsdws/CbpPDtim8SMr1uuzuqnWUhjj7PypN4CtQ2vso2wVehvEUMPUYIUddvCgNCrF5wtbj8JNKXgEnDLaE7+GULfM4jpjBRJBVaGZLxtlcCnIdfdGa1ACoS1NsNToRO73cXWpSV5zPJbhDYJgJ/hdZ90IFx3+VSH5vWtuoRFDm8q1DhxGE7ZWfVqboX2PxVL3KiXAwMJJbr3032qil50kOHpt+yKi0D6nknriKUR6x5HhScZp0yf26y1Vg7UoF8cye71yxpbwl+z/jmlV1DewKMt/oApYZLBOEEp2zQ3E5KgC5FdHtVDJhdj5EwJPv1H/o/lRiLlqbIupvwg1zJA2yB2aoo0STBoUlraR3ATAwlzPxVTrVCqC06p8m1ffmZqFlo+vVJSPRVsXdZrXW3RIDIs+RQ2zDDzI8LwIHsKXWvCWX9ftJJ5dtb9tNurDyld4WtcHa2DQDQXijxmYazYBCY8WGdMz2kQ4ytgFUXWoYSMNEHyfbcdTEiHuWFZoRjAIBTUVCa+YISY1AJppb9tki/4a5U2sfblv27dznbnXVOK1jOnccDsCRU4ZGNA8wgdjFSRe9s5vJ4IhAJ9LY9Uopc4GKZfuavCYUqXUQrl+HrmbsZwrEqcjSle9dizyqv95NwJWwrV6ZEVfrgA7VaJsVRPxO1c3dEpuuYo7++iLWVZu+rQcvJ3ZXw3aQTWuZQDhty8C/+coeFN1OLH73mQMAE9wMAuUB+G2sASNibuD9Vv6qGJBhH85/yIW7JZV7TyrIwWzUxYIW9hjhcUCFlIjWJH086S7MTV/prcHD2GURVgZwijC0BpC1o6Qlg0wJpBYUVEVKiSd62iVtPwAySC6fV6T9gl4774ZsRICDanKa+UYQQLHPSJtz5KEJJ6o+rqNYhYUODgLpcTxsqYVQUwHnL7Y8PlHgommlZjmd7dWH1xQJfHHdOkHnwBDrKeh4rSvedIVm/CoHRWY/9cdXDOViSyq27mD0OBMBdQWfYNsHfKp485jzpvjh1MqzUFY/1PX/aEUjZcEVnnBtTDKptZN22UBtwetACrg3bvvzGJ/oQFTUyRrKK9JdtGXkjW9HsIWEbrqM4+hDGqqlYgYFxli8S/ZbXFPAwVHu6HPQxu7JzZhYXYdxX9b1v5sKpY/RyB8FjIKOgVc1w1lJvvxmooWgyeHp+GmZxjvcHiXDdd9cJNPfHhyLwcMt4DRtH19yNT4dxGRXzttQ7QQlTfMSg+IS9DxyzYBKfGPp51dCQKAA6cvLfrvyK8GsmI72ave9Gq6f8pbgFYY1avZh4NQ/ECF8djHyfqa4USRS/FCy2JP/N/ED/UcVX9LoB8OK5zewIVKHYToS+MHJZ9lMUATvHQX1ekc3SVo7gnDVame+GhzG84AaCVk6Y9TS3scQyyv1xeC2tM+ZHYAgbqzmZaFS0UhW/paoo+z/N4mnG7A/Rq+V57Z0EwQViA17qGY2NnN+c1DshvmXwGkxQhewTN0AK+tgI2DHNAdnpfmThxlx5f0WYNsa46q+wGnPWg2Wm/bWPNGb9o1MlT0x24PxwYJcGcyIiL7LCmXoA=","layer_level":0},{"id":"cf56aa21-cf11-4e1e-a34c-29832923637e","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Data Flow and Message Processing Pipeline","description":"data-flow-and-processing","prompt":"Create comprehensive content for this section focused on the end-to-end data flow in the FALLBACK_SCRIPTS system. Trace the journey of a message from user command through cache validation, potential API fetching, filtering, and final output. Explain the conditional logic in the 'read' command that determines whether to use cached data or fetch fresh messages. Detail the message processing pipeline including timestamp handling, metadata extraction, and content filtering. Describe how the system maintains message integrity across cache boundaries and handles edge cases like empty channels or network failures. Include flowcharts illustrating both cache-hit and cache-miss scenarios. Address performance implications of different data pathways and optimization opportunities.","parent_id":"f09db685-51a9-4251-ad6d-c1173e2dd978","order":3,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_fetch.py,scripts/telegram_tools/core/telegram_cache.py,scripts/telegram_tools/core/telegram_filter.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:38.83692752+03:00","gmt_modified":"2025-09-15T21:28:11.637698153+03:00","raw_data":"WikiEncrypted:PGdHQOrMWxh6s6galmzx64nAc4R2/DlGKIiM2gUYJzbNRYLlUjgKuRgjCxtlgg+U2ltbKUy7IwU9ObUN9YD5eELYdMYQ17gNkeoWSCi4BXDA20O3AA7eBGRAhA0I5P2LYn3/DskqzmiGuVx5JUatZ6bRC4HaQ2CFg8J5i/mzvvye4m4UtxQmmn4ZZOMU0ai+dXNGhqW0yMRnH3fyZMt91t2O6hQMPBfSI1p9QMrWuwDfsuEfNJwhSit2Koxo5WngLY00+gDCKNbnxmdAReEdkwhX1bLf3H+zlNKjjYIuOIWX2EeiOzUkw5CPQNAwIO+ru846r78oDPv4Pm1Soa0+eOXyITHkaJ51gAcCTW7yO+yRZRdzMuUHMM/zXCfCZi0x80+/bKh7piXxsbIJu6rwcgdm+VcB1/CdZ7XjhnzaqwfH0dgfpQDvW1NJRS6FllZON5lzJ4WiM2bK5AtZRPhnxGMfAxCSDosuP2gfQf0WniM69rgVrzKSizmueLO8U+NWQEzGrJjMXRCwhgyuweyh9z5Z4bqfPglVgorlhtZ6W8HkM9tP9L08BJw2Pz6vaE9mWP6Afe789Yk6VkU0baIBSfrApoj+rljAln+fZdQzK6IG1o5QpcOM0kSyFLBDgtQaQFK4zSUf2TM4yoKcr/cEsyUX5nyaifnNW2rQ9lQ+AFSezRysoDnmMJPFgwH9IjUDF9r3qdMIWqvLUizXRkGgvrd4s33/4GPSPrkdOYqgt1N+ld2edSmKEx4tmjL1PmV0Pd0ICrx4NARM8nYrPulG1WmNZoJ409oXrb9R0a+3XNCOj1Jdb/lzBJcEzeuLk256KAhSZejLEkz6xNniXGhZob+obWnclKGEcasjbi4hcEYUXDQCCd3qzHSYJQMrkMXMXI4zv2Cs39fUS5/rMQ5bjDppt22spn9/FG4AL6h8kAv9SQx+apqljssygnnKc/D/y4FLjyofrd3nBGdxiJ78d5H5+IGvSILjOWMrhy/3Dvm19hmcSKXoUWU39SDfx/tmLtuVxt50zYisKpTb8EuDCb6y7V0lqWiKJZUAOVLc5C8giH+B/90sUv0NQjdomCZjnTSTCsqnK/UoutYzAUzfWlx+CaIoUMZR+Y8TF26k4DB9zO+YwJ9iQCSYN2M5Caxtg7/IyxloDTrD3LCDWtyUdiSic3KJ5HGtrX9z1R6q85OW7A3M+7Y/0rnJNm6mNAvwRysYgQ0+Sbbz9bjYztmNZR+OJWVswvPNckhWVJG2bp+dPekUDEYmollAL7B561J1HjY8P7VQ3j/0xcdf5CCHtec/tgNPVdOR19oCTnZuraIGNcsXn6SqbvBE3+AeaVcEuPn10rC16W2teBfcB8KAyKNrzzYbBdtJl17WJxXC9h3xsgMJxnLgSHjpyR/xdvazB6NJeOgLPAcYX1+te7nOWauxrc/a25N/TWcPm9N8sJZDhKLdVCVbBYcETEM/uoJW1Xw/3y66oFtycper5fI2KtMrPp+Atd/DrqxAH25ALBu5Qm0vAVk3OGrn3Ll5/px6o1uT99itxZKZGFOebAYuzjCE5ol1BN/oSMRVl8h/CSdJzlszgZHO7pT0zx3cYw2xiQ8QZjt7+JWS1966+n782IsnvgjwoCzJPmTTXcGJSC+u4JGju/ag1OekPFt270fZzCu5sfBqx49wbGnQ/ExHWGgLoj6nCdSoTPswV+N+/JqIeOX3SQEzXXExbBJG+3Z8X2Z3Slr8zQ7t1+gVcK/WHaiL7bUcZjLEXPqYYOHuESKc/T3ae2tMsz4PftOCcNTX","layer_level":1},{"id":"fa0fba01-cdd4-47dd-8d96-2b597cab099d","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"JSON Export Command","description":"json-command","prompt":"Develop detailed content for the json command, which exports Telegram messages in JSON format for data analysis. Document the syntax: 'json \u003cchannel\u003e [filter] [--summary|--full]', with filter defaults to 'today' and output format defaults to --summary. Explain how the command invokes telegram_json_export.py to read cached messages, apply filters, and serialize data into JSON. Describe the difference between --summary (key metadata only) and --full (complete message objects) outputs. Include examples for exporting today's messages in summary format. Detail integration with the caching and filtering systems. Provide sample JSON output structures for both modes. Discuss use cases such as feeding data into analytics pipelines or archiving. Address error conditions like missing channels or malformed filters. Recommend this command for developers integrating with external tools.","parent_id":"84bcc4a0-82f8-4ca2-88f0-fb5b6e4fbefd","order":3,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_json_export.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:49.152286652+03:00","gmt_modified":"2025-09-15T21:29:12.712482062+03:00","raw_data":"WikiEncrypted:a7fPrUEd1jok80Nuekjb0BNvjdOsh6hyirmxrJt682VbUzXmMaHRen8EOHmPW6VZ+xoEvmw/ars5eQN8Vea2KAcLIuqtiNPNRtHLW9FsYi7u/BUDHSG1erp7KfJYLDva8Jxtzqyge+ZomgPF8zIP2ne8y8bSnAI8Lz1d1exfd/yO+qNw1uTNPr1UpqFBlf+pReA+9ACbPqtBk/ymX7g+Xf0QJoA4S0OQm1r2hzT43jmblhwaH/FnNVUb5CKBJVmPAUEw4z3/6OmkheFaDdLS4fC1aIW1R19DoZjyqsDBjVUs3F7g+XDHbO2IjqmQ+Za7LZCw4U9mwS4Mye8EmUrbNHDLZiM3Erzukd6LvQKMh6syEihGB9xzvPmy1aMpPvT0/zHh+9PfhiETcx8PDVJhjMBlaHuz5gUT7wwXYXbl8h8hzyIZDK4Un643yDAfyuoGh13ZC1FiaytTQAyzp0iqe80tNriIIyAiyDA92BIILKuP4raweOUdMfGXQkQ7DpP1IQpw1LSVmtq4TspRPC7VmuMmWkRafu+wGhhtCLik567EP9fShSed/JkxO19HRJwF4JuzRRSyj+YLrUTeYzCHgQgkfaDw+6XgFPuXV5oG2gCnsfGcVlMu6BuCtWHfG+TuEWnPeZoJsl5TSwDAI29vbq6N97Qeg8oSU2FRD65coRJPFVrXpRJAAil4zYVn7jv/bgx6iooJtSVRGnOJ2KpxRaqOg/1A9bbnj33p1GqGBvgrBEgIqNO5WG3HyyIE23uMJqrqoEZzr/oe8r/rQauoxg8IdyUaAPpi7l3w5FUBPI6ay+Pv964iPezpou+SvVfxZunK3xfzPms3NetXAPzNB/ms+sTkiz3jImec+qfHLAzXUiPoPxRGMZJSTiQARbq+7g9HVP2smIlrmGFK0e/n62x0CY/raafD1R+2oOiFqcgLf1qABUaFDg9HmhhE/ifqx9fpGu5HmYvYtMU81oU4uHTiZMvk0YzhhiRkgDQrSl4hDNCDqXTzkYhLh48p8I0stBXCkncGLMPxRs0tB1XwBycnMEmXGPvEjTQJuQDInnWFGWsbNM7+KZtd8yj99+VX9wHhLuusTRaxAgzulIHpGWrDvL4AN1zRZ91i6+Mp7b0coXHU6j2E51cbzK8B6g7zfpZQCCyuYtNtxvtrjmysmlqLtzt6rPR6DahLo672yoTqq3JcY7NUHQ3uwRtlNpl0axmTY2+v/7VkErGzxnidV/7aeGaSQDYLnZQres7rvmd/8ejEf5wzrbt8p3TxWSxvNdocUFXavs7hv6gcFGgzv0ItKyBdGb4Qfd7mqUEvuEGGOlVfD07NZCqNJumSOh2vBa0L5v3II+GXSe/rIF5WAhiokPCrRkceA4/TQiFRkDoqwE+3nGytahIsuzQBVwyY5H1N7lZhI5wJmAY2Q+pqyQSP8JMdU1kTbB5e2BEs4NfEHHn/8bbEWjnn3wy7h6YC36/cFGmd5J2//j1xhLkkhr+8Z05/iuuILukDJkm9Syltn3WQ7ddnO5eGs5N/TXlO94c3V5rg2Cz8OP6jMA7uWJ3WQ1FPUc2JVvcKOmz1S4PG+iUT4gn4nSqndjLSIe1sLkwq9c4pKZ+WwuLVut88mkyYWuDgxD3KSgwDx1h24mDxEN2NwbyHYEyCZMCwP7YRzOe2MqzhC/Caq1UZoLxZuSnCKcuyVSt5t58MenYqX61oIgFzWUL6xR7Alstg8m9XUoX/2cjrdaoVyg/vS6Pu1w==","layer_level":1},{"id":"64472780-444d-4672-b036-9c0c913c449e","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Boundary Detection Integration","description":"boundary-detection-integration","prompt":"Develop detailed content for how the Caching System integrates with boundary detection mechanisms. Explain the role of simple_boundary_check.py in validating message borders when cache data may be incomplete or stale, particularly for date-based filtering. Describe how telegram_smart_cache.py extends basic caching with intelligent fallback behavior that triggers additional API fetches when border messages are missing or ambiguous. Document the interaction pattern where cache validation failure leads to boundary checks and potential auto-fetching to ensure accurate first/last message detection. Include examples from the codebase showing how these components coordinate during operations like 'read today' or 'json yesterday'. Address the problem of message ordering inconsistencies in Telegram API responses and how this integration provides a robust solution. Discuss common failure modes such as false boundary detection and mitigation strategies.","parent_id":"733fc1bf-6dda-4d10-bbce-d7a190da4823","order":3,"progress_status":"completed","dependent_files":"scripts/telegram_tools/simple_boundary_check.py,scripts/telegram_tools/telegram_smart_cache.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:00.400884229+03:00","gmt_modified":"2025-09-15T21:29:05.934874929+03:00","raw_data":"WikiEncrypted:j+2A8rvjnFFVY+UoUP4qnusf5k7inig9BIZnHIMX3ucMTmSNIzYsCSg/XoipLfIugX7lupQeS6GixnCn7OTeD7/VJJBCcNI8garfzBPNcHOlucLahoQVGk2Ee91zNLTqZGg3t21vDnYIW6V3WDFKFN7wGSa30DXRQJvlgCnxhl+zQsgn8+CKF0lF/Kt98RNr3TjGJvo0B3/6ZlTsSVqkVVW7fiWkqR1eL9SoN9qnBmqTV0BCEhmh0p5nbilb1cr494i99sgxeqouG8xJf5lEo1c9XmmN6y+m1vEMML1wBIqF0/FYZ6KRkpgT/xfBtMiMsVBO5qoJ3taesikf153ZAdCRUFzgt2Ajs7utvp7ZU8SblZx0BW99o49gSoSIiR2a3/PefGimMdxfcuqGKoXSEPujDDm2jkkCHB2PWCVbJVD0ywpFfrgIIkf+pzygreBswwdks+YWrFrnyN+WrYJgRgGmhUu7VLfi2VH/LhxVK/UceCErG0Q+c+CXs7fuyFkR0/36St7dgrq/OkVFouLYJjiZ4aQqitZ/48k89ROXwhExkU1AJwhckUnr1+sSntxQ1/m3pGIId6YnKO4R5SWNlQ3vZnOqW9jPNmeWfUgdzu5Pxk2avpP07Wpy84VgitOREFVDUCENbYsMPvWSxsKhMaTrUYuDrMHsCxc9YAOlRHvxTYCPlROc08FVSNfpTU+5ESeyrWCvko/zLkEY9K9wXIi8Y4XHyXze1YItIbc78IzDjYRNVosV68ldyMBwMnEe+g7MhKxxmYpmrQDcgxz0AsYY7SiZp2Zjx3Mib/JJMSsG77xd+satD79ZpFDhDLhKGGnAM0CA6IJrpYJHPIpUcYGETXYf8jgSCgI8YPmYkD1zQk1ESmmbXEdt4ILHykMsiOvYKHLU5dPiOoGb5GhdAg5dUeYNOTqMmcnXt9qmilLxP67kh7FI4kwXmSlWx2Au+cfs2rFvtKKzAZ9k8hEP1ueABD4bTmmlk3IGbyvPw05KLQ9OPkCYbnC5CJUf5bzukeYZDg2nmUMccTb40L/sP9QzS381oMsdQCxQyqRcjP7yOifAWklXuK28N1lu5YAqYRTQwyjP0eE7winuBwwaie1W391C9lwo/wKIKI2KQ4CDorJ+HjFFGBb6MDKX3ZNY5kcZzqFi4KC+EI4nQUvxuVQWD7vQ/43i/G0VfBi8Wu8TT+jBOHVjHkE4uVGe51nvDif2lYDGnhCjgMF7Bf0kUmIx7opATtVvmfBubuD6zx27LTAkjbsTRu0aSql4XVn/zgeJeFi4Rru7AzpEsDyNdmrRPbkAe+8z4eMzap/RQsGqVZVClp2PPZ6vhb3vvV6YwO7/40lUOl/p9oG8LdEoSAaaKs27qvFfHsXPc7GzKk2vn36baPuVhTbGkt29DGWLtJ1IMky7qfV+prZfxhb0TEI7SOBCcoXD358NHyjotGxO2P4zSqx53KSe9T8RU7AbGzWdJ6uD3fRNsotBDbTFx7n4Q/O9jvlyP+qWoUVGRucMrNQ4iNLAP8iADbLpWKJfS4CVbTVOliMk6xCW8WqY92LDOKQ8MTOJuI79KfcrLg7E0SkAI6+CZSpxDtIJH1/oce13g6QYWu9QQSGoDBVmRe+3wyfuH6jEaAyMEGjbZaDRm3QS024N8Vx9JNXOT040uRP+RVnU1OB6jFcxifGarb93X+epEXCVrhM6AH7ywvcXVcVmxQE7dReoyP/MdMQtDxoQUnjbIPK/17wf17I3vyNG+kdVgZBeQvV2Qq5Faek=","layer_level":1},{"id":"a0ef7c0e-8388-4298-ae3b-2ff8c924d680","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Border Detection Tests","description":"border-detection-tests","prompt":"Develop detailed content for border detection testing, which validates accurate identification of message boundaries for date-based queries. Explain how scripts like boundary_aware_first_message_detector.sh and timezone_aware_first_message_detector.sh verify correct detection of first messages in a day across different timezones. Document the purpose of ultra_robust_first_message_detector.sh in handling edge cases like message gaps and API inconsistencies. Include examples from test_first_message_border_detection.sh showing validation of fallback mechanisms. Describe how simple_border_test.sh provides baseline verification. Address how these tests ensure reliable date filtering and prevent data loss in exports. Provide guidance on interpreting test outputs and extending detectors for new edge cases.","parent_id":"ac41205e-f37d-4755-9517-8abc897425dc","order":3,"progress_status":"completed","dependent_files":"tests/border_message_detector.sh,tests/boundary_aware_first_message_detector.sh,tests/simple_border_test.sh,tests/test_first_message_border_detection.sh,tests/ultra_robust_first_message_detector.sh,tests/timezone_aware_first_message_detector.sh,tests/correct_first_message_detector.sh,tests/fix_first_message_detection.sh,tests/get_first_message_today.sh,tests/simple_first_message_detector.sh,tests/test_first_message_today.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:20.476429575+03:00","gmt_modified":"2025-09-15T21:29:49.736169953+03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"b286a885-b416-46a6-b7fc-7fd60d26c0e1","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Direct Module Usage","description":"direct-module-usage","prompt":"Develop detailed content on leveraging the Python modules directly for advanced use cases beyond the CLI interface. Explain the public interfaces and entry points of core modules such as telegram_fetch.py, telegram_cache.py, and telegram_filter.py. Provide code examples showing how to import and use these modules in standalone Python scripts for custom automation or integration into larger applications. Document required dependencies, initialization patterns, and interaction with the .env configuration. Highlight use cases such as building custom dashboards, implementing specialized filtering logic, or embedding functionality into web services. Address version compatibility and stability of internal APIs for long-term maintenance.","parent_id":"33439bf7-95ed-4964-9bc6-bec0c5d36f60","order":3,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_fetch.py,scripts/telegram_tools/core/telegram_cache.py,scripts/telegram_tools/core/telegram_filter.py,scripts/telegram_tools/simple_boundary_check.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:29.379980452+03:00","gmt_modified":"2025-09-15T21:29:52.93741193+03:00","raw_data":"WikiEncrypted:vEO7Ijy2dU+nEIDHKdZkARe8xmg1W/UtWrAF/n6+/euMA8JAPxHj/+zOO2Np3+ihSh1Cf0LrxVvaLBMkQ27E3S8WNUTV8kGUW/ZOsgBn2zs4rvq4lrXw8y77Ot6Emy1uUqNeDUqXjJW0Wc/ixd2NmHL262wB1v4fRm7yZ8XBYo9MgT8RCduDDqLHLUGcv8zns10Z666LVlsYLI42lJygzW0Osc2klEqrfNEimDaRnPKTyXmNPzKWiuTyRtoGrCNJFk0VkC/n46y4M8fJzzgJD0ECYZ8PwaKodWlUbvPffB2wl47zPKNdcB+YQfKU7vxucycZxDfoh5WJs2wc2ZE1RYMwCx4aswt0fd6TlCN/nzWEqRN6JkNTw7vRx5qC/z7eL7LocOW4UAbOovdWwyxPNXG8/u7HsbRJ0Tt/jiv1HojKbc6Egq9cScVFfrxiKNwmaZgfi5La9NEmWCZJVN7hafuIoKN5DcrxpDdFHDEfieOiTpTVE6EKLbJIoJOajr2AnQoKofzlTRhffdzeiNh/xYxnvVh2/fBV6jCZbKF5wcY/oCzpbZ7yxuK8ynNfmfp5tnndV9iI+YSS6imawNBYrQ0oYfww3R1wjU+PNhoVfSpMuYqy+vtDtqDuiaGDk5mFzY52x0PQ+VefY0ggEhxfTMbs8f8M323M+bLByt2LP02+GLc6pgK/t4TkbOSZld1tWvmndTGtqLvvv10YiZlfCLcw7j0pihzZCPKT1la+ycpZ/5Uw66d3thd5Xy2R9+AA1mPQUeZI5cvH4NfYfgTXWxSVi44g7SRiRLelZI7NGPap8x3V9TVbO3dfZGkuAp7S17DS86MQOVoW//HtgOcP/NLTcTMQ+r2mssFa4Hml0aS3nRq72lb3/72i3URxJIsObZ41YWWCcBSuIoVkC3JxVoRBlitgwP8DwRl1+OcL2lbj0j32F0vVWHRoO7+0ZqFM6AoajNJ56556XQpBOw+GS0e99pm7D8IrIlp1m8p2QsHF54xBy5xoN8XIxTyZu7VMBWfLeulWVgqC5do05oQMXq/twSTDM2Jp8TYeLwCEiT9tW+hK+0G38CEcqLU9lmGYlCUL3QRY36buFJz+en3NcDE1zdXFl0jaqLig7fsIOfpzaGbbivMJ4gNqe227ezcE/8LAlgJvcILAHqU268+zWiOCNfdkGR2YbtIzgAdECM0LNGFPKAvsHIcxib85pgpVb1fmsbsmxmGTR+AZj9yeye59YpEcoh/IrnGBOp6/5cBlamwNdDxFfXlOiTuqkwbc2l3A7if/DO6BcKAWBnzsZ/W/KrpSD2NmftmvECA6MRrmAfDrCMplj5gGdc0o5TFZzSELPoVZFDNjRkg5U7YtLkAP7U+Qu3UtjS0z+An6hq48WYie4xtkTkekUpBhQ8ou1ZT3TsC+0cBCxVk4Auvv96E7in78Pv0BTql6ZgCBuh4eU10WfOyRVQv68wyghvTpPjOizRYcXLPWLHYQ5Y5eXmiH2AjLzO1RBblyw9IQPDBOsOJ7AhG+U6R7c5gE//+K3Lks4ElO1X/wK4Voo9M/5F+FN3nexnjwu0uWrlbVsVk=","layer_level":1},{"id":"8cab1c6b-9f0c-43cc-a1dd-baab827557f1","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"JSON Export Module","description":"export-module","prompt":"Develop detailed content for the JSON export module (telegram_json_export.py). Explain the filter_messages_json function that applies the same date filtering logic as the filtering module but returns raw JSON data. Document the export_range_summary function that creates a concise summary of message ranges including first/last messages and time spans. Describe the two output modes (--summary and --full) and their respective use cases for data analysis and verification. Include examples of how the exported JSON can be used with external tools and scripts. Explain the integration with the json command in telegram_manager.sh and provide guidance on parsing the structured output. Address common issues like empty exports and malformed JSON.","parent_id":"8ba8b779-0b84-4565-b92c-2395a9e7265a","order":3,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_json_export.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:42.293383916+03:00","gmt_modified":"2025-09-15T21:34:15.69342198+03:00","raw_data":"WikiEncrypted:ct8KfNUtLTR+MNSfn4YHFETX+RLatFXWdeTDK57jOq4u7jEKKqAJxlvKFRrUaqRBizedOaY964j3SRHv3+ZtW3iIFEHuglNCJCJLKV0ctANc5zHrBnW2J7/TedVPGAzKRMy3h61JhwNypeJR2PJr0iWCSDSg/csoV1W0juWx6aE4k8ZcKL+FhakqAfarNTLsPTeygaFMUcYjzqF8vWYVEcTxRG1rtgFa0tidPkwd8n18Iyy1Ht+Za/NyFAliB1f1lknyZLSV+u5kofx3b74XypChkwPYM1Rf71qk5d/DEDtXyWIuwfSdjIO+XoTF8pwgjUnlqrOKIJJGd6YDgd69LXx/5zv/edjz3PdQcr50xEFbWFe19yQ3bxg96yeXONaATyRgFUgQ2bkYaooGuwkuWmiXqIKAHFOc3FR6ndwr+JAaoQ6FdYbSiXMwy6LVzuAXMOBGlCOxrrJxf+L/6vQ7ojMSCTnJdNU4bdpfPAh6wAV2vkSWJ9A9FxrmK4N5rXcb0wgLvtdr+xQu+/ZCU8QZLI2Ue6BXZmLT2q8Ld9GBsvAUfbctLlmHDEeksVcgxoXQrMv0POH9gAscYb0wIPnlL6JDORHR2Hark3oAmEw4akg9VLYV4LcAiMyBAjS9zyt1Js33f2zaspzJtssZD2RcOzoJSSZUVMI7h6kKqT/NFnf/7/G/4MqxWDkQjfQSr/vGPG4gV1uWooAV4TeNLvZ/G1hNVQqSR+KfJgBUmgIYi3sswlquMk1F2HaKYarTTPg7FV59h1CPL7TsSuv2BIo+euTFW16RUcSvalwBDYYW7CO10ZGKLdhFKIIuTU2rBrObZRBuLP0NesI09LUENC9bvbgtuVqHJGLd1UKv0AWAetoIVcjlid7QPlR3OPsoDzwG5roKRezYUuCvk/ElJ9Ko9g+X1NL2XD+ZL8qGKGxjVmPiVnwMYDKKNDwYt7HAqlC1Orzes8lmdDyiTQmq9gmt3TgY3emuEaN9UdLfYEYPo7D23diQAgGeHmAbrjrb9CXxq1RBaMQw2gNPx2FvORKiMj4/PBWujrM1AXqKqkTfyss6vSbI+tXfSiW2kzfF8d2/JekLGGMFq/eJfqXjMvj0OHa/Cyb10VQKcwjIPzpzkgqvP6igFP8op3Xr/pIXOS1VuAPlm5byL+CPbcIUdh0a4FfOqI22i6+8WOH53gl1322LWMFpgMKas0ZP04ES7yTaU9Bm45cmL1pMT6c/EJeSILBivQcR67EMhFC6+68EN8Pv63M5X+dpVK3rCMYVv7x8+UhRiASCnmQNwdaXqJ1dNY8A7BeGmnjh4MWj1C3V7gHZu25ZbogSdic0bZ9p89D/wME/L0MHSylINj6YvDEViUORPHHNexvQAJgHi0QhKZqoBK6DDO4wW6nSRPWIAD7Z8ND1MQkBsUHeiALKsmlHQBQ7VHBP/rYbn3+rO0rUJtg=","layer_level":2},{"id":"ce20b3f7-baa9-4eb0-8ec7-4e5b17772055","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Data Export","description":"data-export","prompt":"Develop detailed content for data export functionality in the FALLBACK_SCRIPTS tool. Explain the JSON export command with its two output modes: --summary and --full. Document the --summary mode that returns a concise object containing total message count, first_message, and last_message metadata. Describe the --full mode that exports complete message data with metadata including channel, filter type, export timestamp, and all messages. Detail the date filtering logic in export operations that mirrors the filtering in read commands. Explain the data model of exported messages including id, date_utc, date_msk, text, sender, views, forwards, and reply_to_id fields. Provide examples of exporting data for analysis and integration with external tools. Include error handling in the export process and the structure of the JSON output for both modes.","parent_id":"b93ef46f-92d7-44c4-847e-82a1b1b2c17c","order":3,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_json_export.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:13:57.808226117+03:00","gmt_modified":"2025-09-15T21:35:04.90550696+03:00","raw_data":"WikiEncrypted:tJ25FWc3qLS7BXDXgna8sImKYCx6Sc/Mz7hNhmmC8EdRx29Z0RJvVMw38KhsDkRX/1BXgYCurYgRG1N3siq8fEIeO2+YtUZycexZ1xEauIWcfGAVPCEbZRF2pXfk7jpPogL8hjuzq56n7+LK6M+n9kQ4jQzoLTqlMZuOX44PU5Sp66dGqqtz4UY1q0YWzv1FUVu1n8b3P4PqbAVk0Pn0ssWQA0K9PZnEANE1vaLP/K4CxOwi46RxAO8yeF4qyuX/cYRL+mirh/rYLLPmhP2CmVcprCD4cT90sHthS+Pis+I2b1XA9g+VLQDTeNpkOmWkU4OrlJrXsk+ClgUt/e5yuTFrG0kTPU124beHN/32DxEJLZpM70gK6jM5YygWo/+1BDwx54WNILqpwLYyfu/Zh22TXUFZ8DzoEdLZ04fyznIeN7fuViZ71IESmUncJXSxFzwU5TbF7CI99yAP7BNlZrJ4nCFIgWRwVnEn6rtfaTUwBJR9+6c/hYIn6HiUt7ZL5/BkoScTE4YsJTvUf8nTrJW2pI8swzrCn9vlmQWQNmwiIWB8z0PtYP4FoC4Z8tsIuxNVj7vxsSr2HmDCNXWN8NhdF+g48ig9yRq1+uL7wka8hgULeM997RIacyRQ3H+h8QPxIQLG8A+Yn7j2ztuonZxJqfJSnF3L/SdsyxYprNlMZyPpHGaCENm/GJaixuSevOmcUSErpXbXg9Ucr29rJc2sXzGRZde2IS/ZVntxbrBRc9ckJQFocxyC1mz1ElZDpuOtzUjhTYzuDn4CvbFMGAvgL8r8iXV1AE0wln5R7mrUESIx/dxOT0F6ZC/EkZvWi4cXc3DwJpOh+/SKZ08JOzzno4BDakJJsMGg9sDufWhon4ldEFaf44XCAThl0kmrwQvqqS/kXn4fTftEzkL47zpTkqt7xxzF2UUyS3CIgwYF2USB5MFIp4X/I7gkkQsD2OYa8hmY2JCW6a4sGaOkMaNtaNeg1ifomJxcCxbEwmOqBrO/z4YyMT3RC/LMFg6b/iQVyXOYDjpIDRAO2Sm0PY17KuRSdrVBbMjdzxkT6I83dDvgjYpw5e796DJs/x/RqmIzwkR9RggTJthidnYA1oktySMfNDlOsbxbjVY1EPf5AXJh32k66dJ6qjE073iw+cs8ooW1wOXaFw3me24HBFTY4XwMofdnw4a2GefbtkP5HxmjuJh3qECjNglsDEgstTFL4BJ61QdPpeOnTVZwcxwwVJgkTLwYA4Un1AYZImLphfM/ucuvSY8MdOYsRngXFilS9ZwlEOzqs643HE+V0Q+XWyJkdi+QYYWcHOQrvb07pvNKHnXkJ1khQTWZ1PA4ceXN0RHVlW0OZKi3P3IT9GEj0xXc0oHpO7XVql4l0MDjgEWWs4lDpHF4PW0eGnMKRFgKpUmBQG/p+xcibarfZc0eYRL4fRxf4+BHhp3cUKtKUyZr88wmUs5DHZ6ZLwEVjYeAW+Q75cP4DdZvuS4/DQw5OaNFutdwBrxfNoEDzwJwd8rjP4USbeaRX5AidocLagfFbKQoYYpWlgC5H8Jh3aqSWRUBck3Gc80oprpqK1a20CoBN6C6tgiAxCDEHnGtqVT9B0LU8zfVljo9DpBnsMTOwHQumgxU6jZ5bcQZ6CqQQP0iP8Zq5x8syLMorqvb","layer_level":2},{"id":"50ecbdb9-9120-43fb-9a0e-12f7fe330188","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Message Filtering","description":"message-filtering","prompt":"Develop detailed content for this sub-feature focused on message filtering capabilities. Thoroughly explain how the filtering system processes cached messages based on date ranges (today, yesterday, last:N) and other criteria. Detail the implementation of border detection logic that ensures accurate message retrieval at date boundaries. Explain the fallback mechanisms when precise border information is unavailable. Include concrete examples from the codebase showing how filters are applied and how message timestamps (UTC and Moscow time) are handled. Document the interface between the filter module and the cache validation system. Address common issues such as timezone mismatches or incorrect first message detection, along with solutions implemented in the system.","parent_id":"","order":4,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_filter.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.817041121+03:00","gmt_modified":"2025-09-15T21:16:49.154949608+03:00","raw_data":"WikiEncrypted:IaaHBhg4aKVK2Z27STIpfzoVDL3b8y57VDcWbf2xE3YDWDGsfi+OJUaQzXx98Lybvsshm9Q0Keje2BIxzXrtDapjwRnIFAKt4Ud3aLkfALgeKB5N9nhkNOGxIq4gLaxRisx705jTzwKntxCr+Mhc05M3UdkP/frTVgd6FtIDVw9nwlDk2A+XCq2gBn3usmN2G/d/UYzFUjR7Yq7JI3zEcY91uRhmE4GMTtoTFdBAErrZRs6hsVtFJBG08Ct1BJiiC8oXoL43I3G82PzmUJMRFf+ucMLBCQmQgCgs1/HDS/cU/O5UqzKL5nTTv65hjIJfsK5gT2brQTWB7Jv0pgJtmcbw57t4S7g2+hYRL95weZrktuyZVGNxtzr7s4ZXPOwDJ0f1g80XQQcnXauCmXPyUu710pYyHxSyOhG5huvvtTBaIYzB5c5Jzau7AoucN7k85dHpK+Oc+rz58XNItIqU/rNbQdKEaUfb52jfi0OmlJ/PMb9X8KdAYQFSiKlvDNBkTBqBBLfeHnacBYmrw42IKuV8tb1vz5rUcNL/UDbW8o4a+qCX5IyhCL9qstsjcZm5R8AKvOnWy3RuSUoi/fFd0ttJL63Bi1THB67/NIsiG/S18vt3fm8uOKbKIYGWH5afeSl5y7YUldsjJIRzxZ/cELq3OvDDOsO7/4G+ETs72I+nHm/ZRqLq5dww9MS08xw4Xdo7p4TWFPD7X4L7B7SQ5sjc2CJcwobwJCMkUsekQ0z2D4Qw5MxqwKju+9GIg3JJ/VI7dde3lawhYLgoYfy6lI+gji78F6DDnVbZBudRjwXM68SmYc9O1oWCIHpAZWC8UVNNtoGyw3YoAk2eHvKgumhDR1QpNjwD+F0lrdu7HOYFhDjsni6d6ys+BY6bTuuJBa4pIWJM6Y0vRmjtgkrx8IjgXBdbGbjYZ3biKWxzRJ/KhYIFIF9YaBX2Rn3eQx5IJag0RldbnkDEwU7us3Z5O9ToJfjUEVyMukINsug8GpB4qHQ404lTj0lGOf2RbxkwYowwiGz/dOPTtgk/oJqGazbXWaEteUU+hBrilEiGsJ+8xAqDY/ck8jvPs6+Wrx1gh49t3PEK1fkIhyrAtwUITc2Rlycy/5/r9zFN6gakXq39kWYRb0Y092l5LnTi6XGmzomRr3jwKXvscYF/25v2ecfqJDyRZqgyPRNbZOAe3+UPTM7DuBEOZDZyMqaE0pm7TQONQhCgb8kE4kbFyqDWDGbY9unsGso2bKJRjcK8Tc2PlJQwuxzXQNOAtsZAC5Rp+8ZVWAD7BCHW1uTCDAlCAnoZTk+5lIIe6gjiyzm3zt/B6vkMtUkB1Jmqtn6ppoK+C6DNLfRSVc7X1sgidBp/rRPyyZWDBooNZFj98YEkJIcYgcvhaj0weSf0nNGVBh/mX0xpmnwQBo+GyloWb9MWEugQJXrcLPG5cJMbBf4rwNA6vwqq7X2sr5m5p2d4vp1w/h4s7uHGi3uwExeE15i9p8klNsmizgK+EtkfhqHKPzn19n03vWEb5X10JRqbE52zbCuzv6y9OsMyk/3I9Blb1WtV/yzzeBD4WC369q5HDMmKp+ELVhe4iArXF01I3hiRmyrFG2f0uQx9VRn9f8w2IRsvU0TXWcgjZ/Os1vn87WO8syiHCxQMNqWOnyZx0TDuZlR+ozCmrSlOpz2zmuE3VQ==","layer_level":0},{"id":"87200b84-4de7-4dd3-b68d-058217f43888","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Cache Information Command","description":"cache-command","prompt":"Develop detailed content for the cache command, which displays information about the current message cache. Document the syntax: 'cache' with no arguments. Explain how it calls telegram_cache.py with the 'info' action to retrieve metadata such as cached channels, message counts, timestamps, and TTL status. Describe the output format showing channel, message count, last updated, and expiration status. Highlight its role in system monitoring and debugging cache-related issues. Link this command to the fetch and read commands that depend on cache state. Provide examples of interpreting cache output to determine if data is stale. Mention that this command does not modify the cache—use 'clean' for that. Include tips for using cache info in automation scripts to assess data freshness before processing.","parent_id":"84bcc4a0-82f8-4ca2-88f0-fb5b6e4fbefd","order":4,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_cache.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:49.15894022+03:00","gmt_modified":"2025-09-15T21:30:39.910055994+03:00","raw_data":"WikiEncrypted:dAMSC70bWva9SabC1uic9oozYU+o3xNAvJdHPtYeDeu12wipzPN2tH7W0fwh5aTOcsrc9E+QY0vrNxHT5ym6xprbvGrePZ7nWTcdFawI41+F4w1T2Q9T6XWBacE4iJbXqxF53HwlnblUam2A6+wS54Li5aVqIOx71c7X06LUxiWAUVm8vpJ9XS485drEHISJgDQ3jeZ+5/ubSHr71vge4JdHbbzbAr06Kxn/iBLrgHBkurxnOzKiNU9mfWt5JA24NzwrpVqF2SKsXnZEyK88DcYhJKE/XctDEBrZANQ3EEVk8GMn0SV/dRa0Hws5PJXJfAP4Yq3d2DWksBUQVApoGOT6WGgUnKQkW0n3ENA6hpqRXQwR6y9Tg39qXjWI36YCanKdqZwIWZHxZOYOqG17O6OObfD7WCQmB5JCoSpBAPDpi3cebwlM32xi0+cBzt0tpVqw2XBxpAaVCNhioRO6Jd6DLrOe+yFRwrY+dXnagbYepZKkGBTt2fJioV7Vtoui32/Xw2Gl7VOlKzeQaMwnFBaC0tMJHWSD02dSSqiSUN1ghJV0Il1QsDrNTCrqIp1vgpnJB6TCdU/tQe56Cqz7HENvinkVuN4eohwGMXr9z8B314Me2eIba5qaFAsCnahX5MzcmLkG5MIsM0u7Go1IhMRqWmsuBzg2G9tjhVc/hdMfmqpaUEJ6uNs5EPLHyNkkCTcnFs3gf8Jv7rrFtc0yi/GowUidDdJzNcxKnSCG1Gr15RQrM8jmezsx3dS00TuDJbpKRkRUVb9MgOi+ITZtNcmkUdNvOeADmTFenwp0xHf7vtwAu8V9nOHqN9o2Q8DqwPNOq+PDGGT2RT1qKouwttGGd0feujbLyirZEpWEJHvr1VRYXBznEto9IgRoGHKWNkom4fHQaEP6/sCJUHdANOz415EoSQSb8S0XIJhuSg5K0UieVXccYa1I4+pWNybD4wic4cOKsohOPxoajZUeL1YooueGlFNOgHoNrud6irIBpMRJ6xGYrnEDDrLKQxNkwe8lIs+FgtZhNY2IJhRN7N0yTPQvsgthOQKFhaYLLT/ODOHFgyCAz7gS826lewjzyRihaeAEOjnikEPZaRNMMfly8or0EKcQBBfaAfdFzT5lHt3Xgn2swpX3cfCkn1zpQ3Kd7oEyRKf8Sd+mwWokiRS2WOdxDsjvQJkec8ydINeV+N4/wx6Es/xr2BR6Ke/NO3UD+dK95DWlUhUqU6edvy95Z1F5bNt/ZMbCRNlH4mGPR340hULcKRev6JbjBBEGp+zxNq5ktQTx+gIeahS5ALOQfE2rQDcBKMjONQmRynVw+UUDXxFvjpFCSYDVThCfob91qEBF5X4Kvml4JnCEDaX0wL8325V58Mp9Yau44hF+6y7vp5XKx/RHUOEbInR2dah+4sotrv82VKQZETYvGu2Z0hExq/5VpFPlxBz6xKYhlKM/dNoEzRRAW//rHL7scSNanVMOsEVDx1yEGYZgQUaZT0K3igiiqXfnboFe3zQu3y6L7AJ9J262ljFMEWi0s8PxwDbZ/ImC8JRK2Qma5PeeqQSznujmrMHsqihpEK5uhegr1m5iUEHr/bpzVTeN","layer_level":1},{"id":"60a4bba9-6f1e-4bd8-9f6b-26080c9c2856","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Data Export","description":"data-export","prompt":"Develop detailed content for this sub-feature focused on data export functionality. Thoroughly explain how the system transforms cached message data into structured JSON format for external analysis. Detail the two export modes: summary and full, including what fields are included in each. Document the implementation in telegram_json_export.py, including how it reads from cache and applies filters before serialization. Provide examples of the output structure with sample message objects containing ID, date, text, sender, views, forwards, and reply_to_id. Explain how this feature integrates with the broader workflow for data analysis and reporting. Address performance considerations when exporting large datasets and potential extension points for additional export formats.","parent_id":"","order":5,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_json_export.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.826508366+03:00","gmt_modified":"2025-09-15T21:17:01.659083041+03:00","raw_data":"WikiEncrypted:tJ25FWc3qLS7BXDXgna8sImKYCx6Sc/Mz7hNhmmC8EdRx29Z0RJvVMw38KhsDkRXd0d6TLTLjg1d3asq4gxTcdBD1pxkCPBMlEWtqo3Na5buEqjM3znhYR6jxAemyB6P1yBgWJ8o+jObXyc+zpxnME28PG0ns4bSszxQivo37rTFHkX+51AGnINtPdEmXfs2BPQFPI9V9oIqjsWfVip+fe5vi/pxIj9fUPy8ARsi5rEVpQEXsF3wQ2SRCYYtamW7EC0GgyLkDU1oXn0q5l94U2je//xi9U6tEh6x6Fup6AYs1ro1dPxNFrLasBMQz6vFvuuKPX8z9LdvPKIOi04RvaHnD3zX5Ixv3wU7nqGlG9aLHJdbMmdC56oRg6HI6qXSa2jLmRd3kSOaOB8ZL3Xx+joEy798f7dHWKty73pHPL8QGm53Cab0fGTOuIV99hhQoO1RIH3Z5KOqyTUHoe4vZSxm5a3MrauPp+kyM3IHgBp6gNggGVd6BWdcTHHf6kQe442qqyHKJ2Zskr2/oSxcWj/OQnQOaBh9mk0xOysLkQ99aSenZI5YyCeCcaCHOMSDcpouusceXr2PJ09rV5QgICh5+ErPLq20VTxKANyG8vbLza/N/360HDDKGOdBTf5AhWkplQrsEGO2Mj7uNJ3ZCToQaRz70+8elAxpqWhpw8EgvQE8/rP6RRMJbyjKORCrh4QhX329uvSthwXbYIF5Swip8XW2hUMQhjJpaOBr1AqiiFbj1ADUGF3+9/+qGOFcc1/ov1xXCRHa9ntRMpE1sfHgoW+eVTxBeW+rVV6OYUPZTuL5BJJ19gE6tRETlQ5rjPFJTkR++2ExjV+ZWDplpczYinlFN3Vr9Fgqyd4vAeHoht3AVkreOF8F4kutTsZdVJG1UwH1h8W6rgs/88bMDZA3xZRggMN9iKBq+zWdjIb79ap0z+33hqly582aorw4sCcyF1z0mg3DZFM7nvMMa4/6TQiYx81bZvaB0rJ6cA0t7QukgOQnOGwfS8LdZPOwitapbuqEvCT7jCyizYz6Stg2AqwdPrSMqSsVrxMKF0T4S/kG/YdbbznKtuMUDmVkw3ylcP+91EYIvV4OdBvWff9ZaEAb5yjr/6mPWoEIA357VyWKjngyYEAR3o2c47Lkq4oKg1p9OHPYKW2PQCy2t8bqzXviSLmzaEqcRpr1QoqvJV99XMJI0rwo9xl/TdhOnRXsbuXPdtk9Ij4C+9INalFWJSooyt0IHlqci3dbSOZemHs8AZeNkzdaw9yE4+U6JMWjtsvfOVxuVncdwCsJvE1MYWOT1ZfHwKVXGGp2zNvbc6LzAMyr9YjRj4Y9/kt2HBLq4STJApgNlZn19V+u9QeVfzovLgjIKGXFOVawVH1J9YqffQkxPEiXtAT1CmteMNnuN92wGye0K08L8p56NVHm2l65kkVojmrh7SEsTbPo+E8BGtGCF482iRu2vWYSeBw3nm9BLOEw1RZ/MNzRwrLxs1JTYYsGmktx4j2KepbNZum+GnNoo8hhOXqZhv/6","layer_level":0},{"id":"8648b443-f8fd-44a1-bc8c-a5d093aebea9","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Cache Cleanup Command","description":"clean-command","prompt":"Develop detailed content for the clean command, which removes cached messages to force fresh data retrieval. Document the syntax: 'clean [channel]', where providing no channel cleans all cached data. Explain how it invokes telegram_cache.py with the 'clean' action to delete cache files for the specified channel or globally. Describe use cases such as debugging, ensuring fresh data, or freeing disk space. Differentiate between selective cleanup (by channel) and full cleanup (all channels). Link this command to the read command's --clean flag, which combines cleanup with immediate refetch. Provide examples for cleaning a specific channel or the entire cache. Discuss implications of cache deletion on subsequent command performance and API usage. Include error handling for invalid channel names or file system issues.","parent_id":"84bcc4a0-82f8-4ca2-88f0-fb5b6e4fbefd","order":5,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/core/telegram_cache.py","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:49.163060683+03:00","gmt_modified":"2025-09-15T21:31:12.294677019+03:00","raw_data":"WikiEncrypted:IAPZ2Fm1xOG5S+OxniHLx2LSAPM+PFm9zHpbRfrj4cxERh/xgt7rIjhbTHunA2UbWidZXYV86BrOq6ftnE5qWoNDWkym5AOeFv0K+GzzJcDxJmwAHTCIPk2B9KRof1qpgL5eKd9hzCW7D4ADmXXk0jZTCFQpO9SpdWntjOCyIMLMdFcYNBjbveB4+mqR5ehRYN6k3Nnv1W7eBN8Gtjre6RZbaSbGjdsT/rwx7nmnWlAyFiDCENQSUkdvAM8H+RN8QD73Cfy0qvoB2N4PgaEakLn2VOh+SqEzg6eW8GUfwQ/1SNTk/WgZwiEAJmUP1rz7JqLRGTc1jJaxxsaUWpr3aaUKB4NCSz6fhWBhtCLMmVub7/E1VoYUPNlPMrKFCXZlgRhvQ6mlDUFOlW+aJd9SHnMgCzZ+IuiVrhgDjNXaVlCBSKJOm4xkxLN0B5PBap/mTVypxIDWewTDw9rUBofAnj5MyzzgGmp0TFMhHmi6srsoVTERcdU7uOtEE3raraVmMCCfedh3ErPwOqWFf5iBv3CZbHXvbgaMm1mVylPfXJZ7NmKsm6zknBpVjeX8FZHRY67zU8A1zy96INg75w3CQFFMt4b/wkVTb3pnO9fRzM0eNK7CoOC/P9x+zMFVOIlO2r3a+I/OlIpthr70E8/Pfd/4QYPV/Og/92yy6LjEER2Z5c575pmIu7KH2YAzSN2rOdkdyqtz2vPsMaKomvnz+9vfHPzKUMWXROudtRbfQBjbZjZZ+TcyH0hNkm885CLwU2lHtvecTb8bgUSQ/9T0kV3+lTIyMA/i92leXuh93iaJEgUF4r5nWD78INvIts826wN9+rQW6INcPsGANqxyXMU0JrHYeyJORRjA2eLh7R8bVKuI74PDNiwr1259HiXcd9v8HHa454vhzeAf9J9tTqgz+rjfPmOQ/vqxSB7uvf3OZ3a7GIs4p4dPn7WZE3Wca92aatFwXkyMF0RllLBNdzYjr7xxRMkEL8K+lfbEhWc+/sX4xZVgIpIjYLLJzPnk9wX7BbMkoYSaD0Yqep4pqcO+PZ8IY6SAiQIlmsrrv34lI8+W/8d1+ff1fPCQYu5gjCOq+ITtfwFkumbfaXKotWimZt2Nh38DLDnl4AXD82AlCO+kzvDtRja0tQkAxVJxfAUajjF21UafV1wX5fA85CPWHDIj+guZY703iH4yxFjns/DW+CNnJ4JDfBKIk1Ljii/Ci/i3ox16b7zar7ZjFkeHItM+RdTBochGRji7qGe/cAJkrk+6Drn4DJLfn3TZ/qg2SLv1B51k7ECp8PXZOA8C5O35z/PLchvoH6S2ZKztZxVyt0+nLfl/nFxWtZSXvepBSsUNuaeroYyPqQGa94hBTxDg+7R9tFtQrkIoui/awu3znb8p/RcN45W/4hX0F3noY1XwtPUBjw5U6EuD0fsM+DAYbKkI+np70A741KBmj0a0NF3D1GMhiCyAYY1lNyEfM/Dovnmd0mDL7QwNrQ8HmHE8fB5gwysZXgeyWJ5s0UBcL1xbFfi6rGedZ0rVgiH+XjGzbhUhueLUinyERI95ep43LFhweeOLPVMc5s7HYs4tvczNXQsOrWDEch4phmpxvsOhOicewid7nxXlStsf8cQ3L7xdv6gphA8hXHI=","layer_level":1},{"id":"83e2c111-02ec-4bb7-8d62-816662f21ec5","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Border Detection System","description":"border-detection","prompt":"Create comprehensive content for this section focused on the border detection mechanism critical for accurate date-based message retrieval. Explain the challenge of identifying the first message of a day in Telegram channels due to non-sequential message IDs and API limitations. Describe the multi-layered approach using boundary detection scripts and fallback strategies. Detail how the system combines cache metadata with targeted API calls to validate borders. Explain the implementation of timezone-aware detection considering Moscow time. Include analysis of the test scripts that validate border detection accuracy under various conditions. Document the auto-fetching mechanism used when border certainty is low. Provide examples of edge cases handled by the system and performance implications of different detection strategies.","parent_id":"","order":6,"progress_status":"completed","dependent_files":"scripts/telegram_tools/core/telegram_filter.py,tests/boundary_aware_first_message_detector.sh,tests/ultra_robust_first_message_detector.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.830872893+03:00","gmt_modified":"2025-09-15T21:17:40.01616925+03:00","raw_data":"WikiEncrypted:qST3IQrsZBJr75qY/CElY1xaVv+jCJ8p+AiAof4kBfaHE5S1O6JGf9c2t6iEZml+ZK46oWCRzcuts0q+DGQz5gmceql3MTFV3ocr6Rwx3Drs/Jf6ln6n6AYJXWlQiOD8foATiPE2iXzefpY5DHNE0hdJ2Fw5whzg9POIC1XmoMnoKiWGIQ4u4iduFCWgsosKZpFyJqmK00LFc8Q/4UpT0Ng/92PoYSjSefmVt7bFYPVkQmyg1JfHuQ/uMrTXNfCp3jwcYxqqGXT1trB+w2rITHap7tGj43Iz4yLWkLfIWc4ZYpOiqsnXRTsnSDP8aQINRLck806myTUgZXR13rGE9GGtWoefxQ764tJiO2SgQO7ouhXqu8xFfg/s72l/Y5k0RzzkJTDCfjBRnDKu+DKiv+U13yLatcn5xVEYIsFCxv05YLr0zzV0/0Xlv14ZT5S571hsTxQ5JWrN39fNl65WCmAiV66B7XMWTh01NfsFrAa0jFKXe7PpT3xaVKYArSO5AW4yVZa0C7dCpbQW9PLQgRrNWn7xP9kFL7JWXgiYaCiHr3uNytJvecdD67OuOP65MgwinegGXs/JZUJyIBmh7OTj9s6MUTmzkf2t0CNuUI+kHhYcUSIUAFO23r4LQyshmqXi5AfAPnKeItejoW4c2CybWAakwEE421H4CRvnMtVNRKKd8Lb+FmiPNX0gXlJqErvaEQdTrV316hYWdJf9YGXZnS9CcZJf/vr7aYnzez584WB5KguqSF3Zdu/ZWLatg67dHvVltp5RT0gVg0m8/dW0lztxpzbjScukDwWnfX4U8/2LJPemSW4EQ6ehSNL+1VUhh0tIDFsb5ppzFC0FNx6qZiZxS8zxqK5AgXSfSkF730JPmLmTu8gk0SoKqadbaQwVaUngp1/elW3YHU9KzK/3b319UL1XZYwxb4jWl++iignY0IAlLgKx6vTKXksWQFaUF7I47/r3CTz5aXNhgnn5Sfe35vByGKBGxd92TwD1z3sIhkTwyepgSwTpHRJmVQ/R8uBk3MOashUHHQhAWAbL77POIOOYSN5WY4vtHYalhuHKM4hJs9q05AxWIUfBo+pxVYajZBal7fch1bbq3tiUpumORepa/HXu5jQ9iD0FgF8xi10EoUfIZEy8hWCdErq4gDEfkd6HrxrvVkDzdd8lDq4k1gpaW/mZtA52BVFNz3BI0Gv6ITZLYQJWRnhk6MpJJCvz+Aeu4pX1WZp0N0FX/4M3vpTR00WSY0aXxIciOnrxwmZ1fFpOAdfiXdwHPPLxpTqAqJgaGrNFuRytrX/tYYIryT4qrj2erFgrgGIVjUl0MTnUozNWX9ZiMHpeuPlEu69rdE9SFGjePtyG94arjOmHHsCQUBJqDiVh1Hiu/XkbxfN3jCjRhtyrwtdoYMN2p0eNSSbHatb95u7Zq6mUcwB0T/NcHxXtpFik6GT7bvnm/S7tSz3cjw3Ik6L+xpjVb+s8OT0LyFoT9z9/QnXdq2DxJrdUx3a61UCJ9p24PhYGWUqTUC1Tyx27O6Cptvd+1t61a2vSZ5PEXUA1dixSlv2yHvcJOUX9p0QK9Vm7oRWpdz2WS60j5xoxfvtweqwtJETOSh9+S51m7uLVNvPHNbWUv113rqtJB4q+rTItLsWGDZdmntDDfLhW7FOxV0NI4hLIDEXyLaSv8SSA8rGSVTVBDaz6yrqRcVKV9uRASHhb+TQRGJe84Vy/hBlqEVy+hHizWoxhYSIu/zYxmIW0zNwC02e433qUHxnpDFTUF2wuemUIw/pJkNCyyFlCCFf2Kn+EIdDEimOmJHexK9cd6J94TTGKyHjBxK1qA0I=","layer_level":0},{"id":"1ce07429-5406-4ba7-92ca-31b81b481d88","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Configuration","description":"configuration","prompt":"Create comprehensive content for this section focused on the configuration system. Explain the role of the .env file in storing sensitive credentials and runtime settings. Document each configuration variable: TELEGRAM_API_ID, TELEGM_API_HASH, and TELEGRAM_SESSION, including their purpose and format requirements. Provide step-by-step guidance on generating and securing these values. Explain how the configuration is loaded by both bash scripts and Python modules. Address security considerations such as file permissions, environment variable exposure, and session management. Include best practices for managing configuration across different environments. Document how configuration errors are handled and diagnosed within the system.","parent_id":"","order":7,"progress_status":"completed","dependent_files":".env,telegram_manager.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.836292328+03:00","gmt_modified":"2025-09-15T21:17:53.320667882+03:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllB9TGvdYeEh4zcG1OGQGWJSFpFw8F31SqwuVj2Tmc7rXwB8dEu96VYbSi1y6wDE7kHvkA9bZdXTvw7YL17tOilm/6Q1kSjtgPt+/aLd5qD+r+q4faxI+ZsPK52yWr5AarJcoqi0Z61lxc5AFfYZdeXSRQ5/Lo7/QIUNka93riY83t5rfzqhsX6OwcJRTjcza9ALGPLd0JKpLBACqnyi1+0EiAU1fqZRcSlvTAkyNIax5a7HA0362AKSEAAC1yb51K8LGIVBGbmmZKp6qWZyzssmoprfkGWT78UMPD8yhPgfdSrwymbKx3XyCFhatmGKp900doU/PWSf/QFu69y3NvV/PDO8m4TrWcUhFTod3X9v2zeyhJgcH5q1BMiFs+6b9ZDCO/vze6wvoq7Vpjq4k7RKArvcp+DWkBVegEInYMOXpeJxMcFZba+opGZPKySDbZyvHa5Gl+ubocypDjM7SE5QnfQReBwm299niarKVMgVOfqp5dPBYG+nFCO+4JO4GNFyWHXLtAuAsOzd8vhCGI9dTxFEutphT9CBC9Cx0PzTiJz4fmyJbb8GyFBAd/9hcRl0koY/aYrWsZgZaKbP5v+i3NW/pmAJgpDjfjyG68kG4CB596/3h5BDuG53sDCsVLzEF5VloePUUk8mMSiabR9xA4qg4AqxQvoMU0JV8/xyZdPrQo3DEbffWX+27loMH49WYpZAsTe/r4Y19Q7tz+R3klkM3+2BLhh1l2/GNmCtpEGaXyS7koao0xaj49nhxOdYdiU13XmYka66bxepSyoQC8NoXJieEiGl4EaZv7bA3qswik9LhFdO5aPyc6EzyNzOG/2hP49Y5atD0BTPSooiBNdVCv/dXgv5cQuBVNIIo/iyjUo55M/K6N0vv8lVvM+s2PoTU/kczqh3ISUu5Ulm9X5i8/oAe02dWtdtJInyybd6bgwPIVU8beAp+9YJERk3/WkL9YKaW8sdwdPMajhc6kN4EVlj2VV367XKNMs0albb7Dp7cjHY3UCjerT2VlOkkzlvmZSQXtyaViVW4cIh4kM+/ZfUuNc93RURRmenkH224xuqVzLgco/fG5TSUVxIp5aT3j1MlVFaf32XbyXb7iPAhP+j3zI9sGQyrYuoUf/SjaUIzZiRkaRPAyK0XSeZTnC4P+GWHk2nu4gXx6QjarZjHc8jVxghQTtut+PFQcha2YRk8kEcfl7f2CKy6O3z7KukjgSbZsYeykuJYKSzFd2ZPHcM7usplYGSyfJxu28Xf5SY4IKryNmlxYhaXVE74YciJuvk7FuOyL4GThpFTgH6ybQ53FR3hjprQFcYcqyOszO5Y6U26g0v5F/Y/2g3oj1YgAhe+8t3mQmXYKcSsbHspDO1TeH4LUrK2cCltOZumZJz00NdY3LIlKZvJcHSBzEz8u4cUBlziRzZUyBhcfYhUX/X0fr0+UNSdQAIr","layer_level":0},{"id":"ac41205e-f37d-4755-9517-8abc897425dc","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Testing Framework","description":"testing-framework","prompt":"Create comprehensive content for this section focused on the testing infrastructure. Explain the organization of test scripts by functionality and complexity level. Document the different categories of tests including unit tests for message ordering, integration tests, error handling scenarios, and boundary detection validation. Describe the purpose of key test scripts such as test_01_range_parameter.sh, test_10_error_handling.sh, and boundary_aware_first_message_detector.sh. Explain how tests validate critical system behaviors like message ordering, cache invalidation, and date-based filtering. Provide guidance on running tests and interpreting results. Include information from BUG_REPORT_message_ordering.md and PROPOSED_FIX_message_ordering.md to illustrate real-world issue resolution. Address how the test suite supports development and debugging workflows.","parent_id":"","order":8,"progress_status":"completed","dependent_files":"tests/","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.84316282+03:00","gmt_modified":"2025-09-15T21:18:32.112242487+03:00","raw_data":"WikiEncrypted:a51tw9+B5Xez88YuZqi4cFcpX65Vd5rNV40o5oWZUs4FwGGrSRdy4baE7AxP4pD13L/tQhsp9kB/Xu7kiZqp6H06NEfedWqn4CBx3vInH8ugacG15IZKEsMI4LR5TxfQX57EbZZg8P2hA9aEd3qtX4+Cli6uuTrMmXMYMQDG3DLZ0ERmnHKnPc1X+MFzudNKTyZtRQP2ZN7ltdOep8szuBdWjH6X6jg1Wj6zMXiibTmF7PyZfOBzPV4yePYxI6WUK3OIU0cs9sZOfOVFKDFWN53UO/QRhR4dHYWjjc7seLE5Rf01gU3gJZIzW3V0Prmwp8CMmpjW1u1XYUH2r9JHYohQAr7W68KQBJXTMdQDFc627zVP/G5EfObKMjEY/yD7XBB8LxPzX38d/JUvxQ10hvrLcJBFfFrVZVK/vabnujkIdFbNRam9DBv9fQvkOPeBDsK7grBW4esy4yGL5CGVMnZNFY0gw3qJ754EeJCxBkrOfDotlh/9WkwcDJ8JI382Zn9iOLT1D3kOne4L7cGQtFK6WPYnNa3nnmrajFMnI6EZM2ptf+yBeN4JHwdw0rn49rcP/Kq9BH8ULUMANmJSLDcJ1gpT+kE4P5vBfp1uR0mxmPhQzyV6VQZXV+qP27+/lUy/B1sKocPFUuE4OP4f9d7JDRxSYoiFDnMpmQ7DbcrcOlya10841tWzRSC12+4eb7beBkpsEQKefGpEduFPCYuKwYSVp7QlfRgrgQ9UisVx8OEJqKjWB6pZeckrEJmA7YW83FXS2ixvjAiYskwl6MxbRIKpav1EfaxqtIpouzIr5hkay9d0jJsvrIX87qzOQOHN4fi+fgZeaSzGxMCrMfG/yTuY7V9e7sLNlzV76XfLhLduclLsrjIjrdKD8mahblGW2ft4LonLQx+LO+dXRtewrLKmsuOErCFxpfDuypty78kA3CYDkHeKpkVGHlLRTez1ReI71XOtJAZkxham/gxDzeY8cYjKQIPYBjP+zqSiydS59Egde1tVrarJfQ7CBpr6WS0kaH0vCy83UEMalOw8tw7nivJGA3urFWGMIUEwZjtPxcdEs8U2CD3aBF/c2SQB2nKT2YgR+DfvfEPuJ4oZDRgcbRWXKcKKF+bb3VtOI7z6Hj3+bgKiKbFL34F3CowB+pM+Pv21gDf/vhPSe70unLajCqLkGLMUS8srV2y+v2rIoYfIEsi686eCtMhWFRZw8GJ3mIXfONRieFNHagBtryIZxOFRklmrAjKdcoWePCtG6L+MHEXcbfFsFUzrapjM7lTvEFLMUK2QHJ4LuBx/w1Tf6N6kfyFncsFKf/da6MrDEUxc+7HhqfpGgZsx9wAZw73fImxZRQFiAuLSt9Wx9RSymynalNsLPaz/tOalbbyBUnJctVxkY/QpFto5gRuMCDSNBKR3W8AZSyayI9VkYo+LTU7zp6njmUsLXIKDw9wlenekA1vydZ4wPjIP6TKhdwRAbSuYDoJdIsgRfthe8L84piSvSfetRkcp99c9uho+a2BDvubRJQMEmOcF38f3BHH4+0KVIeMYffH/KnHuqdzfttGEcb3HpVTX/yMiixJez/XYPjlyMeU2vHp5cex/0DjARh6vplpJuRV3kMnfrm7JJsGOJWuO8iBHZ2CnW5WGL2xQNuyAmGSh0zIb","layer_level":0},{"id":"857f2ec3-2451-42f5-95db-135b3a43307b","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Error Handling \u0026 Troubleshooting","description":"error-handling","prompt":"Create comprehensive content for this section focused on error management and diagnostic procedures. Document common failure modes such as API connection issues, authentication errors, cache corruption, and invalid parameters. Explain the error handling mechanisms implemented in telegram_manager.sh using set -euo pipefail and explicit validation checks. Detail how Python modules propagate errors back to the shell interface. Provide troubleshooting workflows for diagnosing issues, including log interpretation and cache inspection techniques. Include specific guidance for handling message ordering problems and border detection failures. Document the purpose and usage of test_10_error_handling.sh for validating error scenarios. Address recovery procedures and system resilience features.","parent_id":"","order":9,"progress_status":"completed","dependent_files":"telegram_manager.sh,tests/test_10_error_handling.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.849639621+03:00","gmt_modified":"2025-09-15T21:18:31.996453854+03:00","raw_data":"WikiEncrypted:Jt2SeH9cQITjBGdB/YEfX3N8YSBxdShIw/8QWs/GeiLmzikytsZe8mQYzKYlEl2+LYnEdnHiiXbUeInkBkkjip1tgYgnRE0ZWAEtPnSpFXEV1XHfyRoXAy206GNW5omo+eQyT1yxqg/vPMGiSQmDNacAgsakTiOhQNhd+iY844cRDpZFhjX0CCGmmEcLOjXngfljjbzafo8j9E5kAKg5MYmrlW9y7k5KPTWY6BL1bZLagOF3pR2EINqILQvQwHOzv8xMkzsBfw8ArsgK0YJXF2ALqa97wDGZEBb73lDilzWABloJWGlWJUwS1jQW0zXmpHpTEvbnCPT1XyrwzRL5TUIoqvcT9GZm4g9+5BZV0AqpFexXVdDpcdBVTN6AVhym9UIHaSGphWmdci2uxa/CtOiLAP30DYnj6iO0U2oqwyv9CMtmNCXChJRFQEgaSF41lYVQW9FqVoKF3suv2rEPXaeZ3E0zZZ8diwdMQeTZs+O23bHyIiJVv1dwfTB0iQXSZ+cTbinv638gMV6KYqgTK/EthJthJ1weIict9Oq1ciKjx9er4nsArZAUDJaNlutzFWiebY0uyi52vZmwfL31DSRhASMX0FS3Wp+a4IHHkb3/jRE7A9LzyMejAgUxBiYGc4xHAZgrJuwopRizojSNR4JDxf+nJqZ7S60uos6nOFyxcZReXVs5l9AlIPDljoxMlxrgcsl4Q1bplzAuW0Mc26F6aBZ2q/QC4e9nW6Rz37SRob33tdIlIvL8UMRLdiyH5Pccw/w8fQ79w9/nIbZJ+GZJ94j+BUPQ1C45KMD+RJNcZgkIUfJBCFsYIEDwIuk0jpY89mBj1Q4NuqD01QR4U39tu6dCsIHp6HrBzx/a7Tjay49Jl4Yu2EXA3WU3H1GBe7bd06m77tStqt5tplnuHM8TP3grtaYryBdr994MWfE8W5CHfWnrBKAeww1xZFtRY2l2gOh7If1L//wu09DFlyss6aHgP4cAP1iwwMFZRXbzfTkzQACRk56M+PPVXYJjgeFMOo0iGL74j1QPMOXNiRwFFPmW67Vna8NNCr+RFupCMkK7M/O3Ui1Ft6O0WnVZ3cbKNNtCksv4aPObuivMPjKvz0/k9XBvAl6U+UcTxl9TMvtVRdd8zZp6RfubJYgUaT5CHBHQ2JUIcXfVIzu9jWZ7ilmRlUltS5DtfCW0ECvDUwmUD5aUYE+Xis+54sCOJxblGcWweNFzPPJLRpWGVHJRYD1dENKTNmBSDqWAPfCGKMJtJFwGVwz71SBL1rc+HnMnl0VSCBoYVkQLBEnCkABjWjjU42AHh7AmsJjroGcjKdsSkrRe+uhMthtfLIa68YXmiQZsvbsbGJkltV2cP536JOeGAz76EpH6RFqeYC1UCCTNBCv2q+GuPgPGcrOf/1jYKw4rqIBmVIVw95MsUaUtnAMZ707pAwzm731vnlPo0PJc4Ar9jOZjSkJ9QeRy3YDFt9CzqS2R7Mr3b/6lAaOn6BrAQQilbGIvfvEUvCtsGDbPawn1WCO/HXMEehn4lG7ItbAz2hXxAwaKTM1pnCYZha71aVWDtfU/4mvCKhO9Mpc8+aMJm9lpiQiNeCJ3AGMBpyeI6SYK+LNWph2sBg==","layer_level":0},{"id":"33439bf7-95ed-4964-9bc6-bec0c5d36f60","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Advanced Usage","description":"advanced-usage","prompt":"Create comprehensive content for this section focused on expert-level utilization of the toolset. Explain scripting patterns for automating message monitoring and analysis workflows. Detail how to combine multiple commands in pipelines for complex operations. Describe advanced filtering techniques and custom integration possibilities with external analysis tools. Explain how to leverage the underlying Python modules directly for specialized use cases. Provide performance optimization tips such as cache tuning and batch operations. Include examples of extending the system with new filter types or export formats. Address integration with notification systems and scheduled tasks (cron jobs). Make content accessible to experienced developers while providing practical, production-ready patterns.","parent_id":"","order":10,"progress_status":"completed","dependent_files":"telegram_manager.sh,scripts/telegram_tools/","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.854572984+03:00","gmt_modified":"2025-09-15T21:19:20.208088625+03:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGd1+CmIxcHBpCMdL4Ni/RVxigkzpaTFRLujm6L+U9n9VZGKb+jfmL7lHSlVoYkTImTjMYI+GSmozUrzr1k+5viFh1YwoYWohqkLndxYmmWzEC/By8anCuP51r9Q/C7TKW5vv2cMAH78PFzPkOrMX50hy+BCzo2lDlhDR+yaMvjZTWZTEjW6bOb4blwcuhV9Rk/ZpLN3L/dPg1wNTQNztiLhMuxekVylkE+3wGP8l/dBRDQsB2SbETXzbbyjai8oRe7cnAO/oVUiLA2N1lBjphQY+UDmVWdwsr/1CVm5gQLUD4LKlI8s1XoDTrLcv3nAQnuiXhZNDjbr01XTz9BzDupolQNugSQBA1YHZDj6mrEqVD+fIOzJ/HroCt4zqewSaoTzrjXvlaeUPj0lukd3aA8DWh+YWjS4kitONVKKhscRET0ZG56Rq0RFYOevAW/GmgBFI6ATiQL2T9ez02gniwud2TU7c7P5Zt4UHhu474J+BqYZ/QHEh9M0olz7fUjUrCwa0zq1g9AWiIZMkbLrYtzspYpfecq0A5659NdpKCjfX8h0CxXIFzjQSoVPLzyPXcS9Ah3Em9Cf+hJ4pG2joxMKSPtyN9V5NhVwAb+CHl8xq1JnRC5e4zB2gDoT4W7mBoKCyW8TeCx61nz1AbBUdKSfzvSQB9plhqQ0rdSz64aDTUDxHWHr97OhLsS+oTX3ZmAY4NQA4yoOgnHHPINSS/AiHr7dIyUK8Wpd0PlvX/Wo+nTmn25NgEYS9ADRCw4KQLdAngh/4g6ulIQLOuKRvNEwqYb/mEv2WGBXsQaWgCWaGljJMNRxYSLPLmhWq4b0lx3U6dZqnlJu8AOBEk82NG8p9YK/mk4F3SycOPOq9i0Cr5KaCBKN3Vl2bd6tPHgGqvzefZQ+66qlbCAwEULL0Gor4JpWbILYHFGc+B775E6NuddnnT61/1X+edaj5MYiYzWhxdc7uxhS5WJSBK42pXicWDF0w5ISSQRuGGzgn7apsjBr4uJgfGzu94I4UCjDsGYeaFutOYRKNahss3lpRlcJiBU+3+g0WQZ09BULSvgf1ztm9J+Ws1sILvQcyDffJzEPN1gnTS6yjAJ3BzaWt6rjUC5cBSpeAOulU7zr8j6Jt7JdQyx1ujOo1ewjOdxtK+tL6UfmAGWkx0WSXfPXA3u8nAeB0P6awlgcknGIbE5VTRs/N+3rT1So3bjEErEfA9h5lvGLhitoWOkxZrJN1r/h3Ra90QzYsEadxlegZSOV8IAPSZ8nPPBgAlTZ2MpANNdUB+KblcJ10lrzh/BWLzKmoK7vM6Cf7GA77rrVnhqtyyZ5OM95h0hMzm3QAphZjnV6zNDYnSrFuAgL0J3bLi+JW0UPp1CAMj26lAStPWPRQRDmv33YKb80PosKzP4nxoR/BFLeRkU/snU06fm+xhSiQ6UkpjwKQGR+OziSWwsM9CMQhN7VPIUR8XQEZ+kXHCfnAQ2wPhKuaHbwOT4YSeYj9H+HAdBMLS8quiK0ploD9VtIjmW2a5V+lQjzA7xXEO6pxZwP59zwkEj1EGh4Yc9t6gzWS9T1SRalSbV46HQEUS","layer_level":0},{"id":"159d1aec-ae95-4a14-afb7-448d120c0ab6","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","name":"Security Considerations","description":"security-considerations","prompt":"Create comprehensive content for this section focused on security aspects of the system. Explain the risks associated with storing Telegram API credentials and session strings in the .env file. Document best practices for securing the configuration file with proper file permissions and access controls. Address input validation mechanisms in place to prevent command injection and other attacks. Explain the security implications of using StringSession in the send command implementation. Discuss rate limiting considerations to avoid API abuse. Include guidance on secure session management and credential rotation. Reference error handling tests that validate security-related failure modes. Provide recommendations for deploying the tool in shared or production environments.","parent_id":"","order":11,"progress_status":"completed","dependent_files":".env,telegram_manager.sh,tests/test_10_error_handling.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-15T21:12:16.859126112+03:00","gmt_modified":"2025-09-15T21:19:22.755745039+03:00","raw_data":"WikiEncrypted:JNhY5K+GVMrcGagKRy9MkwBNr2FawYu4uXCzwRbb0TRuoZPmPPEZRCYkVSY0yBQz4nY6Q0CjyCrLmr/hMl6peHDF2mxmi6/H2FGkP12XkLiziZwiHq3YK0i4bRz2IIJe9PpZA3QaikCZkipoS6wGhyFyNHYKjL++jURcutR83dSTbH5M6KqsbI5/rGp8cLeVwVILbfkvbYOuvwp3sgeFLCOiawgiKKNbDaC3RoUaFt0TvddN7oftGJKukP6eCMmKrITXjgO/Op4vTQbiK6lcdjXklZgdc6agBcCAy0+LcluKyCVxqAmEZzFHQ+xdkjgr1DxyEaPN9A7p481eHue1NjblCw+CTlbirAqO6vL1pDEEg3mpXt1Vy8Sf+d8MWjB786g/FIExg6Q50+H0mzDZYc/w4r6VgWisW5BWFROP1oD5Bl6vX2CAJR4KaUrDCWdvBPSXMlWNZu18jBQ5jMf55Xf4WyvKBVT96aI+S7ml68HdZ0U2RR3RQ0PVUDvprnEe6ING/5TUsjRj7zdE765RtHVScCn+Tl46HHBA+EAe8aUDjUWbd1zCgsbfkd4N6DCtoIelTOzyVxm8fZj9eIVf9AQedaUz4/dzZe59Sdne0QGECKVMIPDA6Thr7ZDJZIoo1An2bkP5X1tMI36sI+mBwgkx2Qjlw3oQiebN5QZbWGMB8aB7H9tRekLoPo8Dl4dZGs6BL88YvidRjGenFW0Qte3onJhc4hfb+ZO6Lqom4eWd9Pe7RjhyNOrGn/Bo3cmUrYqmhsl030yWbTPgDiee7elY/Cx8rArTc0cbpxPp0NuFBIBEmO5j238zeREtnrltqPrXtpQkLSvq0ZU7oRf3VcvSQF/PHiO8XHLUOVGeWKfvzue01GQMVihEQaRAcTJcpsrMyTCQRHD9QCk5+zVH6kZzr/6QqshbaGRyydcKOC0ET/SKMn7vUY+KPaOAwPLbWhP1h33lkqJyIh4gfGApXoA/MaL1KqkxrS2FGvrZAeILOgC6I9o4ATze5DJspN58Bb8VU4Nt7aOl11G4CEwaGT/8cdiLFMvIJWXBjNDX0lobE4r2GLUqnq81jg0TN1vaYra3VNgzrEWRrieT/egSLm8flveJ+5M2AvNUTleCR5eubxw7uGleWQrK2xNdfzUgCPVn19OQR6xd9PwZQHLQlgbOC7FVH0WnuPfIEe7m7AANJONrevwB7vPbJatPzQozNShVL4eDr2Digbr6Q09BqWm1O6huZ07khUBgPfy15B8Uzv1R+hL84WxtsuBj2fdTnLLhb7nABAuKye02Z44WBJDeDODeZtIRY0nFzDHk/Wsu0eHWLk0bCkv2FaN9MklXDhmjc9F6BB1MpAmkVK1qHABZjUQfuXgG4Moykn8ijxsVAs/iCQnjVX6uufcDu8B5R/7aXmGnLieIemr+L5qXYDULlDg1TrU9uFTU5lRP3v9x0szPFPEASt9mXaG1MwK1nD1tr5wWCJ0Lp83Hjv/R5a2SADXHbILeELHQInD9zPAWE8AA4a3VAuijifDpuGOZu8e24p24kkTwJwFPqs/bCjfHVFdYtk5dhjrejBaGjkj2brN/4ez9GA/9AkRH2NmqVfEbPDBTVPMWFkz+8yP0+w==","layer_level":0}],"wiki_items":[{"catalog_id":"b497051f-82f5-4cae-b350-1488da9de1ee","content":"","title":"Installation \u0026 Setup","description":"installation-setup","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"e140f13a-7dd6-4c8f-abff-4831eaef9fba","gmt_create":"2025-09-15T21:14:45.345652568+03:00","gmt_modified":"2025-09-15T21:14:45.358103334+03:00"},{"catalog_id":"f09db685-51a9-4251-ad6d-c1173e2dd978","content":"","title":"Tool Overview \u0026 Core Value","description":"tool-overview","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"3d4e84da-d325-4d99-ac74-ff9d2132f201","gmt_create":"2025-09-15T21:14:55.948629556+03:00","gmt_modified":"2025-09-15T21:14:55.957889325+03:00"},{"catalog_id":"84bcc4a0-82f8-4ca2-88f0-fb5b6e4fbefd","content":"","title":"Command Reference","description":"command-reference","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"68f472c0-9702-4084-96ea-b0c3cb83f842","gmt_create":"2025-09-15T21:15:59.02449602+03:00","gmt_modified":"2025-09-15T21:15:59.035341886+03:00"},{"catalog_id":"733fc1bf-6dda-4d10-bbce-d7a190da4823","content":"","title":"Caching System","description":"caching-system","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"879dcdd1-435c-4865-b20d-e6d3464e0284","gmt_create":"2025-09-15T21:16:05.48960576+03:00","gmt_modified":"2025-09-15T21:16:05.501755237+03:00"},{"catalog_id":"50ecbdb9-9120-43fb-9a0e-12f7fe330188","content":"","title":"Message Filtering","description":"message-filtering","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"221a4b56-ca7d-4f20-8d66-4530ba9258f7","gmt_create":"2025-09-15T21:16:49.140679042+03:00","gmt_modified":"2025-09-15T21:16:49.155794738+03:00"},{"catalog_id":"60a4bba9-6f1e-4bd8-9f6b-26080c9c2856","content":"","title":"Data Export","description":"data-export","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"e7637bbc-5101-41cf-aa0d-ac102437cade","gmt_create":"2025-09-15T21:17:01.643687143+03:00","gmt_modified":"2025-09-15T21:17:01.65941097+03:00"},{"catalog_id":"83e2c111-02ec-4bb7-8d62-816662f21ec5","content":"","title":"Border Detection System","description":"border-detection","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"9c1a0fc3-5908-4c06-a87b-c253bfb25488","gmt_create":"2025-09-15T21:17:39.998750576+03:00","gmt_modified":"2025-09-15T21:17:40.016509041+03:00"},{"catalog_id":"1ce07429-5406-4ba7-92ca-31b81b481d88","content":"","title":"Configuration","description":"configuration","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"d168e090-fd78-4000-9ce1-bce125021de4","gmt_create":"2025-09-15T21:17:53.311008501+03:00","gmt_modified":"2025-09-15T21:17:53.321502503+03:00"},{"catalog_id":"857f2ec3-2451-42f5-95db-135b3a43307b","content":"","title":"Error Handling \u0026 Troubleshooting","description":"error-handling","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"ceb7071a-ea94-4d9f-aab9-c8d03cf7ea2f","gmt_create":"2025-09-15T21:18:31.986394489+03:00","gmt_modified":"2025-09-15T21:18:31.996660979+03:00"},{"catalog_id":"ac41205e-f37d-4755-9517-8abc897425dc","content":"","title":"Testing Framework","description":"testing-framework","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"e4823770-5631-450d-bc89-7c1c06d2f005","gmt_create":"2025-09-15T21:18:32.09697081+03:00","gmt_modified":"2025-09-15T21:18:32.112849044+03:00"},{"catalog_id":"33439bf7-95ed-4964-9bc6-bec0c5d36f60","content":"","title":"Advanced Usage","description":"advanced-usage","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"a69b6c20-38f2-47b2-8352-944ec0ddbd74","gmt_create":"2025-09-15T21:19:20.193350961+03:00","gmt_modified":"2025-09-15T21:19:20.208335584+03:00"},{"catalog_id":"159d1aec-ae95-4a14-afb7-448d120c0ab6","content":"","title":"Security Considerations","description":"security-considerations","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"ea858109-f19e-42fc-9c04-c4e820511b60","gmt_create":"2025-09-15T21:19:22.746929274+03:00","gmt_modified":"2025-09-15T21:19:22.755967843+03:00"},{"catalog_id":"3796eb1a-35d7-4d91-8046-9d2781cecf20","content":"","title":"Fetch Command","description":"fetch-command","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"d5caf363-8d5d-4ce1-8dec-3775f3c81a26","gmt_create":"2025-09-15T21:20:02.694494218+03:00","gmt_modified":"2025-09-15T21:20:02.727700608+03:00"},{"catalog_id":"8ba8b779-0b84-4565-b92c-2395a9e7265a","content":"","title":"Core Architecture and Component Interactions","description":"core-architecture","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"2f4d8af4-e2b1-483a-b53a-296c8fb41020","gmt_create":"2025-09-15T21:20:07.130718447+03:00","gmt_modified":"2025-09-15T21:20:07.164510565+03:00"},{"catalog_id":"d968152f-0a6c-4f8c-86b9-29ce56ab3b0e","content":"","title":"Cache Validation","description":"cache-validation","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"7b811cb3-21a2-479d-bfd7-aecb48d0fc5e","gmt_create":"2025-09-15T21:20:57.375890181+03:00","gmt_modified":"2025-09-15T21:20:57.391753868+03:00"},{"catalog_id":"80688897-b7d8-453e-8484-ec06ec6a9860","content":"","title":"Boundary-Aware Detection","description":"boundary-aware-detection","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"c2857a08-fc3a-4e6f-a383-8342a7be40aa","gmt_create":"2025-09-15T21:21:03.028944696+03:00","gmt_modified":"2025-09-15T21:21:03.04856959+03:00"},{"catalog_id":"631f75bf-2879-4820-9693-4c61411dfafe","content":"","title":"Unit Tests","description":"unit-tests","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"3c0da9e2-b1c8-4b66-8b4c-8348ab0fb34a","gmt_create":"2025-09-15T21:21:55.045397942+03:00","gmt_modified":"2025-09-15T21:21:55.057311161+03:00"},{"catalog_id":"7e23f1c1-b9a4-4317-bbc2-36fa3c732253","content":"","title":"Scripting and Automation","description":"scripting-automation","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"cbdfa890-1e50-45bd-830b-49012f122829","gmt_create":"2025-09-15T21:22:11.452586633+03:00","gmt_modified":"2025-09-15T21:22:11.4676+03:00"},{"catalog_id":"b93ef46f-92d7-44c4-847e-82a1b1b2c17c","content":"","title":"Key Features and Use Cases","description":"key-features","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"4a415af4-9d3b-4f29-8bab-5f4bd605b18d","gmt_create":"2025-09-15T21:22:44.722166605+03:00","gmt_modified":"2025-09-15T21:22:44.729296277+03:00"},{"catalog_id":"15220635-5cc1-4763-8514-d2ebc0258e8a","content":"","title":"Read Command","description":"read-command","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"76eecd4a-b7d4-4acf-a153-c2b8040db0d7","gmt_create":"2025-09-15T21:23:03.00377673+03:00","gmt_modified":"2025-09-15T21:23:03.015904117+03:00"},{"catalog_id":"627d7866-edf7-4f73-82f0-8526ff5d77e3","content":"","title":"TTL Management","description":"ttl-management","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"fe47116f-0231-4771-bcee-c75a15c42d71","gmt_create":"2025-09-15T21:23:32.099703337+03:00","gmt_modified":"2025-09-15T21:23:32.107827828+03:00"},{"catalog_id":"216628b2-a951-4e36-bfe9-13d33fe9f24f","content":"","title":"Ultra-Robust Detection","description":"ultra-robust-detection","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"09b30c1a-765e-4e5c-a15e-ebc2a552c785","gmt_create":"2025-09-15T21:23:52.724888019+03:00","gmt_modified":"2025-09-15T21:23:52.74318744+03:00"},{"catalog_id":"b03c0767-2389-4438-89f3-be4d85cfe7e2","content":"","title":"Integration Tests","description":"integration-tests","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"a11dd5c3-36ee-4027-ad3d-f613ad0c99ba","gmt_create":"2025-09-15T21:24:43.317024386+03:00","gmt_modified":"2025-09-15T21:24:43.326228723+03:00"},{"catalog_id":"12180e70-be56-4390-9019-b0d78ee6a09e","content":"","title":"Performance Optimization","description":"performance-optimization","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"d9ba0417-e2e6-4ee5-b2f5-c5cf859a2235","gmt_create":"2025-09-15T21:24:56.981589415+03:00","gmt_modified":"2025-09-15T21:24:56.993574256+03:00"},{"catalog_id":"e6647212-567e-4b78-a3d4-281077869414","content":"","title":"Configuration and Environment Setup","description":"configuration-and-setup","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"a090c4f4-30c7-4844-9b39-faf10650cb9c","gmt_create":"2025-09-15T21:25:24.997638101+03:00","gmt_modified":"2025-09-15T21:25:25.016516821+03:00"},{"catalog_id":"dd24385d-b496-4c41-8438-ce0615993854","content":"","title":"Send Command","description":"send-command","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"5798dcab-e4ae-4240-a784-38225b35d0fa","gmt_create":"2025-09-15T21:25:36.702378255+03:00","gmt_modified":"2025-09-15T21:25:36.709954505+03:00"},{"catalog_id":"0f936ca2-fd48-4955-b487-b7b50df34b50","content":"","title":"Cache Cleanup","description":"cache-cleanup","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"c20ea687-b979-496f-ae9b-dd9558783f0b","gmt_create":"2025-09-15T21:26:14.394706464+03:00","gmt_modified":"2025-09-15T21:26:14.404517951+03:00"},{"catalog_id":"e3d218c0-7d80-4c30-a506-8c4afbd23d2d","content":"","title":"Fallback Border Validation","description":"fallback-border-validation","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"19b746f7-74fa-460e-9650-cf163f326e63","gmt_create":"2025-09-15T21:26:34.028082724+03:00","gmt_modified":"2025-09-15T21:26:34.038198667+03:00"},{"catalog_id":"fcb45c58-40e9-420a-8e87-8dab99b10c9e","content":"","title":"Error Handling Tests","description":"error-handling-tests","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"571aee27-bb66-40c4-91a0-b20c7d733470","gmt_create":"2025-09-15T21:27:10.788698831+03:00","gmt_modified":"2025-09-15T21:27:10.800602143+03:00"},{"catalog_id":"4752f2c6-aad4-4945-bd6b-4c5b50b18b67","content":"","title":"System Integration","description":"system-integration","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"d8fdf2a2-ed60-43ac-a513-85b9ce89268b","gmt_create":"2025-09-15T21:28:10.353275511+03:00","gmt_modified":"2025-09-15T21:28:10.364879326+03:00"},{"catalog_id":"cf56aa21-cf11-4e1e-a34c-29832923637e","content":"","title":"Data Flow and Message Processing Pipeline","description":"data-flow-and-processing","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"5734c5e5-904d-4c56-be84-483d1bf1a0e6","gmt_create":"2025-09-15T21:28:11.628056668+03:00","gmt_modified":"2025-09-15T21:28:11.63873115+03:00"},{"catalog_id":"64472780-444d-4672-b036-9c0c913c449e","content":"","title":"Boundary Detection Integration","description":"boundary-detection-integration","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"4d95b056-7940-4726-96c7-4f9fea11fd15","gmt_create":"2025-09-15T21:29:05.923138856+03:00","gmt_modified":"2025-09-15T21:29:05.935763156+03:00"},{"catalog_id":"fa0fba01-cdd4-47dd-8d96-2b597cab099d","content":"","title":"JSON Export Command","description":"json-command","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"40b3427e-56c5-4fb5-879d-312de3390819","gmt_create":"2025-09-15T21:29:12.701092766+03:00","gmt_modified":"2025-09-15T21:29:12.712697955+03:00"},{"catalog_id":"a0ef7c0e-8388-4298-ae3b-2ff8c924d680","content":"","title":"Border Detection Tests","description":"border-detection-tests","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"c4df798e-8fc4-442b-bc58-23daa0cd3cb1","gmt_create":"2025-09-15T21:29:49.724894743+03:00","gmt_modified":"2025-09-15T21:29:49.736626094+03:00"},{"catalog_id":"b286a885-b416-46a6-b7fc-7fd60d26c0e1","content":"","title":"Direct Module Usage","description":"direct-module-usage","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"443a9f57-6133-473f-af94-b812fe883ed5","gmt_create":"2025-09-15T21:29:52.927449367+03:00","gmt_modified":"2025-09-15T21:29:52.937729752+03:00"},{"catalog_id":"87200b84-4de7-4dd3-b68d-058217f43888","content":"","title":"Cache Information Command","description":"cache-command","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"3d9c10c7-2c88-4609-8680-c14f6567fb99","gmt_create":"2025-09-15T21:30:39.900067298+03:00","gmt_modified":"2025-09-15T21:30:39.910269251+03:00"},{"catalog_id":"8648b443-f8fd-44a1-bc8c-a5d093aebea9","content":"","title":"Cache Cleanup Command","description":"clean-command","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"9a28f1d9-1546-4324-84cf-68a00e4a9d77","gmt_create":"2025-09-15T21:31:12.283174524+03:00","gmt_modified":"2025-09-15T21:31:12.294983189+03:00"},{"catalog_id":"f0910a8b-726e-4ddd-a7f4-2c90b59c38f3","content":"","title":"Message Fetching Module","description":"fetch-module","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"25b7e402-66d0-48af-b396-1f18c6aa50fe","gmt_create":"2025-09-15T21:31:53.856679521+03:00","gmt_modified":"2025-09-15T21:31:53.875225774+03:00"},{"catalog_id":"3dff707d-f786-4427-aae1-0776ed48d2f3","content":"","title":"Message Management","description":"message-management","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"385c41f2-01fd-46b9-b96a-cf655c37fbab","gmt_create":"2025-09-15T21:32:20.032791209+03:00","gmt_modified":"2025-09-15T21:32:20.047004968+03:00"},{"catalog_id":"0abee4b8-9eba-4ac3-8819-28ebd0d11dba","content":"","title":"Caching System Module","description":"cache-module","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"bd72e6c7-ba1b-4445-afcd-21846567f92f","gmt_create":"2025-09-15T21:32:47.081221233+03:00","gmt_modified":"2025-09-15T21:32:47.093493382+03:00"},{"catalog_id":"0d5b5ed4-5a27-4ab0-a3ac-cbdf73fd299d","content":"","title":"Cache Operations","description":"cache-operations","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"9842037b-8c98-4f28-98b4-f23123463914","gmt_create":"2025-09-15T21:33:19.171533316+03:00","gmt_modified":"2025-09-15T21:33:19.201922744+03:00"},{"catalog_id":"543258d9-be81-46ad-bff4-a06024f9756c","content":"","title":"Message Filtering Module","description":"filter-module","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"3faa0780-3943-4f9d-92e5-85214fa5650a","gmt_create":"2025-09-15T21:33:38.859762794+03:00","gmt_modified":"2025-09-15T21:33:38.869959203+03:00"},{"catalog_id":"8cab1c6b-9f0c-43cc-a1dd-baab827557f1","content":"","title":"JSON Export Module","description":"export-module","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"1fcd652b-5d12-4368-b261-eb3a760e3d24","gmt_create":"2025-09-15T21:34:15.685673441+03:00","gmt_modified":"2025-09-15T21:34:15.693639415+03:00"},{"catalog_id":"60c165ee-6b79-4a52-9feb-79c8de8f7b82","content":"","title":"Filtering Capabilities","description":"filtering-capabilities","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"ad3e2c7f-ae6f-4b31-ac0d-28142703fdd3","gmt_create":"2025-09-15T21:34:17.612698672+03:00","gmt_modified":"2025-09-15T21:34:17.62429732+03:00"},{"catalog_id":"ce20b3f7-baa9-4eb0-8ec7-4e5b17772055","content":"","title":"Data Export","description":"data-export","extend":"{}","progress_status":"completed","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","id":"188c2d24-3038-4d17-abc3-10969b0aba0b","gmt_create":"2025-09-15T21:35:04.891452744+03:00","gmt_modified":"2025-09-15T21:35:04.906179382+03:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Comprehensive Project Analysis: Telegram Message Management System\n\n## 1. Project Introduction\n\n### Purpose Statement\nThis project provides a command-line interface for managing Telegram messages with intelligent caching, filtering, and message retrieval capabilities. It enables users to fetch, read, filter, and analyze Telegram channel messages efficiently while maintaining a smart caching system to minimize API calls.\n\n### Core Goals and Objectives\n- Provide a simple interface for Telegram message retrieval and management\n- Implement intelligent caching with time-to-live (TTL) rules based on message recency\n- Enable efficient filtering of messages by date, pattern, and content\n- Support message export in JSON format for further analysis\n- Ensure reliable message ordering and border detection for date-based queries\n\n### Target Audience\n- Developers and technical users who need to analyze Telegram channel content\n- System administrators managing Telegram-based communication\n- Data analysts working with Telegram message archives\n- Automation engineers integrating Telegram data into workflows\n\n## 2. Technical Architecture\n\n### Component Breakdown\nThe system follows a modular architecture with clear separation of concerns:\n\n```mermaid\nflowchart TD\n    A[telegram_manager.sh] --\u003e B[Core Python Modules]\n    B --\u003e C[telegram_fetch.py]\n    B --\u003e D[telegram_cache.py]\n    B --\u003e E[telegram_filter.py]\n    B --\u003e F[telegram_json_export.py]\n    C --\u003e G[Telegram API]\n    D --\u003e H[Cache Storage]\n    E --\u003e H\n    F --\u003e H\n    A --\u003e I[Configuration .env]\n```\n\n### Design Patterns\nThe project implements several key design patterns:\n\n- **Facade Pattern**: `telegram_manager.sh` serves as a unified interface to complex underlying operations\n- **Single Responsibility Principle**: Each Python module handles a specific concern (fetching, caching, filtering, exporting)\n- **Configuration Management**: Centralized credentials in `.env` file with secure loading\n- **Intelligent Caching**: TTL-based cache validation with different rules for different time ranges\n\n### System Relationships\n```mermaid\ngraph LR\n    CLI[telegram_manager.sh] --\u003e Fetch[telegram_fetch.py]\n    CLI --\u003e Cache[telegram_cache.py]\n    CLI --\u003e Filter[telegram_filter.py]\n    CLI --\u003e Export[telegram_json_export.py]\n    Fetch --\u003e CacheStorage[telegram_cache/]\n    Filter --\u003e CacheStorage\n    Export --\u003e CacheStorage\n    Cache --\u003e CacheStorage\n    CacheStorage --\u003e|JSON Files| Disk[(File System)]\n```\n\n### Data Flow Diagram\n```mermaid\nflowchart TD\n    A[User Command] --\u003e B[telegram_manager.sh]\n    B --\u003e C{Command Type}\n    C --\u003e|fetch| D[telegram_fetch.py]\n    C --\u003e|read| E[telegram_cache.py]\n    E --\u003e|cache valid?| F{Yes/No}\n    F --\u003e|Yes| G[Use cached data]\n    F --\u003e|No| D\n    D --\u003e H[Telegram API]\n    H --\u003e I[Save to cache]\n    I --\u003e J[Process with telegram_filter.py]\n    J --\u003e K[Display results]\n    C --\u003e|json| L[telegram_json_export.py]\n    L --\u003e M[Export JSON]\n    M --\u003e K\n```\n\n## 3. Key Implementation\n\n### Main Entry Points\n- **telegram_manager.sh**: Primary entry point for all operations\n- **Core Python modules**: Handle specific functionality as invoked by the shell script\n\nSources:\n- [telegram_manager.sh](/home/almaz/MCP/FALLBACK_SCRIPTS/telegram_manager.sh)\n\n### Core Modules\n- **telegram_fetch.py**: Retrieves messages from Telegram API and caches them as JSON\n- **telegram_cache.py**: Manages cache lifecycle with intelligent TTL rules\n- **telegram_filter.py**: Filters cached messages by date, pattern, or range\n- **telegram_json_export.py**: Exports filtered messages as raw JSON for analysis\n\nSources:\n- [telegram_fetch.py](/home/almaz/MCP/FALLBACK_SCRIPTS/scripts/telegram_tools/core/telegram_fetch.py)\n- [telegram_cache.py](/home/almaz/MCP/FALLBACK_SCRIPTS/scripts/telegram_tools/core/telegram_cache.py)\n- [telegram_filter.py](/home/almaz/MCP/FALLBACK_SCRIPTS/scripts/telegram_tools/core/telegram_filter.py)\n- [telegram_json_export.py](/home/almaz/MCP/FALLBACK_SCRIPTS/scripts/telegram_tools/core/telegram_json_export.py)\n\n### Configuration Approach\nThe system uses environment variables loaded from a `.env` file for configuration, including Telegram API credentials and session information.\n\nSources:\n- [.env](/home/almaz/MCP/FALLBACK_SCRIPTS/.env)\n\n### External Dependencies\n- **Telethon**: Python library for Telegram API interaction\n- **Python 3**: Runtime environment\n- **Bash**: Shell scripting environment\n\n### Integration Points\n- **Telegram API**: Primary integration for message retrieval and sending\n- **File System**: Cache storage in JSON format\n- **Command Line Interface**: User interaction through shell commands\n\n### Component Relationship Diagram\n```mermaid\ngraph TD\n    CLI[telegram_manager.sh] --\u003e Fetch[telegram_fetch.py]\n    CLI --\u003e Cache[telegram_cache.py]\n    CLI --\u003e Filter[telegram_filter.py]\n    CLI --\u003e Export[telegram_json_export.py]\n    Fetch --\u003e CacheStorage[telegram_cache/]\n    Filter --\u003e CacheStorage\n    Export --\u003e CacheStorage\n    Cache --\u003e CacheStorage\n    CacheStorage --\u003e|JSON| Fetch\n    CacheStorage --\u003e|JSON| Filter\n    CacheStorage --\u003e|JSON| Export\n```\n\n## 4. Key Features\n\n### Functionality Overview\nThe system provides comprehensive Telegram message management capabilities:\n\n- **Message Fetching**: Retrieve messages from any public Telegram channel\n- **Smart Caching**: Intelligent cache management with TTL rules\n- **Message Filtering**: Filter messages by date, pattern, or content\n- **JSON Export**: Export messages in raw JSON format for analysis\n- **Cache Management**: View and clean cache files\n- **Message Sending**: Send messages to Telegram users or channels\n\n### Implementation Highlights\n- **Intelligent Cache TTL**: Different expiration times for different message types (5 minutes for today's messages, 1 hour for recent, 24 hours for archive)\n- **Fallback Border Detection**: Auto-fetches additional messages when border detection is uncertain\n- **Moscow Time Conversion**: Messages are stored with UTC+3 (Moscow) timestamps\n- **Comprehensive Error Handling**: Robust error handling throughout the codebase\n\n### Feature Architecture Diagram\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Idle\n    Idle --\u003e Fetch: fetch command\n    Idle --\u003e Read: read command\n    Idle --\u003e Send: send command\n    Idle --\u003e JSON: json command\n    Idle --\u003e Cache: cache command\n    Idle --\u003e Clean: clean command\n    \n    Fetch --\u003e API: Call Telegram API\n    API --\u003e CacheStorage: Save JSON\n    CacheStorage --\u003e Success\n    \n    Read --\u003e CheckCache: Validate cache\n    CheckCache --\u003e UseCache: Cache valid\n    CheckCache --\u003e Fetch: Cache stale\n    UseCache --\u003e Filter: Apply filters\n    Filter --\u003e Display\n    \n    Send --\u003e API: Send message\n    API --\u003e Success\n    \n    JSON --\u003e ReadCache: Load cached data\n    ReadCache --\u003e Export: Format JSON\n    Export --\u003e Display\n    \n    Cache --\u003e ListFiles: Show cache info\n    ListFiles --\u003e Display\n    \n    Clean --\u003e RemoveFiles: Delete old caches\n    RemoveFiles --\u003e Success\n    \n    Success --\u003e Idle\n    Display --\u003e Idle\n```\n\u003c/blog\u003e","gmt_create":"2025-09-15T21:10:36.719224478+03:00","gmt_modified":"2025-09-15T21:10:36.719224669+03:00","id":"00065f62-46b8-4930-8b20-d0b5e3ef918b","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":""},"wiki_readme":{"content":"No readme file","gmt_create":"2025-09-15T21:09:50.379287126+03:00","gmt_modified":"2025-09-15T21:09:50.379287206+03:00","id":"b50527de-5c11-4958-9f6f-77086a56870c","repo_id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":""},"wiki_repo":{"id":"becb6877-bf6f-4f26-8c12-ac71f5ab245a","workspace_path":"","name":"FALLBACK_SCRIPTS","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── scripts/telegram_tools\\n│   ├── core\\n│   │   ├── telegram_cache.py\\n│   │   ├── telegram_fetch.py\\n│   │   ├── telegram_fetch_large.py\\n│   │   ├── telegram_filter.py\\n│   │   └── telegram_json_export.py\\n│   ├── simple_boundary_check.py\\n│   └── telegram_smart_cache.py\\n├── tests\\n│   ├── BUG_REPORT_message_ordering.md\\n│   ├── PROPOSED_FIX_message_ordering.md\\n│   ├── border_message_detector.sh\\n│   ├── boundary_aware_first_message_detector.sh\\n│   ├── comprehensive_message_analysis.sh\\n│   ├── correct_first_message_detector.sh\\n│   ├── fix_first_message_detection.sh\\n│   ├── get_first_message_today.sh\\n│   ├── simple_border_test.sh\\n│   ├── simple_first_message_detector.sh\\n│   ├── test_01_range_parameter.sh\\n│   ├── test_01_range_simple.sh\\n│   ├── test_02_limit_parameter.sh\\n│   ├── test_02_limit_simple.sh\\n│   ├── test_03_offset_simple.sh\\n│   ├── test_04_channel_simple.sh\\n│   ├── test_05_date_today.sh\\n│   ├── test_09_integration.sh\\n│   ├── test_09_integration_fixed.sh\\n│   ├── test_10_error_handling.sh\\n│   ├── test_date_calculations.sh\\n│   ├── test_first_message_border_detection.sh\\n│   ├── test_first_message_today.sh\\n│   ├── test_ordering_fix.sh\\n│   ├── test_ordering_integration.sh\\n│   ├── timezone_aware_first_message_detector.sh\\n│   └── ultra_robust_first_message_detector.sh\\n├── CALUDE.md\\n└── telegram_manager.sh\\n\"","current_document_structure":"WikiEncrypted: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","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"787e10c7ed9c86456a568a9cc9d9fd378e253169","last_commit_update":"2025-09-04T16:19:49+03:00","gmt_create":"2025-09-15T20:21:46.060539492+03:00","gmt_modified":"2025-09-15T21:35:05.558999061+03:00","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"feature/telegram-manager-v2-multi-session\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}